{"version":3,"sources":["api/api.module.js","app/fct_app.module.js","core/core.module.js","core/core.config.js","api/interceptors/authInterceptor.factory.js","api/services/event.factory.js","api/services/faculty.factory.js","api/services/facultyAuth.factory.js","api/services/member.factory.js","api/services/memberAuth.factory.js","core/services/fctToast.factory.js","core/directives/core.eventCard.directive.js","core/directives/core.fileUpload.directive.js","core/controllers/in_fc/addStudentCoordinator.controller.js","core/controllers/in_fc/ConfirmRegistrationModalController.controller.js","core/controllers/in_fc/confirmRegistrations.controller.js","core/controllers/in_fc/confirmRegistrations1.controller.js","core/controllers/in_fc/facultySettings.controller.js","core/controllers/in_fc/registrationDetails.controller.js","core/controllers/in_fc/verifyCoordinator.controller.js","core/controllers/in_team/addEvent.controller.js","core/controllers/in_team/dashboard.controller.js","core/controllers/in_team/eachEvent.controller.js","core/controllers/in_team/eventCard.controller.js","core/controllers/in_team/eventRegistration.controller.js","core/controllers/in_team/memberSettings.controller.js","core/controllers/in_team/participantRegistration.controller.js","core/controllers/in_team/showEvent.controller.js","core/controllers/in_team/updateEvent.controller.js","core/controllers/layout/facultyLayout.controller.js","core/controllers/layout/memberLayout.controller.js","core/controllers/out/facultyForgotPasswordApply.controller.js","core/controllers/out/facultyForgotPasswordSet.controller.js","core/controllers/out/facultyLogin.controller.js","core/controllers/out/facultyRegister.controller.js","core/controllers/out/memberForgotPasswordApply.controller.js","core/controllers/out/memberForgotPasswordSet.controller.js","core/controllers/out/memberLogin.controller.js","core/controllers/out/memberRegister.controller.js","core/animations/core.slideVertical.animation.js"],"names":["angular","module","initializeCore","$rootScope","$interval","active","preloader","$on","startPreloader","stopPreloader","pageTransition","alreadyRedirected","constant","TweenMax","TimelineMax","run","$inject","configName","$mdThemingProvider","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","activate","setTheme","setRoutes","addInterceptors","interceptors","push","theme","primaryPalette","themePalette","primary","accentPalette","accent","warnPalette","warn","html5Mode","when","otherwise","state","templateUrl","resolve","redirectLoggedIn","controller","controllerAs","redirectFacultyNotLoggedIn","redirectTeamNotLoggedIn","url","facultyAuthService","memberAuthService","$q","$state","$timeout","defer","facultyAuthenticate","checkFacultyLoggedIn","faculty","verified","go","memberAuthenticate","checkMemberLoggedIn","reject","promise","config","authInterceptor","$window","$location","getToken","localStorage","request","token","authHead","headers","requestError","rejection","response","responseError","status","path","service","factory","eventService","$http","addEvent","eventData","post","then","resolveFunc","catch","rejectFunc","getEvent","get","getSingleEvent","id","updateEvent","eventId","put","deleteEvent","delete","error","facultyService","getEachFaculty","link","baseLink","errorFunc","confirmRegistration","registration","getFacultyRegistrations","editStudentCoordinator","student","editStudentCoordinatorSuccess","editStudentCoordinatorFailure","getStudentCoordinator","updateFaculty","data","getRegistrationData","payload","split","atob","JSON","parse","isDefined","collegeId","email","mobileno","name","rejected","forgot_password","_id","exp","Date","now","replaceToken","removeToken","saveToken","removeItem","facultyLogin","user","facultyLoginSuccess","facultyLoginFailure","facultyRegister","facultyRegisterSuccess","facultyRegisterFailure","$broadcast","getColleges","getCollegesSuccess","getCollegesFailure","changeFacultyPassword","passwordObject","facultyId","changePasswordLink","patch","changePasswordSuccess","changePasswordFailure","facultyForgotPasswordApply","facultyForgotPasswordApplySuccess","facultyForgotPasswordApplyFailure","facultyForgotPasswordSet","facultyForgotPasswordSetSuccess","facultyForgotPasswordSetFailure","logout","checkVerified","console","log","checkVerifiedSuccess","checkVerifiedFailure","memberService","$mdDialog","getAllFacultyCoordinators","responseFunc","verifyFaculty","rejectFaculty","getTotalRegistrations","getRegistrationsByEvent","getVerifyFacultyStudent","getUnverifiedFaculty","getUnconfirmedRegistration","getEventRegistrationExcel","getConfirmedRegistrationCount","exportParticipantList","getDeleteModal","confirm","title","textContent","ok","cancel","show","isUndefined","registrations_count","member","memberLogin","memberLoginSuccess","memberLoginFailure","memberRegister","memberRegisterSuccess","memberRegisterFailure","memberForgotPasswordApply","memberForgotPasswordApplySuccess","memberForgotPasswordApplyFailure","memberForgotPasswordSet","memberForgotPasswordSetSuccess","memberForgotPasswordSetFailure","changeMemberPassword","memberId","fctToast","$mdToast","showToast","success","toasterClass","toaster","simple","position","hideDelay","toastClass","eventCard","linkFunc","$scope","toggleCard","openCard","caret","directive","restrict","scope","eventdata","reload","fileUpload","template","replace","transclude","ngModel","disabled","require","el","attr","Resize","file","index","type","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","draw","width","img","height","ctx","canvas","getContext","drawImage","maxWidth","maxHeight","b64","toDataURL","uploadFile","document","createElement","reader","FileReader","onload","e","src","target","result","readAsDataURL","upload","fileProperties","resize","indexOf","extend","size","percent","preview","xhr","XMLHttpRequest","fd","FormData","progress","uri","open","withCredentials","shareCredentials","forEach","item","setRequestHeader","header","value","onreadystatechange","code","statusText","$apply","addEventListener","parseInt","loaded","total","append","fileName","send","withPreview","fileSelector","sel","credentials","multiple","accept","element","querySelectorAll","bind","$eval","find","click","files","f","AddStudentController","getStudentCoordinatorSuccess","getStudentCoordinatorFailure","student_coordinator","vm","coordinator","preInfo","editInfo","update","event","updateButtonClicked","edit","addStudentCoordinator","addButtonClicked","addStudentCoordinatorSuccess","this","ConfirmRegistrationModalController","confirmData","registrationButtonClicked","preventDefault","confirmRegistrationSuccess","confirmRegistrationFailure","hide","confirmRegistrationForm","$setPristine","$setUntouched","msg","for","message","ConfirmRegistrationsController","prompt","placeholder","ariaLabel","targetEvent","serialId","ConfirmRegistrationsController1","teamId","locals","clickOutsideToClose","fullscreen","FacultySettingsController","userDetail","updating","changePassword","updateInfo","FacultyChangePasswordSuccess","resetForm","FacultyChangePasswordFailure","changePasswordForm","RegistrationDetailsController","getRegistrationsSuccess","getRegistrationsFailure","registrations","totalRegistrations","collected_amount","totalCollectedAmount","noregistration","VerifyCoordinatorController","getAllFacultyCoordinatorsSuccess","getAllFacultyCoordinatorsFailure","faculties","limitFaculty","nomoreFaculty","verifyingIndex","verifyFacultySuccess","verifyFacultyFailure","rejectionIndex","rejectFacultySuccess","rejectFacultyFailure","splice","loadmore","orderField","reverseSort","AddEventController","stateParams","Upload","$filter","doneLoading","openManagersModal","myEvent","managers","each","feeTypeChanged","fees_type","fees","feeDisabled","do_payment","save","isUpdate","registerSuccess","registerFailure","uploadFiles","errFiles","attach","doc_name","dest","attachments","errorMsg","evt","Math","min","uploadImage","reponse","event_image","uploadIconImage","event_icon_image","image","DashboardController","getVFS","getUVF","VFSPath","UVFPath","confirmedCount","unConfirmedCount","totalConfirmedParticipants","totalAmountCollected","EachEventController","$sce","undefined","getEventSuccess","getEventFailure","rules","trustAsHtml","judging_criteria","specification","EventCardController","deleteId","confirmedDelete","unconfirmedDelete","deleteEventSuccess","deleteEventFailure","EventRegistrationController","getRegistration","failure","eventDetails","getExcel","event_name","confirmed","input","confirmation","json","stringify","MemberSettingsController","MemberChangePasswordSuccess","MemberChangePasswordFailure","ParticipantRegistrationController","x","openParticipantModule","nopflag","first","myParticipant","other_participants","leaderFlag","getParticipantLength","team_leader","eventObject","event_id","event_shortcode","otherParticipants","maxParticipants","eventPrice","esflag","ShowEventController","getEvents","dummyEvents","UpdateEventController","loadIndex","loadCompleted","checkEventId","onEventGetSuccess","onEventGetFailure","totalManager","onUpdateSuccess","onUpdateFailure","event_icon","FacultyLayoutController","$mdSidenav","$mdMedia","logoutSuccessful","openLeftSidenav","isOpenLeftSidenav","isOpen","closeLeftSidenav","close","contact","ev","useFullScreen","parent","body","$watch","ContactDialogController","MemberLayoutController","FacultyForgotPasswordApplyController","submit","submitButtonClicked","newUser","copy","forgotPasswordApplyForm","applied","$error","not_registered","FacultyForgotPasswordSetController","$stateParams","changePasswordButtonClicked","utoken","uid","userid","forgotPasswordSetForm","set","uriLi","fi","si","ti","foi","substring","Boolean","FacultyLoginController","login","loginButtonClicked","loginSuccess","resetLogin","loginFailure","toString","loginForm","errorState","password","incorrect","FacultyRegistrationController","getCollegesError","colleges","register","registerButtonClicked","registerForm","querySearch","query","results","filter","createFilterFor","deferred","random","lowercaseQuery","lowercase","college","matches","match","acronym","join","toLowerCase","trim","selectedItem","searchText","MemberForgotPasswordApplyController","MemberForgotPasswordSetController","MemberLoginController","MemberRegistrationController","errMsg","slideVertical","addClass","addHideClass","removeClass","removeHideClass","className","done","opacity","from","ease","Power0","easeNone","to","Power2","easeOut","onComplete","delay","easeIn","animation"],"mappings":"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","file":"fcApp.min.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api', []);\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct_app', [\r\n\t\t\t'fct.api',\r\n\t\t\t'fct.core'\r\n\t\t]);\r\n})();\r\n","(function () {\r\n\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core', [\r\n\t\t\t'ngAnimate',\r\n\t\t\t'ngMessages',\r\n\t\t\t'ngMaterial',\r\n\t\t\t'ui.router',\r\n\t\t\t'underscore',\r\n\t\t\t'ngFileUpload',\r\n\t\t\t'validation.match',\r\n\t\t\t'ngMdIcons',\r\n\t\t\t'angularMoment',\r\n\t\t\t'ckeditor'\r\n\t\t\t// 'fct.api'\r\n\t\t]);\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.constant('TweenMax', TweenMax)\r\n\t\t.constant('TimelineMax', TimelineMax);\r\n\t//\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.run(initializeCore);\r\n\r\n\tinitializeCore.$inject = ['$rootScope', '$interval'];\r\n\r\n\tfunction initializeCore($rootScope, $interval) {\r\n\t\tactive();\r\n\r\n\t\tfunction active() {\r\n\t\t\tpreloader();\r\n\t\t}\r\n\r\n\t\t$rootScope.alreadyRedirected = false;\r\n\t\t\t\r\n\t\r\n\t\tfunction preloader() {\r\n\t\t\t$rootScope.$on('$viewContentLoading', startPreloader);\r\n\t\t\t$rootScope.$on('$viewContentLoaded', stopPreloader);\r\n\t\t}\r\n\r\n\t\tfunction startPreloader() {\r\n\t\t\t$rootScope.pageTransition = true;\r\n\t\t}\r\n\r\n\r\n\t\tfunction stopPreloader() {\r\n\t\t\tif ($rootScope.pageTransition) {\r\n\t\t\t\t$interval(function () {\r\n\t\t\t\t\t$rootScope.pageTransition = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","\t(function() {\r\n\t    'use strict';\r\n\r\n\t    angular\r\n\t        .module('fct.core')\r\n\t        .config(configName);\r\n\r\n\t    configName.$inject = ['$mdThemingProvider', '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider'];\r\n\r\n\t    function configName($mdThemingProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n\t        var themePalette = {\r\n\t            primary: \"blue\",\r\n\t            accent: \"amber\",\r\n\t            warn: \"red\"\r\n\t        };\r\n\r\n\t        activate();\r\n\r\n\t        function activate() {\r\n\t            setTheme();\r\n\t            setRoutes();\r\n\t            addInterceptors();\r\n\t        }\r\n\r\n\t        function addInterceptors() {\r\n\t            $httpProvider.interceptors.push('authInterceptor');\r\n\t        }\r\n\r\n\t        function setTheme() {\r\n\t            $mdThemingProvider.theme('default')\r\n\t                .primaryPalette(themePalette.primary)\r\n\t                .accentPalette(themePalette.accent)\r\n\t                .warnPalette(themePalette.warn);\r\n\t        }\r\n\r\n\t        //\r\n\t        //     function setRoutes() {\r\n\t        //         $locationProvider.html5Mode(true);\r\n\t        //         $urlRouterProvider.when('/', '/login');\r\n\t        //         $urlRouterProvider.otherwise('/login');\r\n\t        //         $stateProvider\r\n\t        //             .state('out', {\r\n\t        //                 templateUrl: '/templates/layouts/out.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectLoggedIn: redirectLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_fc', {\r\n\t        //                 templateUrl: '/templates/layouts/in_fc.html',\r\n\t        //                 controller: 'FacultyLayoutController',\r\n\t        //                 controllerAs: 'flayc',\r\n\t        //                 resolve: {\r\n\t        //                     redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_tc', {\r\n\t        //                 controller: 'MemberLayoutController',\r\n\t        //                 controllerAs: 'mlayc',\r\n\t        //                 templateUrl: '/templates/layouts/in_tc.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('out.login', {\r\n\t        //                 url: '/login',\r\n\t        //                 templateUrl: '/templates/pages/out/login.html',\r\n\t        //                 controller: 'FacultyLoginController',\r\n\t        //                 controllerAs: 'flc'\r\n\t        //             })\r\n\t        //             .state('out.register', {\r\n\t        //                 url: '/register',\r\n\t        //                 templateUrl: '/templates/pages/out/register.html',\r\n\t        //                 controller: 'FacultyRegistrationController',\r\n\t        //                 controllerAs: 'frc'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordApply', {\r\n\t        //                 url: '/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t        //                 controller: 'FacultyForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'ffpac'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordSet', {\r\n\t        //                 url: '/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t        //                 controller: 'FacultyForgotPasswordSetController',\r\n\t        //                 controllerAs: 'ffpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_login', {\r\n\t        //                 url: '/member/login',\r\n\t        //                 templateUrl: '/templates/pages/out/member/login.html',\r\n\t        //                 controller: 'MemberLoginController',\r\n\t        //                 controllerAs: 'mlc'\r\n\t        //             })\r\n\t        //             .state('out.member_register', {\r\n\t        //                 url: '/member/register',\r\n\t        //                 templateUrl: '/templates/pages/out/member/register.html',\r\n\t        //                 controller: 'MemberRegistrationController',\r\n\t        //                 controllerAs: 'mrc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordSet', {\r\n\t        //                 url: '/member/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t        //                 controller: 'MemberForgotPasswordSetController',\r\n\t        //                 controllerAs: 'mfpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordApply', {\r\n\t        //                 url: '/member/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t        //                 controller: 'MemberForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'mfpac'\r\n\t        //             })\r\n\t        //             .state('in_tc.verifyCoordinator', {\r\n\t        //                 url: '/member/verifyCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t        //                 controller: 'VerifyCoordinatorController',\r\n\t        //                 controllerAs: 'vcc'\r\n\t        //             })\r\n\t        //             .state('in_tc.collegeList', {\r\n\t        //                 url: '/member/collegeList',\r\n\t        //                 templateUrl: '/templates/pages/in/collegeList.html'\r\n\t        //             })\r\n\t        //             .state('in_tc.dashboard', {\r\n\t        //                 url: '/dashboard',\r\n\t        //                 templateUrl: '/templates/pages/in/dashboard.html',\r\n\t        //                 controller: 'DashboardController',\r\n\t        //                 controllerAs: 'dc'\r\n\t        //             })\r\n\t        //             .state('in_tc.eventRegistrations', {\r\n\t        //                 url: '/eventRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t        //                 controller: 'EventRegistrationController',\r\n\t        //                 controllerAs: 'erc'\r\n\t        //             })\r\n\t        //             .state('in_tc.addEvent', {\r\n\t        //                 url: '/member/events/create',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'AddEventController',\r\n\t        //                 controllerAs: 'ec',\r\n\t        //             })\r\n\t        //             .state('in_tc.settings', {\r\n\t        //                 url: '/member/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t        //                 controller: 'MemberSettingsController',\r\n\t        //                 controllerAs: 'msc'\r\n\t        //             })\r\n\t        //             .state('in_tc.updateEvent', {\r\n\t        //                 url: '/member/events/:eventId/update',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'UpdateEventController',\r\n\t        //                 controllerAs: 'ec'\r\n\t        //             })\r\n\t        //             .state('in_tc.showEvent', {\r\n\t        //                 url: '/member/events',\r\n\t        //                 templateUrl: '/templates/pages/in/showEvent.html',\r\n\t        //                 controller: 'ShowEventController',\r\n\t        //                 controllerAs: 'sec'\r\n\t        //             })\r\n\t        //             .state('in_tc.eachEvent', {\r\n\t        //                 url: '/member/events/:eventId',\r\n\t        //                 templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t        //                 controller: 'EachEventController',\r\n\t        //                 controllerAs: 'eec'\r\n\t        //             })\r\n\t        //             .state('in_fc.guidelines', {\r\n\t        //                 url: '/guidelines',\r\n\t        //                 templateUrl: '/templates/pages/in/guidelines.html'\r\n\t        //             })\r\n\t        //             .state('in_fc.settings', {\r\n\t        //                 url: '/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t        //                 controller: 'FacultySettingsController',\r\n\t        //                 controllerAs: 'fsc'\r\n\t        //             })\r\n\t        //             .state('in_fc.confirm_registration', {\r\n\t        //                 url: '/confirm/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t        //                 controller: 'ConfirmRegistrationsController1',\r\n\t        //                 controllerAs: 'crc'\r\n\t        //             })\r\n\t        //             .state('in_fc.registration_details', {\r\n\t        //                 url: '/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t        //                 controller: 'RegistrationDetailsController',\r\n\t        //                 controllerAs: 'rdc'\r\n\t        //             })\r\n\t        //             .state('in_fc.student_coordinator', {\r\n\t        //                 url: '/studentCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t        //                 controller: 'AddStudentController',\r\n\t        //                 controllerAs: 'ascc'\r\n\t        //             })\r\n\t        //             .state('in_fc.participant_registration', {\r\n\t        //                 url: '/participantRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t        //                 controller: 'ParticipantRegistrationController',\r\n\t        //                 controllerAs: 'prc'\r\n\t        //             });\r\n\t        //     }\r\n\t        // }\r\n\r\n\t        function setRoutes() {\r\n\t            $locationProvider.html5Mode(true);\r\n\t            $urlRouterProvider.when('/', '/login');\r\n\t            $urlRouterProvider.otherwise('/login');\r\n\t            $stateProvider\r\n\t                .state('out', {\r\n\t                    templateUrl: '/templates/layouts/out.html',\r\n\t                    resolve: {\r\n\t                        redirectLoggedIn: redirectLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_fc', {\r\n\t                    templateUrl: '/templates/layouts/in_fc.html',\r\n\t                    controller: 'FacultyLayoutController',\r\n\t                    controllerAs: 'flayc',\r\n\t                    resolve: {\r\n\t                        redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_tc', {\r\n\t                    controller: 'MemberLayoutController',\r\n\t                    controllerAs: 'mlayc',\r\n\t                    templateUrl: '/templates/layouts/in_tc.html',\r\n\t                    resolve: {\r\n\t                        redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('out.login', {\r\n\t                    url: '/login',\r\n\t                    templateUrl: '/templates/pages/out/login.html',\r\n\t                    controller: 'FacultyLoginController',\r\n\t                    controllerAs: 'flc'\r\n\t                })\r\n\t                .state('out.register', {\r\n\t                    url: '/register',\r\n\t                    templateUrl: '/templates/pages/out/register.html',\r\n\t                    controller: 'FacultyRegistrationController',\r\n\t                    controllerAs: 'frc'\r\n\t                })\r\n\t                .state('out.forgotPasswordApply', {\r\n\t                    url: '/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t                    controller: 'FacultyForgotPasswordApplyController',\r\n\t                    controllerAs: 'ffpac'\r\n\t                })\r\n\t                .state('out.forgotPasswordSet', {\r\n\t                    url: '/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t                    controller: 'FacultyForgotPasswordSetController',\r\n\t                    controllerAs: 'ffpsc'\r\n\t                })\r\n\t                .state('out.member_login', {\r\n\t                    url: '/member/login',\r\n\t                    templateUrl: '/templates/pages/out/member/login.html',\r\n\t                    controller: 'MemberLoginController',\r\n\t                    controllerAs: 'mlc'\r\n\t                })\r\n\t                .state('out.member_register', {\r\n\t                    url: '/member/register',\r\n\t                    templateUrl: '/templates/pages/out/member/register.html',\r\n\t                    controller: 'MemberRegistrationController',\r\n\t                    controllerAs: 'mrc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordSet', {\r\n\t                    url: '/member/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t                    controller: 'MemberForgotPasswordSetController',\r\n\t                    controllerAs: 'mfpsc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordApply', {\r\n\t                    url: '/member/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t                    controller: 'MemberForgotPasswordApplyController',\r\n\t                    controllerAs: 'mfpac'\r\n\t                })\r\n\t                .state('in_tc.verifyCoordinator', {\r\n\t                    url: '/member/verifyCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t                    controller: 'VerifyCoordinatorController',\r\n\t                    controllerAs: 'vcc'\r\n\t                })\r\n\t                .state('in_tc.collegeList', {\r\n\t                    url: '/member/collegeList',\r\n\t                    templateUrl: '/templates/pages/in/collegeList.html'\r\n\t                })\r\n\t                .state('in_tc.dashboard', {\r\n\t                    url: '/dashboard',\r\n\t                    templateUrl: '/templates/pages/in/dashboard.html',\r\n\t                    controller: 'DashboardController',\r\n\t                    controllerAs: 'dc'\r\n\t                })\r\n\t                .state('in_tc.eventRegistrations', {\r\n\t                    url: '/eventRegistration',\r\n\t                    templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t                    controller: 'EventRegistrationController',\r\n\t                    controllerAs: 'erc'\r\n\t                })\r\n\t                .state('in_tc.addEvent', {\r\n\t                    url: '/member/events/create',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'AddEventController',\r\n\t                    controllerAs: 'ec',\r\n\t                })\r\n\t                .state('in_tc.settings', {\r\n\t                    url: '/member/settings',\r\n\t                    templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t                    controller: 'MemberSettingsController',\r\n\t                    controllerAs: 'msc'\r\n\t                })\r\n\t                .state('in_tc.updateEvent', {\r\n\t                    url: '/member/events/:eventId/update',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'UpdateEventController',\r\n\t                    controllerAs: 'ec'\r\n\t                })\r\n\t                .state('in_tc.showEvent', {\r\n\t                    url: '/member/events',\r\n\t                    templateUrl: '/templates/pages/in/showEvent.html',\r\n\t                    controller: 'ShowEventController',\r\n\t                    controllerAs: 'sec'\r\n\t                })\r\n\t                .state('in_tc.eachEvent', {\r\n\t                    url: '/member/events/:eventId',\r\n\t                    templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t                    controller: 'EachEventController',\r\n\t                    controllerAs: 'eec'\r\n\t                })\r\n\t                .state('in_fc.guidelines', {\r\n\t                    url: '/guidelines',\r\n\t                    templateUrl: '/templates/pages/in/guidelines.html'\r\n\t                })\r\n\t                .state('in_fc.settings', {\r\n\t                    url: '/settings',\r\n\t                    templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t                    controller: 'FacultySettingsController',\r\n\t                    controllerAs: 'fsc'\r\n\t                })\r\n\t                .state('in_fc.confirm_registration', {\r\n\t                    url: '/confirm/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t                    controller: 'ConfirmRegistrationsController1',\r\n\t                    controllerAs: 'crc'\r\n\t                })\r\n\t                .state('in_fc.registration_details', {\r\n\t                    url: '/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t                    controller: 'RegistrationDetailsController',\r\n\t                    controllerAs: 'rdc'\r\n\t                })\r\n\t                .state('in_fc.student_coordinator', {\r\n\t                    url: '/studentCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t                    controller: 'AddStudentController',\r\n\t                    controllerAs: 'ascc'\r\n\t                })\r\n\t                .state('in_fc.participant_registration', {\r\n\t                    url: '/participantRegistration',\r\n\t                    templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t                    controller: 'ParticipantRegistrationController',\r\n\t                    controllerAs: 'prc'\r\n\t                });\r\n\t        }\r\n\t    }\r\n\t    redirectFacultyNotLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectFacultyNotLoggedIn(facultyAuthService, memberAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate) {\r\n\t            if ($rootScope.faculty.verified !== true && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t            }\r\n\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    redirectTeamNotLoggedIn.$inject = ['memberAuthService', 'facultyAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectTeamNotLoggedIn(memberAuthService, facultyAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t        if (memberAuthenticate) {\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t            if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\r\n\r\n\t        }\r\n\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\r\n\t    redirectLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$state', '$q', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectLoggedIn(facultyAuthService, memberAuthService, $state, $q, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t            defer.reject();\r\n\t            $timeout(function() {\r\n\t                $rootScope.alreadyRedirected = true;\r\n\t                $state.go('in_fc.guidelines');\r\n\t            });\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                defer.reject();\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t            } else {\r\n\t                defer.resolve();\r\n\t            }\r\n\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    // redirectTeamLoggedIn.$inject = ['memberAuthService','facultyAuthService', '$state', '$q', '$timeout'];\r\n\t    //\r\n\t    // function redirectTeamLoggedIn(memberAuthService, facultyAuthService, $state, $q, $timeout) {\r\n\t    // \t// if(angular.isDefined($rootScope.faculty)){\r\n\t    // \t//\r\n\t    // \t// }\r\n\t    //\r\n\t    // \tvar defer = $q.defer();\r\n\t    // \tvar authenticate = memberAuthService.checkMemberLoggedIn();\r\n\t    // \tif (authenticate) {\r\n\t    // \t\tdefer.reject();\r\n\t    // \t\t$timeout(function () {\r\n\t    // \t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t    // \t\t});\r\n\t    // \t} else {\r\n\t    // \t\tdefer.resolve();\r\n\t    // \t}\r\n\t    // \treturn defer.promise;\r\n\t    // }\r\n\r\n\t})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('authInterceptor', authInterceptor);\r\n\r\n\tauthInterceptor.$inject = ['$window', '$q', '$location'];\r\n\r\n\tfunction authInterceptor($window, $q, $location) {\r\n\t\tvar service = {\r\n\t\t\trequest: request,\r\n\t\t\trequestError: requestError,\r\n\t\t\tresponse: response,\r\n\t\t\tresponseError: responseError\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction request(config) {\r\n\t\t\tvar token = getToken();\r\n\t\t\tif (token !== null) {\r\n\t\t\t\tvar authHead = 'Bearer ' + token;\r\n\t\t\t\tconfig.headers['Authorization'] = authHead;\r\n\t\t\t}\r\n\t\t\t// console.log(config);\r\n\t\t\treturn config;\r\n\t\t}\r\n\r\n\t\tfunction requestError(rejection) {\r\n\t\t\t// console.log(\"Request Rejection\",rejection);\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\r\n\t\tfunction response(response) {\r\n\t\t\t// console.log(\"response\",response);\r\n\t\t\treturn response || $q.when(response);\r\n\t\t}\r\n\r\n\t\tfunction responseError(rejection) {\r\n\t\t\t// console.log(\"response rejection\", rejection);\r\n\t\t\tif (rejection.status == 403) {\r\n\t\t\t\t$location.path('/login');\r\n\t\t\t}\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t  .module('fct.core')\r\n\t  .factory('eventService', eventService);\r\n\r\n\teventService.$inject = ['$http'];\r\n\r\n\tfunction eventService($http) {\r\n\t  var service = {\r\n\t    addEvent: addEvent,\r\n\t\t\tgetEvent: getEvent,\r\n\t\t\tupdateEvent: updateEvent,\r\n\t\t\tgetSingleEvent: getSingleEvent,\r\n\t\t\tdeleteEvent: deleteEvent,\r\n\t  };\r\n\r\n\t  return service;\r\n\r\n\t  function addEvent(eventData) {\r\n\t\t\treturn $http.post('/api/members/events', eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getEvent() {\r\n\t\t\treturn $http.get('/api/members/events')\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getSingleEvent(id) {\r\n\t\t\treturn $http.get('/api/members/events/' + id)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function updateEvent(eventId, eventData) {\r\n\t\t\treturn $http.put('/api/members/events/' + eventId, eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function deleteEvent(eventId) {\r\n\t\t\treturn $http.delete('/api/members/events/' + eventId)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyService', facultyService);\r\n\r\n\tfacultyService.$inject = ['$http', '$rootScope'];\r\n\r\n\tfunction facultyService($http, $rootScope) {\r\n\t\tvar baseLink = '/api/faculty/' + $rootScope.faculty.id;\r\n\r\n\t\tvar service = {\r\n\t\t\tconfirmRegistration: confirmRegistration,\r\n\t\t\tgetFacultyRegistrations: getFacultyRegistrations,\r\n\t\t\tgetStudentCoordinator: getStudentCoordinator,\r\n\t\t\teditStudentCoordinator: editStudentCoordinator,\r\n\t\t\tgetEachFaculty: getEachFaculty,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t\tgetRegistrationData: getRegistrationData,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\tvar link = baseLink + '/getEachFaculty';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(registration) {\r\n\t\t\tvar link = baseLink + '/registrations/confirm';\r\n\t\t\treturn $http.post(link, registration)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrations() {\r\n\t\t\tvar link = baseLink + '/registrations';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction get(students) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.put(link, students)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinator(student) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.post(link, student)\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinator() {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty(data) {\r\n\t\t\tvar link = baseLink + '/updateFaculty/';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData(data) {\r\n\t\t\tvar link = baseLink + '/getRegistrationData';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\t// replaceToken(response.data.token);\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyAuthService', facultyAuthService);\r\n\r\n\tfacultyAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction facultyAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tfacultyLogin: facultyLogin,\r\n\t\t\tfacultyRegister: facultyRegister,\r\n\t\t\tcheckFacultyLoggedIn: checkFacultyLoggedIn,\r\n\t\t\tchangeFacultyPassword: changeFacultyPassword,\r\n\t\t\tlogout: logout,\r\n\t\t\tfacultyForgotPasswordApply: facultyForgotPasswordApply,\r\n\t\t\tfacultyForgotPasswordSet: facultyForgotPasswordSet,\r\n\t\t\tgetColleges: getColleges,\r\n\t\t\tcheckVerified: checkVerified\r\n\t\t\t// editStudentCoordinator: editStudentCoordinator\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkFacultyLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\t\t\t\tif (angular.isDefined(payload.collegeId)) {\r\n\t\t\t\t\t$rootScope.faculty = {};\r\n\t\t\t\t\t$rootScope.faculty.email = payload.email;\r\n\t\t\t\t\t$rootScope.faculty.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.faculty.name = payload.name;\r\n\t\t\t\t\t$rootScope.faculty.verified = payload.verified;\r\n\t\t\t\t\t$rootScope.faculty.rejected = payload.rejected;\r\n\t\t\t\t\t$rootScope.faculty.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.faculty.id = payload._id;\r\n\t\t\t\t\t$rootScope.collegeId = payload.collegeId;\r\n\t\t\t\t\t// $rootScope.faculty.registrations_count = payload.registrations_count;\r\n\t\t\t\t\t// $rootScope.faculty.collected_amount = payload.collected_amount;\r\n\t\t\t\t\t// $rootScope.faculty.student_coordinator = payload.student_coordinator;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t\t// console.log($rootScope.faculty);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction replaceToken(token) {\r\n\t\t\tremoveToken();\r\n\t\t\tsaveToken(token);\r\n\t\t}\r\n\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/login', user)\r\n\t\t\t\t.then(facultyLoginSuccess)\r\n\t\t\t\t.catch(facultyLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/register', user)\r\n\t\t\t\t.then(facultyRegisterSuccess)\r\n\t\t\t\t.catch(facultyRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyRegister');\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyRegister', error);\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyLogin');\r\n\t\t\t// checkFacultyLoggedIn();\r\n\t\t}\r\n\r\n\t\tfunction facultyLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction getColleges() {\r\n\t\t\treturn $http.get('/api/college/getAllCollege')\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesFailure);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t\tfunction changeFacultyPassword(passwordObject) {\r\n\t\t\tif (checkFacultyLoggedIn()) {\r\n\t\t\t\tif ($rootScope.faculty) {\r\n\t\t\t\t\tpasswordObject.facultyId = $rootScope.faculty.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/faculty/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApply(faculty) {\r\n\t\t\t$http.post('/api/auth/faculty/forgotPasswordApply', faculty)\r\n\t\t\t\t.then(facultyForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSet(faculty, id) {\r\n\t\t\tvar link = '/api/auth/faculty/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, faculty)\r\n\t\t\t\t.then(facultyForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(error) {\r\n\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\r\n\t\tfunction checkVerified() {\r\n\t\t\tconsole.log($rootScope.faculty);\r\n\t\t\t$http.get('/api/faculty/check')\r\n\t\t\t\t.then(checkVerifiedSuccess)\r\n\t\t\t\t.catch(checkVerifiedFailure);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\treplaceToken(response.data.token);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction functionName(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberService', memberService);\r\n\r\n\tmemberService.$inject = ['$http', '$mdDialog'];\r\n\r\n\tfunction memberService($http, $mdDialog) {\r\n\t\tvar service = {\r\n\t\t\tgetAllFacultyCoordinators: getAllFacultyCoordinators,\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tgetTotalRegistrations: getTotalRegistrations,\r\n\t\t\tgetDeleteModal: getDeleteModal,\r\n\t\t\tgetVerifyFacultyStudent: getVerifyFacultyStudent,\r\n\t\t\tgetUnverifiedFaculty: getUnverifiedFaculty,\r\n\t\t\tgetUnconfirmedRegistration: getUnconfirmedRegistration,\r\n\t\t\tgetRegistrationsByEvent: getRegistrationsByEvent,\r\n\t\t\tgetEventRegistrationExcel: getEventRegistrationExcel,\r\n\t\t\tgetConfirmedRegistrationCount: getConfirmedRegistrationCount,\r\n\t\t\texportParticipantList: exportParticipantList,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getAllFacultyCoordinators() {\r\n\t\t\treturn $http.get('/api/members/faculty')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/verify/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/reject/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getTotalRegistrations() {\r\n\t\t\treturn $http.get('/api/members/registrations')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsByEvent() {\r\n\t\t\treturn $http.get('/api/members/registration/eventRegistrationData')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getVerifyFacultyStudent() {\r\n\t\t\treturn $http.get('/api/members/exportVFSList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnverifiedFaculty() {\r\n\t\t\treturn $http.get('/api/members/exportUVFList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnconfirmedRegistration() {\r\n\t\t\treturn $http.get('/api/members/registration/exportUnconfirmedRegistration')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getEventRegistrationExcel(request) {\r\n\t\t\treturn $http.post('/api/members/registrations/export', request)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getConfirmedRegistrationCount() {\r\n\t\t\treturn $http.get('/api/members/registration/confirmRegistrationCount')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction exportParticipantList() {\r\n\t\t\treturn $http.get('/api/members/registration/exportParticipantList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getDeleteModal() {\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Delete')\r\n\t\t\t\t.textContent('Are you sure you want to delete this record?')\r\n\t\t\t\t.ok('Confirm')\r\n\t\t\t\t.cancel('Cancel');\r\n\t\t\treturn $mdDialog.show(confirm).then(responseFunc, errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction responseFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberAuthService', memberAuthService);\r\n\r\n\tmemberAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction memberAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tmemberLogin: memberLogin,\r\n\t\t\tmemberRegister: memberRegister,\r\n\t\t\tcheckMemberLoggedIn: checkMemberLoggedIn,\r\n\t\t\tlogout: logout,\r\n\t\t\tchangeMemberPassword: changeMemberPassword,\r\n\t\t\tmemberForgotPasswordApply: memberForgotPasswordApply,\r\n\t\t\tmemberForgotPasswordSet: memberForgotPasswordSet\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkMemberLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\r\n\t\t\t\tif (angular.isUndefined(payload.registrations_count)) {\r\n\t\t\t\t\t$rootScope.member = {};\r\n\t\t\t\t\t$rootScope.member.email = payload.email;\r\n\t\t\t\t\t$rootScope.member.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.member.name = payload.name;\r\n\t\t\t\t\t$rootScope.member.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.member.id = payload._id;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\t\tfunction memberLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/member/login', user)\r\n\t\t\t\t.then(memberLoginSuccess)\r\n\t\t\t\t.catch(memberLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/member/register', user)\r\n\t\t\t\t.then(memberRegisterSuccess)\r\n\t\t\t\t.catch(memberRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberRegister');\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberRegister', error);\r\n\t\t}\r\n\r\n\t\tfunction memberLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberLogin');\r\n\t\t}\r\n\r\n\t\tfunction memberLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApply(member) {\r\n\t\t\t$http.post('/api/auth/member/forgotPasswordApply', member)\r\n\t\t\t\t.then(memberForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(memberForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSet(member, id) {\r\n\t\t\tvar link = '/api/auth/member/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, member)\r\n\t\t\t\t.then(memberForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(memberForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure() {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction changeMemberPassword(passwordObject) {\r\n\t\t\tif (checkMemberLoggedIn()) {\r\n\t\t\t\tif ($rootScope.member) {\r\n\t\t\t\t\tpasswordObject.memberId = $rootScope.member.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/members/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.factory('fctToast', fctToast);\r\n\r\n\tfctToast.$inject = ['$mdToast'];\r\n\r\n\tfunction fctToast($mdToast) {\r\n\t\tvar service = {\r\n\t\t\tshowToast: showToast\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction showToast(data, success) {\r\n\t\t\tvar toasterClass = 'md-toast-warn';\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\ttoasterClass = 'md-toast-success';\r\n\t\t\t}\r\n\r\n\t\t\tvar toaster = $mdToast.simple()\r\n\t\t\t\t.textContent(data)\r\n\t\t\t\t.position('bottom right')\r\n\t\t\t\t.hideDelay(3000)\r\n\t\t\t\t.toastClass(toasterClass);\r\n\t\t\t$mdToast.show(toaster);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fct.core')\r\n    .directive('eventCard', eventCard);\r\n\r\n  eventCard.$inject = [];\r\n\r\n  function eventCard() {\r\n    var directive = {\r\n          restrict: 'E',\r\n          templateUrl: '/templates/components/cards/eventCard.html',\r\n          link: linkFunc,\r\n          scope: {\r\n              eventdata : '=',\r\n              reload : '&'\r\n          },\r\n          controller: 'EventCardController',\r\n          controllerAs: 'ecc'\r\n      };\r\n\r\n      return directive;\r\n\r\n      function linkFunc($scope) {\r\n          $scope.openCard = false;\r\n          $scope.caret = 'expand_less';\r\n          $scope.toggleCard = toggleCard;\r\n\r\n          function toggleCard() {\r\n              $scope.openCard = !($scope.openCard);\r\n              if($scope.openCard === true){\r\n                  $scope.caret = 'expand_more';\r\n              }\r\n              else {\r\n                  $scope.caret = 'expand_less';\r\n              }\r\n          }\r\n      }\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t.module('fct.core')\r\n\t.directive('fileUpload', fileUpload);\r\n\r\n\tfileUpload.$inject = ['$timeout'];\r\n\r\n\tfunction fileUpload($timeout) {\r\n        return {\r\n            restrict: 'E',\r\n            template: '<div ng-transclude></div>',\r\n            replace: true,\r\n            transclude: true,\r\n            scope: {\r\n                headers: '=',\r\n                ngModel: '=',\r\n                disabled: '='\r\n            },\r\n            require: 'ngModel',\r\n            link: function (scope, el, attr) {\r\n                var fileName,\r\n                    shareCredentials,\r\n                    withPreview,\r\n                    fileSelector,\r\n                    resize,\r\n                    maxWidth,\r\n                    maxHeight,\r\n                    sel;\r\n\r\n                fileName = attr.name || 'userFile';\r\n                shareCredentials = attr.credentials === 'true';\r\n                withPreview = attr.preview === 'true';\r\n                resize = attr.resize === 'true';\r\n                maxWidth = angular.isDefined(attr.maxWidth) ? parseInt(attr.maxWidth) : false;\r\n                maxHeight = angular.isDefined(attr.maxHeight) ? parseInt(attr.maxHeight) : false;\r\n                fileSelector = angular.isDefined(attr.fileSelector) ? attr.fileSelector : false;\r\n\r\n                el.append('<input style=\"display: none !important;\" type=\"file\" ' + (attr.multiple == 'true' ? 'multiple' : '') + ' accept=\"' + (attr.accept ? attr.accept : '') + '\" name=\"' + fileName + '\"/>');\r\n\r\n                function Resize(file, index, type) {\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    var img = document.createElement(\"img\");\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        img.src = e.target.result;\r\n                        draw();\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n\r\n                    function b64toBlob(b64Data, contentType, sliceSize) {\r\n                        contentType = contentType || '';\r\n                        sliceSize = sliceSize || 512;\r\n\r\n                        var byteCharacters = atob(b64Data);\r\n                        var byteArrays = [];\r\n\r\n                        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                            var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                            var byteNumbers = new Array(slice.length);\r\n                            for (var i = 0; i < slice.length; i++) {\r\n                                byteNumbers[i] = slice.charCodeAt(i);\r\n                            }\r\n\r\n                            var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                            byteArrays.push(byteArray);\r\n                        }\r\n\r\n                        var blob = new Blob(byteArrays, {type: contentType});\r\n                        return blob;\r\n                    }\r\n\r\n                    function draw() {\r\n                        var width = img.width;\r\n                        var height = img.height;\r\n                        var ctx = canvas.getContext(\"2d\");\r\n                        ctx.drawImage(img, 0, 0);\r\n\r\n                        if (width > 0 && height > 0) {\r\n                            if (width > height) {\r\n                                if (width > maxWidth) {\r\n                                    height *= maxWidth / width;\r\n                                    width = maxWidth;\r\n                                }\r\n                            } else {\r\n                                if (height > maxHeight) {\r\n                                    width *= maxHeight / height;\r\n                                    height = maxHeight;\r\n                                }\r\n                            }\r\n\r\n                            canvas.width = width;\r\n                            canvas.height = height;\r\n                            ctx.drawImage(img, 0, 0, width, height);\r\n                            var b64 = canvas.toDataURL(type).split(',')[1];\r\n                            file = b64toBlob(b64, type, 512);\r\n                        }\r\n\r\n                        uploadFile(file, index);\r\n                    }\r\n                }\r\n\r\n                function upload(fileProperties, index, file) {\r\n                    if (resize && maxWidth && maxHeight && (file.type.indexOf('image/') !== -1)) {\r\n                        Resize(file, index, file.type);\r\n                    } else {\r\n                        uploadFile(file, index);\r\n                    }\r\n                    return angular.extend(scope.ngModel[index], {\r\n                        name: fileProperties.name,\r\n                        size: fileProperties.size,\r\n                        type: fileProperties.type,\r\n                        status: {},\r\n                        percent: 0,\r\n                        preview: null\r\n                    });\r\n                }\r\n\r\n                function uploadFile(file, index) {\r\n                    var xhr = new XMLHttpRequest(),\r\n                        fd = new FormData(),\r\n                        progress = 0,\r\n                        uri = attr.uri || '/upload/upload';\r\n                    xhr.open('POST', uri, true);\r\n                    xhr.withCredentials = shareCredentials;\r\n                    if (scope.headers) {\r\n                        scope.headers.forEach(function (item) {\r\n                            xhr.setRequestHeader(item.header, item.value);\r\n                        });\r\n                    }\r\n                    xhr.onreadystatechange = function () {\r\n                        scope.ngModel[index].status = {\r\n                            code: xhr.status,\r\n                            statusText: xhr.statusText,\r\n                            response: xhr.response\r\n                        };\r\n                        scope.$apply();\r\n                    };\r\n                    xhr.upload.addEventListener(\"progress\", function (e) {\r\n                        progress = parseInt(e.loaded / e.total * 100);\r\n                        scope.ngModel[index].percent = progress;\r\n                        scope.$apply();\r\n                    }, false);\r\n\r\n                    fd.append(fileName, file);\r\n                    xhr.send(fd);\r\n\r\n                    if (withPreview) {\r\n                        var reader = new FileReader();\r\n                        reader.onload = function (e) {\r\n                            scope.ngModel[index].preview = e.target.result;\r\n                            scope.$apply();\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                }\r\n\r\n                $timeout(function () {\r\n                    sel = fileSelector ? angular.element(el[0].querySelectorAll(fileSelector)[0]) : el;\r\n                    sel.bind('click', function () {\r\n                        if (!scope.disabled) {\r\n                            scope.$eval(el.find('input')[0].click());\r\n                        }\r\n                    });\r\n                });\r\n\r\n                angular.element(el.find('input')[0]).bind('change', function (e) {\r\n                    var files = e.target.files;\r\n                    if (!angular.isDefined(scope.ngModel) || attr.multiple === 'true') {\r\n                        scope.ngModel = [];\r\n                    }\r\n                    var f;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        f = {\r\n                            name: files[i].name,\r\n                            size: files[i].size,\r\n                            type: files[i].type,\r\n                            status: {},\r\n                            percent: 0,\r\n                            preview: null\r\n                        };\r\n                        scope.ngModel.push(f);\r\n                        upload(f, i, files[i]);\r\n                    }\r\n                    scope.$apply();\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddStudentController', AddStudentController);\r\n\r\n\tAddStudentController.$inject = ['$http', 'facultyService', '$rootScope', 'fctToast'];\r\n\r\n\tfunction AddStudentController($http, facultyService, $rootScope, fctToast) {\r\n\t\tvar vm = this;\r\n\t\tvm.coordinator = {};\r\n\t\tvm.editInfo = false;\r\n\t\tvm.preInfo = false;\r\n\t\tvm.updateButtonClicked = false;\r\n\t\tvm.addButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tupdate: update,\r\n\t\t\taddStudentCoordinator: addStudentCoordinator,\r\n\t\t\tedit: edit\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getStudentCoordinator()\r\n\t\t\t\t.then(getStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(getStudentCoordinatorFailure);\r\n\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorSuccess(response) {\r\n\t\t\tif (response.data.student_coordinator) {\r\n\t\t\t\tvm.coordinator = response.data.student_coordinator;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.editInfo = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorFailure(error) {\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction update(event) {\r\n\t\t\tvm.updateButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction edit() {\r\n\t\t\tvm.editInfo = true;\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinator(event) {\r\n\t\t\tvm.addButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(addStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.preInfo = true;\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Added Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Updated Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Error!! Try Again');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('fct.core')\r\n        .controller('ConfirmRegistrationModalController', ConfirmRegistrationModalController);\r\n\r\n    ConfirmRegistrationModalController.$inject = ['facultyService', '$mdDialog', 'fctToast', 'registration'];\r\n\r\n    function ConfirmRegistrationModalController(facultyService, $mdDialog, fctToast, registration) {\r\n        var vm = this;\r\n        vm.registration = registration;\r\n        vm.registrationButtonClicked = false;\r\n\r\n        angular.extend(vm, {\r\n            confirmData: confirmData,\r\n            hide: hide\r\n        });\r\n\r\n        function confirmData() {\r\n            if (vm.registrationButtonClicked) {\r\n                event.preventDefault();\r\n            } else {\r\n                vm.registrationButtonClicked = true;\r\n            }\r\n\r\n            return facultyService.confirmRegistration(registration)\r\n                .then(confirmRegistrationSuccess)\r\n                .catch(confirmRegistrationFailure);\r\n        }\r\n\r\n        function confirmRegistrationSuccess(response) {\r\n            console.log(response);\r\n            hide();\r\n            vm.registrationButtonClicked = false;\r\n            vm.registration = {};\r\n            $scope.confirmRegistrationForm.$setPristine();\r\n            $scope.confirmRegistrationForm.$setUntouched();\r\n\r\n            var msg;\r\n\r\n            if (response.status == 400) {\r\n                msg = response.data.error.for;\r\n                fctToast.showToast(msg);\r\n            }\r\n\r\n            if (msg) {\r\n                msg = response.data.message;\r\n                fctToast.showToast(msg, true);\r\n            }\r\n        }\r\n\r\n        function confirmRegistrationFailure(error) {\r\n            var msg;\r\n            hide();\r\n\r\n            if (error.status == 500) {\r\n                msg = 'Internal server error, try again !!';\r\n            } else {\r\n                msg = error.data.error.for;\r\n            }\r\n            fctToast.showToast(msg);\r\n        }\r\n\r\n        function hide() {\r\n            $mdDialog.hide();\r\n        }\r\n    }\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController', ConfirmRegistrationsController);\r\n\r\n\tConfirmRegistrationsController.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n\tfunction ConfirmRegistrationsController(facultyService, $mdDialog, fctToast, $scope) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmRegistration: confirmRegistration\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(event) {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\t// return\r\n\t\t\tvar confirm = $mdDialog.prompt()\r\n\t\t\t\t.title('Enter SERIAL ID')\r\n\t\t\t\t.textContent('Enter the serial id provided in ther Registration Slip')\r\n\t\t\t\t.placeholder('Serial Id')\r\n\t\t\t\t.ariaLabel('Serial Id')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.ok('Submit')\r\n\t\t\t\t.cancel('Cancel');\r\n\r\n\t\t\t$mdDialog.show(confirm).then(function (result) {\r\n\t\t\t\tvm.registration.serialId = result;\r\n\t\t\t\treturn facultyService.confirmRegistration(vm.registration)\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tvm.registration = {};\r\n\t\t\t$scope.confirmRegistrationForm.$setPristine();\r\n\t\t\t$scope.confirmRegistrationForm.$setUntouched();\r\n\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (response.status == 400) {\r\n\t\t\t\tmsg = response.data.error.for;\r\n\t\t\t\tfctToast.showToast(msg);\r\n\t\t\t}\r\n\r\n\t\t\tif (msg) {\r\n\t\t\t\tmsg = response.data.message;\r\n\t\t\t\tfctToast.showToast(msg, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('fct.core')\r\n        .controller('ConfirmRegistrationsController1', ConfirmRegistrationsController1);\r\n\r\n    ConfirmRegistrationsController1.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n    function ConfirmRegistrationsController1(facultyService, $mdDialog, fctToast, $scope) {\r\n        var vm = this;\r\n        vm.registration = {};\r\n        vm.registrationButtonClicked = false;\r\n        angular.extend(vm, {\r\n            confirmRegistration: confirmRegistration,\r\n            getRegistrationData: getRegistrationData\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function getFacultyRegistrationData() {\r\n\r\n        }\r\n\r\n        function confirmRegistration(event) {\r\n            if (vm.registrationButtonClicked) {\r\n                event.preventDefault();\r\n            } else {\r\n                vm.registrationButtonClicked = true;\r\n            }\r\n\r\n            // return\r\n            var confirm = $mdDialog.prompt()\r\n                .title('Enter SERIAL ID')\r\n                .textContent('Enter the serial id provided in ther Registration Slip')\r\n                .placeholder('Serial Id')\r\n                .ariaLabel('Serial Id')\r\n                .targetEvent(event)\r\n                .theme('normal')\r\n                .ok('Submit')\r\n                .cancel('Cancel');\r\n\r\n            $mdDialog.show(confirm).then(function(result) {\r\n                vm.registration.serialId = result;\r\n                return facultyService.confirmRegistration(vm.registration)\r\n                    .then(confirmRegistrationSuccess)\r\n                    .catch(confirmRegistrationFailure);\r\n            }, function() {\r\n                vm.registrationButtonClicked = false;\r\n            });\r\n        }\r\n\r\n        function confirmRegistrationSuccess(response) {\r\n            console.log(response);\r\n            vm.registrationButtonClicked = false;\r\n            vm.registration = {};\r\n            $scope.confirmRegistrationForm.$setPristine();\r\n            $scope.confirmRegistrationForm.$setUntouched();\r\n\r\n            var msg;\r\n\r\n            if (response.status == 400) {\r\n                msg = response.data.error.for;\r\n                fctToast.showToast(msg);\r\n            }\r\n\r\n            if (msg) {\r\n                msg = response.data.message;\r\n                fctToast.showToast(msg, true);\r\n            }\r\n\r\n        }\r\n\r\n        function confirmRegistrationFailure(error) {\r\n            var msg;\r\n\r\n            if (error.status == 500) {\r\n                msg = 'Internal server error, try again !!';\r\n            } else {\r\n                msg = error.data.error.for;\r\n            }\r\n\r\n            vm.registrationButtonClicked = false;\r\n            fctToast.showToast(msg);\r\n        }\r\n\r\n        function getRegistrationData() {\r\n            if (vm.registrationButtonClicked) {\r\n                event.preventDefault();\r\n            } else {\r\n                vm.registrationButtonClicked = true;\r\n            }\r\n\r\n            facultyService.getRegistrationData(vm.registration)\r\n                .then(function(response) {\r\n                    console.log(response);\r\n                    vm.registration.teamId = response.data.teamId;\r\n                    vm.registration.email = response.data.email;\r\n                    vm.registration.mobileno = response.data.mobileno;\r\n                    $mdDialog.show({\r\n                            templateUrl: './templates/components/dialogs/confirmDetailDialog.html',\r\n                            // parent: angular.element(document.body),\r\n                            controller: 'ConfirmRegistrationModalController',\r\n                            controllerAs: 'crmc',\r\n                            locals: {\r\n                                registration: vm.registration\r\n                            },\r\n                            targetEvent: event,\r\n                            clickOutsideToClose: true,\r\n                            fullscreen: true\r\n                        })\r\n                        .then(function(response) {\r\n                            return facultyService.confirmRegistration(vm.registration)\r\n                                .then(confirmRegistrationSuccess)\r\n                                .catch(confirmRegistrationFailure);\r\n                        }, function(error) {\r\n                            //error\r\n                        });\r\n                    // var confirm = $mdDialog.confirm()\r\n                    // .title('Confirmation Details')\r\n                    // .textContent('Team Id: ' + response.data.teamId + '                  Team Leader Email: ' + response.data.email + '          Team Leader Mobile Number: ' + response.data.mobileno)\r\n                    // .targetEvent(event)\r\n                    // .theme('normal')\r\n                    // .ok('Register')\r\n                    // .cancel('Cancel');\r\n                    // $mdDialog.show(confirm).then(function(result) {\r\n                    // \treturn facultyService.confirmRegistration(vm.registration)\r\n                    // \t\t.then(confirmRegistrationSuccess)\r\n                    // \t\t.catch(confirmRegistrationFailure);\r\n                    // }, function() {\r\n                    //   //error\r\n                    // });\r\n                })\r\n                .catch(function(error) {\r\n                    console.log(error);\r\n                });\r\n        }\r\n\r\n    }\r\n\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultySettingsController', FacultySettingsController);\r\n\r\n\tFacultySettingsController.$inject = ['facultyAuthService', 'fctToast', '$scope', '$rootScope', '$timeout', 'facultyService'];\r\n\r\n\tfunction FacultySettingsController(facultyAuthService, fctToast, $scope, $rootScope, $timeout, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\t\tvm.userDetail = {};\r\n\t\tvm.updateButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetEachFaculty();\r\n\t\t}\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\treturn facultyService.getEachFaculty()\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tvm.userDetail.email = response.data.email;\r\n\t\t\t\tvm.userDetail.mobileno = parseInt(response.data.mobileno);\r\n\t\t\t\tvm.userDetail.name = response.data.name;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty() {\r\n\t\t\tif (vm.updating) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updating = true;\r\n\t\t\t\tvm.updateButtonClicked = true;\r\n\t\t\t\treturn facultyService.updateFaculty(vm.userDetail)\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.userDetail = response.data;\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tvm.editInfo = false;\r\n\t\t\t\t\tgetEachFaculty();\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tfacultyAuthService.changeFacultyPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('FacultyChangePasswordSuccess', FacultyChangePasswordSuccess);\r\n\t\t$rootScope.$on('FacultyChangePasswordFailure', FacultyChangePasswordFailure);\r\n\r\n\t\tfunction FacultyChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction FacultyChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('RegistrationDetailsController', RegistrationDetailsController);\r\n\r\n\tRegistrationDetailsController.$inject = ['fctToast', '$rootScope', 'facultyService'];\r\n\r\n\tfunction RegistrationDetailsController(fctToast, $rootScope, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.noregistration = true;\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getFacultyRegistrations()\r\n\t\t\t\t.then(getRegistrationsSuccess)\r\n\t\t\t\t.catch(getRegistrationsFailure);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsSuccess(response) {\r\n\r\n\t\t\tif (response.data.registrations.length !== 0) {\r\n\t\t\t\tvm.registrations = response.data.registrations;\r\n\t\t\t\tvm.registrations_count = response.data.totalRegistrations;\r\n\t\t\t\tvm.collected_amount = response.data.totalCollectedAmount;\r\n\t\t\t\tvm.noregistration = false;\r\n\t\t\t} else {\r\n\t\t\t\tvm.noregistration = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsFailure(error) {\r\n\t\t\tfctToast.showToast('Internal Server Error');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('VerifyCoordinatorController', VerifyCoordinatorController);\r\n\r\n\tVerifyCoordinatorController.$inject = ['$scope', 'memberService', '$mdDialog'];\r\n\r\n\tfunction VerifyCoordinatorController($scope, memberService, $mdDialog) {\r\n\t\tvar vm = this;\r\n\t\tvm.limitFaculty = 5;\r\n\t\tvm.nomoreFaculty = true;\r\n\t\tvm.orderField = 'registrations_count';\r\n\t\tvm.reverseSort = true;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tloadmore: loadmore\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn memberService.getAllFacultyCoordinators()\r\n\t\t\t\t.then(getAllFacultyCoordinatorsSuccess)\r\n\t\t\t\t.catch(getAllFacultyCoordinatorsFailure);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getAllFacultyCoordinatorsSuccess(response) {console.log(response);\r\n\t\t\tvm.faculties = response.data;\r\n\t\t\t// console.log(vm.faculties);\r\n\t\t\tif (vm.limitFaculty <= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getAllFacultyCoordinatorsFailure(error) {\r\n\t\t\t//State go to Add Events\r\n\t\t\t//Dashboard\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id, index, event) {\r\n\t\t\tvm.verifyingIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Verifying ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Verification')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.verifyFaculty(id)\r\n\t\t\t\t\t.then(verifyFacultySuccess)\r\n\t\t\t\t\t.catch(verifyFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.verifyingIndex].verified = true;\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id, index, event) {\r\n\t\t\tvm.rejectionIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Rejecting ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Rejection')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.rejectFaculty(id)\r\n\t\t\t\t\t.then(rejectFacultySuccess)\r\n\t\t\t\t\t.catch(rejectFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.rejectionIndex].rejected = true;\r\n\t\t\tvm.faculties.splice(vm.rejectionIndex, 1);\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction loadmore() {\r\n\t\t\tvm.limitFaculty += 5;\r\n\t\t\tif (vm.limitFaculty >= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddEventController', AddEventController);\r\n\r\n\tAddEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$timeout', 'Upload', '$state', 'fctToast', '$filter', 'memberService'];\r\n\r\n\tfunction AddEventController(stateParams, eventService, $rootScope, $timeout, Upload, $state, fctToast, $filter, memberService) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = false;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t\t'event': \"Add\",\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.image = '';\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\t// vm.myEvent.rules = CKEDITOR.instances[\"editorRules\"].getData();\r\n\t\t\t// vm.myEvent.specification = CKEDITOR.instances[\"editorSpecification\"].getData();\r\n\t\t\t// vm.myEvent.judging_criteria = CKEDITOR.instances[\"editorJudgingCriteria\"].getData();\r\n\t\t\tconsole.log(vm.myEvent);\r\n\t\t\tif (vm.myEvent.isUpdate) {\r\n\t\t\t\treturn eventService.updateEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t} else {\r\n\t\t\t\treturn eventService.addEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Event Registered.\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\t$state.go('in_tc.showEvent');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tfile.result = response.data;\r\n\t\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\t\tlink: file.dest,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t\t\tconsole.log(attach);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIconImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} //dfdf//sdf=\r\n\t}\r\n})();\r\n","(function() {\r\n    'use strict';\r\n\r\n    angular\r\n        .module('fct.core')\r\n        .controller('DashboardController', DashboardController);\r\n\r\n    DashboardController.$inject = ['$rootScope', 'memberService', '$window'];\r\n\r\n    function DashboardController($rootScope, memberService, $window) {\r\n        var vm = this;\r\n        vm.confirmedCount = 0;\r\n        vm.unConfirmedCount = 0;\r\n        vm.totalConfirmedParticipants = 0;\r\n        vm.totalAmountCollected = 0;\r\n\r\n        angular.extend(vm, {\r\n            getVFS: getVFS,\r\n            getUVF: getUVF\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n            getVFS();\r\n            getUVF();\r\n            getConfirmedRegistrationCount();\r\n            // exportParticipantList();\r\n        }\r\n\r\n        function getVFS() {\r\n            return memberService.getVerifyFacultyStudent()\r\n                .then(function(response) {\r\n                    vm.VFSPath = response.data.path;\r\n                    // $window.open(response.data.path);\r\n                    //console.log(response);\r\n                })\r\n                .catch(function(error) {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n\r\n        function getUVF() {\r\n            return memberService.getUnverifiedFaculty()\r\n                .then(function(response) {\r\n                    vm.UVFPath = response.data.path;\r\n                    // $window.open(response.data.path);\r\n                    //console.log(response);\r\n                })\r\n                .catch(function(error) {\r\n                    //console.log(error);\r\n                });\r\n        }\r\n\r\n        function getConfirmedRegistrationCount() {\r\n          return memberService.getConfirmedRegistrationCount()\r\n            .then(function(response) {\r\n              vm.confirmedCount = response.data.confirmedCount;\r\n              vm.unConfirmedCount = response.data.unConfirmedCount;\r\n              vm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\r\n              vm.totalAmountCollected = response.data.totalAmountCollected;\r\n              console.log(response);\r\n            })\r\n            .catch(function(error) {\r\n              console.log(error);\r\n            });\r\n        }\r\n\r\n        function exportParticipantList() {\r\n          return memberService.exportParticipantList()\r\n            .then(function(response) {\r\n                console.log(response);\r\n            })\r\n            .catch(function(error) {\r\n                console.log(error);\r\n            });\r\n          }\r\n    }\r\n})();\r\n// return memberService.getUnverifiedFaculty()\r\n//     .then(function(response) {\r\n//         vm.UVFPath = response.data.path;\r\n//         // $window.open(response.data.path);\r\n//         //console.log(response);\r\n//     })\r\n//     .catch(function(error) {\r\n//         //console.log(error);\r\n//     });\r\n// }\r\n//\r\n// function getUnconfirmedRegistration() {\r\n//     return memberService.getUnconfirmedRegistration()\r\n//         .then(function(response) {\r\n//             console.log(reponse);\r\n//         })\r\n//         .catch(function(error) {\r\n//             //console.log(error);\r\n//         });\r\n// }\r\n// }\r\n// })();\r\n// // $window.open(response.data.path);\r\n// //console.log(response);\r\n// })\r\n// .catch(function(error) {\r\n//         .catch(function(error) {\r\n//             //console.log(error);\r\n//         });\r\n//     }\r\n//\r\n//     function getUnconfirmedRegistration() {\r\n//         return memberService.getUnconfirmedRegistration()\r\n//\r\n//             .then(function(response) {\r\n//                 console.log(reponse);\r\n//             })\r\n//             .catch(function(error) {\r\n//                     .then(function(response) {\r\n//                             console.log(reponse);\r\n//                         })\r\n//                         .catch(function(error) { //console.log(error);\r\n//                         });\r\n//                 }\r\n//             }\r\n//     })();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EachEventController', EachEventController);\r\n\r\n    EachEventController.$inject = ['$stateParams', 'eventService', '$sce'];\r\n\r\n    function EachEventController(stateParams, eventService, $sce) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          if(stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n            vm.eventId = stateParams.eventId;\r\n            getEvent();\r\n          }\r\n\t\t    }\r\n\r\n        function getEvent() {\r\n          return eventService.getSingleEvent(vm.eventId)\r\n            .then(getEventSuccess)\r\n            .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.myEvent = response.data;\r\n          vm.rules = $sce.trustAsHtml(vm.myEvent.rules);\r\n          vm.judging_criteria = $sce.trustAsHtml(vm.myEvent.judging_criteria);\r\n          vm.specification = $sce.trustAsHtml(vm.myEvent.specification);\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EventCardController', EventCardController);\r\n\r\n    EventCardController.$inject = ['eventService', '$mdDialog', 'memberService', '$scope'];\r\n\r\n    function EventCardController(eventService, $mdDialog, memberService, $scope) {\r\n        var vm = this;\r\n        vm.openCard = false;\r\n        vm.caret = 'expand_less';\r\n\r\n        angular.extend(vm, {\r\n            deleteEvent: deleteEvent,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function deleteEvent(id) {\r\n          if(id !== undefined && id !== null) {\r\n            vm.deleteId = id;\r\n            return memberService.getDeleteModal()\r\n              .then(confirmedDelete)\r\n              .catch(unconfirmedDelete);\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function confirmedDelete() {\r\n          return eventService.deleteEvent(vm.deleteId)\r\n            .then(deleteEventSuccess)\r\n            .catch(deleteEventFailure);\r\n        }\r\n\r\n        function unconfirmedDelete() {\r\n          //\r\n        }\r\n\r\n        function deleteEventSuccess(response) {\r\n          console.log(response);\r\n          $scope.reload();\r\n          // vm.reload();\r\n        }\r\n\r\n        function deleteEventFailure(error) {\r\n          console.log(error);\r\n          //redirect\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('EventRegistrationController', EventRegistrationController);\r\n\r\n\tEventRegistrationController.$inject = ['memberService', '$window'];\r\n\r\n\tfunction EventRegistrationController(memberService, $window) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tgetExcel: getExcel\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetRegistration();\r\n\t\t}\r\n\r\n\t\tfunction getRegistration() {\r\n\t\t\treturn memberService.getRegistrationsByEvent().then(success).catch(failure);\r\n\t\t}\r\n\r\n\t\tfunction success(response) {\r\n\t\t\tvm.eventDetails = response.data;\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction failure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction getExcel(event_name, confirmed) {\r\n\t\t\tvar input = {\r\n\t\t\t\tevent_name: event_name,\r\n\t\t\t\tconfirmation: confirmed,\r\n\t\t\t};\r\n\t\t\tvar json = JSON.stringify(input);\r\n\t\t\tmemberService.getEventRegistrationExcel(json).then(function (response) {\r\n\t\t\t\t$window.open(response.data.path);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberSettingsController', MemberSettingsController);\r\n\r\n\tMemberSettingsController.$inject = ['memberAuthService', 'fctToast', '$scope', '$rootScope', '$timeout'];\r\n\r\n\tfunction MemberSettingsController(memberAuthService, fctToast, $scope, $rootScope, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tmemberAuthService.changeMemberPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('MemberChangePasswordSuccess', MemberChangePasswordSuccess);\r\n\t\t$rootScope.$on('MemberChangePasswordFailure', MemberChangePasswordFailure);\r\n\r\n\t\tfunction MemberChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction MemberChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setPristine();\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ParticipantRegistrationController', ParticipantRegistrationController);\r\n\r\n\tParticipantRegistrationController.$inject = ['$http'];\r\n\r\n\tfunction ParticipantRegistrationController($http) {\r\n\t\tvar vm = this;\r\n\t\tvm.myParticipant = {\r\n\t\t\teventObject: {\r\n\t\t\t\tevent_id: 123123,\r\n\t\t\t\tevent_shortcode: 'EVET'\r\n\t\t\t},\r\n\t\t\tother_participants: []\r\n\t\t};\r\n    vm.otherParticipants = [];\r\n\t\tvm.myParticipant.other_participants = [];\r\n    vm.maxParticipants = 4;\r\n    vm.eventPrice = 50;\r\n    vm.esflag = false;\r\n    vm.nopflag = false;\r\n\r\n\t\tangular.extend(vm, {\r\n      getParticipantLength : getParticipantLength,\r\n      save : save,\r\n      openParticipantModule : openParticipantModule,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tvar x = '{\"eventObject\": {\"event_id\": \"123123\",\"event_shortcode\": \"EVET\",\"event_section\": \"1\",\"event_name\": \"1\"},\"other_participants\": [{\"title\": \"Team Member\",\"leaderFlag\": false,\"$$hashKey\": \"object:68\",\"name\": \"cl\",\"email\": \"d@ddc.c\",\"college_name\": \"1\",\"branch\": \"2\",\"semester\": \"6\",\"mobileno\": \"43223443223\",\"enrollment\": \"322342342342343\"}],\"total_amount\": 100,\"numberOfParticipant\": \"2\",\"do_payment\": true,\"team_leader\": {\"title\": \"Team Leader\",\"leaderFlag\": true,\"$$hashKey\": \"object:67\",\"name\": \"fd\",\"email\": \"s@sd.3\",\"mobileno\": \"12341232133\",\"college_name\": \"1\",\"branch\": \"1\",\"semester\": \"2\",\"enrollment\": \"231312312332333\"}}';\r\n\t\t\treturn $http.post('/api/registration/create', x)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n    function openParticipantModule(total) {\r\n      vm.nopflag = true;\r\n      var first = true;\r\n      vm.myParticipant.other_participants = [];\r\n      while(total > 0) {\r\n        var each = {\"title\": (first) ? \"Team Leader\" : \"Team Member\",\r\n                    \"leaderFlag\": first};\r\n        vm.myParticipant.other_participants.push(each);\r\n        first = false;\r\n        total--;\r\n      }\r\n    }\r\n\r\n    function getParticipantLength() {\r\n      return vm.myParticipant.other_participants.length;\r\n    }\r\n\r\n\t\tfunction save() {\r\n\t\t\tvm.myParticipant.do_payment = true;\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\tvm.myParticipant.team_leader = vm.myParticipant.other_participants[0];\r\n\t\t\tvm.myParticipant.other_participants.splice(0, 1);\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\treturn $http.post('/api/registration/create', vm.myParticipant)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('ShowEventController', ShowEventController);\r\n\r\n    ShowEventController.$inject = ['eventService'];\r\n\r\n    function ShowEventController(eventService) {\r\n        var vm = this;\r\n\r\n        angular.extend(vm, {\r\n            getEvents: getEvents,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          getEvents();\r\n        }\r\n\r\n        function getEvents() {\r\n            return eventService.getEvent()\r\n              .then(getEventSuccess)\r\n              .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.dummyEvents = response.data;\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('UpdateEventController', UpdateEventController);\r\n\r\n\tUpdateEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$state', 'fctToast', 'memberService', 'Upload', '$timeout'];\r\n\r\n\tfunction UpdateEventController(stateParams, eventService, $rootScope, state, fctToast, memberService, Upload, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = true;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.feeDisabled = false;\r\n\t\tvm.myEvent.do_payment = false;\r\n\t\tvm.loadIndex = 0;\r\n\t\tvm.loadCompleted = 3;\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t\t//checkEventId();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {\r\n\t\t\tvm.loadIndex++;\r\n\t\t\tif (vm.loadIndex == vm.loadCompleted) {\r\n\t\t\t\tcheckEventId();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction checkEventId() {\r\n\t\t\tif (stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n\t\t\t\tvm.eventId = stateParams.eventId;\r\n\t\t\t\treturn eventService.getSingleEvent(vm.eventId)\r\n\t\t\t\t\t.then(onEventGetSuccess)\r\n\t\t\t\t\t.catch(onEventGetFailure);\r\n\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfunction onEventGetSuccess(eventData) {\r\n\t\t\tconsole.log(eventData);\r\n\t\t\tvm.myEvent = eventData.data;\r\n\t\t\tvm.myEvent.event = \"Update\";\r\n\t\t\tvm.myEvent.totalManager = vm.myEvent.managers.length;\r\n\t\t\tvm.files = vm.myEvent.attachments;\r\n\t\t\t// return [CKEDITOR.instances['editorRules'].setData(vm.myEvent.rules),\r\n\t\t\t// \tCKEDITOR.instances['editorSpecification'].setData(vm.myEvent.specification),\r\n\t\t\t// \tCKEDITOR.instances['editorJudgingCriteria'].setData(vm.myEvent.judging_criteria)];\r\n\t\t}\r\n\r\n\t\tfunction onEventGetFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\treturn eventService.updateEvent(vm.eventId, vm.myEvent)\r\n\t\t\t\t.then(onUpdateSuccess)\r\n\t\t\t\t.catch(onUpdateFailure);\r\n\t\t}\r\n\r\n\t\tfunction onUpdateSuccess(response) {\r\n\t\t\tfctToast.showToast(\"Update Success.\", true);\r\n\t\t\tstate.go('in_tc.showEvent');\r\n\t\t}\r\n\r\n\t\tfunction onUpdateFailure(error) {\r\n\t\t\tfctToast.showToast(\"Please try again later.\");\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\tlink: response.data.path,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIcons',\r\n\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLayoutController', FacultyLayoutController)\r\n\t\t.controller('ContactDialogController', ContactDialogController);\r\n\r\n\tFacultyLayoutController.$inject = ['facultyAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$mdDialog', '$mdMedia', '$scope'];\r\n\r\n\tfunction FacultyLayoutController(facultyAuthService, $mdSidenav, $rootScope, fctToast, $state, $mdDialog, $mdMedia, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\t$scope.$watch(function () {\r\n\t\t\treturn $mdMedia('xs') || $mdMedia('sm');\r\n\t\t});\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t\tcontact: contact\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tfacultyAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\r\n\t\tfunction contact(ev) {\r\n\t\t\tvar useFullScreen = $mdMedia('sm') || $mdMedia('xs');\r\n\t\t\t$mdDialog.show({\r\n\t\t\t\tcontroller: 'ContactDialogController',\r\n\t\t\t\ttemplateUrl: '/templates/components/dialogs/contact.html',\r\n\t\t\t\tparent: angular.element(document.body),\r\n\t\t\t\ttargetEvent: ev,\r\n\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\tfullscreen: useFullScreen // Only for -xs, -sm breakpoints.\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tContactDialogController.$inject = ['$scope', '$mdDialog'];\r\n\r\n\tfunction ContactDialogController($scope, $mdDialog) {\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.hide = function () {\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLayoutController', MemberLayoutController);\r\n\r\n\tMemberLayoutController.$inject = ['memberAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$scope'];\r\n\r\n\tfunction MemberLayoutController(memberAuthService, $mdSidenav, $rootScope, fctToast, $state, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tmemberAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.member_login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordApplyController', FacultyForgotPasswordApplyController);\r\n\r\n\tFacultyForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyForgotPasswordApplyController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tconsole.log(\"HHHIII\");\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"222\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordApply', facultyForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordApply', facultyForgotPasswordApplyFailure);\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\t//df\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordSetController', FacultyForgotPasswordSetController);\r\n\r\n\tFacultyForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope', '$stateParams', '$location'];\r\n\r\n\tfunction FacultyForgotPasswordSetController($scope, fctToast, facultyAuthService, $state, $rootScope, $stateParams, $location) {\r\n\t\tvar vm = this;\r\n\t\tconsole.log(\"URL\", $location.url());\r\n\t\tvar uriLi = $location.url();\r\n\t\turiLi = uriLi.replace('#x3D;', '=');\r\n\t\turiLi = uriLi.replace('&%23x3D;', '=');\r\n\t\tvar fi, si, ti, foi;\r\n\t\tfi = uriLi.indexOf('=');\r\n\t\tsi = uriLi.indexOf('&');\r\n\t\tti = uriLi.indexOf('=', fi + 1);\r\n\t\tfoi = uriLi.length;\r\n\r\n\t\tvar utoken = uriLi.substring(fi + 1, si);\r\n\t\t// console.log(\"utoken\", utoken);\r\n\r\n\t\tvar userid = uriLi.substring(ti + 1, foi);\r\n\t\t// console.log(\"uid\", userid);\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = utoken;\r\n\t\t\tvar uid = userid;\r\n\r\n\t\t\tfacultyAuthService.facultyForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordSet', facultyForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordSet', facultyForgotPasswordSetFailure);\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLoginController', FacultyLoginController);\r\n\r\n\tFacultyLoginController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyLoginController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.faculty) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyRegistrationController', FacultyRegistrationController);\r\n\r\n\tFacultyRegistrationController.$inject = ['facultyAuthService', '$scope', 'fctToast', '$rootScope', '$state', '$timeout', '$q'];\r\n\r\n\tfunction FacultyRegistrationController(facultyAuthService, $scope, fctToast, $rootScope, $state, $timeout, $q) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\t// vm.states = loadAll();\r\n\t\tvm.selectedItem = null;\r\n\t\tvm.searchText = null;\r\n\t\tvm.querySearch = querySearch;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyAuthService.getColleges()\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesError);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\tvm.colleges = response.data;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesError(error) {\r\n\t\t\tfctToast.showToast('Error in getting colleges');\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = 'Email already registered';\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction querySearch(query) {\r\n\t\t\tvar results = query ? vm.colleges.filter(createFilterFor(query)) : vm.colleges;\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tconsole.log(results);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tdeferred.resolve(results);\r\n\t\t\t}, Math.random() * 1000, false);\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t// function loadAll() {\r\n\t\t// \tvar allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana';\r\n\t\t//\r\n\t\t// \treturn allStates.split(/, +/g).map(function (state) {\r\n\t\t// \t\treturn {\r\n\t\t// \t\t\tvalue: state.toLowerCase(),\r\n\t\t// \t\t\tdisplay: state\r\n\t\t// \t\t};\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\r\n\t\tfunction createFilterFor(query) {\r\n\t\t\tvar lowercaseQuery = angular.lowercase(query);\r\n\t\t\treturn function filterFn(college) {\r\n\t\t\t\tvar matches = college.name.match(/\\b(\\w)/g);\r\n\t\t\t\tvar acronym = matches.join('');\r\n\t\t\t\tacronym = acronym.toLowerCase();\r\n\t\t\t\treturn (college.name.toLowerCase().trim().indexOf(lowercaseQuery) === 0 ||\r\n\t\t\t\t\tacronym.indexOf(lowercaseQuery) === 0);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordApplyController', MemberForgotPasswordApplyController);\r\n\r\n\tMemberForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberForgotPasswordApplyController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"HIII\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordApply', memberForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordApply', memberForgotPasswordApplyFailure);\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordSetController', MemberForgotPasswordSetController);\r\n\r\n\tMemberForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope', '$stateParams'];\r\n\r\n\tfunction MemberForgotPasswordSetController($scope, fctToast, memberAuthService, $state, $rootScope, $stateParams) {\r\n\t\tvar vm = this;\r\n\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = $stateParams.token;\r\n\t\t\tvar uid = $stateParams.id;\r\n\r\n\t\t\tmemberAuthService.memberForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordSet', memberForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordSet', memberForgotPasswordSetFailure);\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLoginController', MemberLoginController);\r\n\r\n\tMemberLoginController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberLoginController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorMemberLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\t// console.log(error);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.member) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberRegistrationController', MemberRegistrationController);\r\n\r\n\tMemberRegistrationController.$inject = ['memberAuthService', '$scope', 'fctToast', '$rootScope', '$state'];\r\n\r\n\tfunction MemberRegistrationController(memberAuthService, $scope, fctToast, $rootScope, $state) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tconsole.log(newUser);\r\n\t\t\tmemberAuthService.memberRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorMemberRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = error.data.errMsg.toString();\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n\r\n    angular.module('fct.core')\r\n      .animation('.slide-vertical', slideVertical);\r\n\r\n    slideVertical.$inject = ['TweenMax'];\r\n\r\n    function slideVertical(TweenMax) {\r\n        return {\r\n            addClass: addHideClass,\r\n            removeClass: removeHideClass\r\n        };\r\n    }\r\n\r\n    function addHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        // var timeline = new TimelineMax();\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.3, {opacity: 1, ease: Power0.easeNone});\r\n        TweenMax.to(element, 0.4, {height:0, ease:  Power2.easeOut, onComplete: done}).delay(0.25);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n\r\n    }\r\n\r\n    function removeHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        element.removeClass('ng-hide');\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.4, {height:0, ease: Power2.easeIn});\r\n        TweenMax.to(element, 0.3, {opacity: 1, ease: Power2.easeIn, onComplete:done}).delay(0.35);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n    }\r\n})();\r\n"]}