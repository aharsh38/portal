{"version":3,"sources":["api/api.module.js","app/fct_app.module.js","core/core.module.js","core/core.config.js","api/services/event.factory.js","api/services/faculty.factory.js","api/services/facultyAuth.factory.js","api/services/member.factory.js","api/services/memberAuth.factory.js","api/interceptors/authInterceptor.factory.js","core/services/fctToast.factory.js","core/directives/core.eventCard.directive.js","core/directives/core.fileUpload.directive.js","core/controllers/in_fc/addStudentCoordinator.controller.js","core/controllers/in_fc/ConfirmRegistrationModal.controller.js","core/controllers/in_fc/confirmRegistrations.controller.js","core/controllers/in_fc/confirmRegistrations1.controller.js","core/controllers/in_fc/facultySettings.controller.js","core/controllers/in_fc/registrationDetails.controller.js","core/controllers/in_fc/verifyCoordinator.controller.js","core/controllers/in_team/addEvent.controller.js","core/controllers/in_team/dashboard.controller.js","core/controllers/in_team/eachEvent.controller.js","core/controllers/in_team/eventCard.controller.js","core/controllers/in_team/eventRegistration.controller.js","core/controllers/in_team/memberSettings.controller.js","core/controllers/in_team/participantRegistration.controller.js","core/controllers/in_team/showEvent.controller.js","core/controllers/in_team/updateEvent.controller.js","core/controllers/layout/facultyLayout.controller.js","core/controllers/layout/memberLayout.controller.js","core/controllers/out/facultyForgotPasswordApply.controller.js","core/controllers/out/facultyForgotPasswordSet.controller.js","core/controllers/out/facultyLogin.controller.js","core/controllers/out/facultyRegister.controller.js","core/controllers/out/memberForgotPasswordApply.controller.js","core/controllers/out/memberForgotPasswordSet.controller.js","core/controllers/out/memberLogin.controller.js","core/controllers/out/memberRegister.controller.js","core/animations/core.slideVertical.animation.js"],"names":["angular","module","initializeCore","$rootScope","$interval","active","preloader","$on","startPreloader","stopPreloader","pageTransition","alreadyRedirected","constant","TweenMax","TimelineMax","run","$inject","configName","$mdThemingProvider","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","activate","setTheme","setRoutes","addInterceptors","interceptors","push","theme","primaryPalette","themePalette","primary","accentPalette","accent","warnPalette","warn","html5Mode","when","otherwise","state","templateUrl","resolve","redirectLoggedIn","controller","controllerAs","redirectFacultyNotLoggedIn","redirectTeamNotLoggedIn","url","facultyAuthService","memberAuthService","$q","$state","$timeout","defer","facultyAuthenticate","checkFacultyLoggedIn","faculty","verified","go","memberAuthenticate","checkMemberLoggedIn","reject","promise","config","eventService","$http","addEvent","eventData","post","then","resolveFunc","catch","rejectFunc","getEvent","get","getSingleEvent","id","updateEvent","eventId","put","deleteEvent","delete","response","error","service","factory","facultyService","getEachFaculty","link","baseLink","errorFunc","confirmRegistration","registration","getFacultyRegistrations","editStudentCoordinator","student","editStudentCoordinatorSuccess","editStudentCoordinatorFailure","getStudentCoordinator","updateFaculty","data","getRegistrationData","$window","payload","token","getToken","split","atob","JSON","parse","isDefined","collegeId","email","mobileno","name","rejected","forgot_password","_id","exp","Date","now","replaceToken","removeToken","saveToken","localStorage","removeItem","facultyLogin","user","facultyLoginSuccess","facultyLoginFailure","facultyRegister","facultyRegisterSuccess","facultyRegisterFailure","$broadcast","getColleges","getCollegesSuccess","getCollegesFailure","changeFacultyPassword","passwordObject","facultyId","changePasswordLink","patch","changePasswordSuccess","changePasswordFailure","facultyForgotPasswordApply","facultyForgotPasswordApplySuccess","facultyForgotPasswordApplyFailure","facultyForgotPasswordSet","facultyForgotPasswordSetSuccess","facultyForgotPasswordSetFailure","logout","checkVerified","console","log","checkVerifiedSuccess","checkVerifiedFailure","memberService","$mdDialog","getAllFacultyCoordinators","responseFunc","verifyFaculty","rejectFaculty","getTotalRegistrations","getRegistrationsByEvent","getVerifyFacultyStudent","getUnverifiedFaculty","getUnconfirmedRegistration","getEventRegistrationExcel","request","getConfirmedRegistrationCount","exportParticipantList","getDeleteModal","confirm","title","textContent","ok","cancel","show","isUndefined","registrations_count","member","memberLogin","memberLoginSuccess","memberLoginFailure","memberRegister","memberRegisterSuccess","memberRegisterFailure","memberForgotPasswordApply","memberForgotPasswordApplySuccess","memberForgotPasswordApplyFailure","memberForgotPasswordSet","memberForgotPasswordSetSuccess","memberForgotPasswordSetFailure","changeMemberPassword","memberId","authInterceptor","$location","authHead","headers","requestError","rejection","responseError","status","path","fctToast","$mdToast","showToast","success","toasterClass","toaster","simple","position","hideDelay","toastClass","eventCard","linkFunc","$scope","toggleCard","openCard","caret","directive","restrict","scope","eventdata","reload","fileUpload","template","replace","transclude","ngModel","disabled","require","el","attr","Resize","file","index","type","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","draw","width","img","height","ctx","canvas","getContext","drawImage","maxWidth","maxHeight","b64","toDataURL","uploadFile","document","createElement","reader","FileReader","onload","e","src","target","result","readAsDataURL","upload","fileProperties","resize","indexOf","extend","size","percent","preview","xhr","XMLHttpRequest","fd","FormData","progress","uri","open","withCredentials","shareCredentials","forEach","item","setRequestHeader","header","value","onreadystatechange","code","statusText","$apply","addEventListener","parseInt","loaded","total","append","fileName","send","withPreview","fileSelector","sel","credentials","multiple","accept","element","querySelectorAll","bind","$eval","find","click","files","f","AddStudentController","getStudentCoordinatorSuccess","getStudentCoordinatorFailure","student_coordinator","vm","coordinator","preInfo","editInfo","update","event","updateButtonClicked","edit","addStudentCoordinator","addButtonClicked","addStudentCoordinatorSuccess","this","ConfirmRegistrationModalController","confirmData","registrationButtonClicked","preventDefault","confirmRegistrationSuccess","confirmRegistrationFailure","hide","ConfirmRegistrationsController","prompt","placeholder","ariaLabel","targetEvent","serialId","confirmRegistrationForm","$setPristine","$setUntouched","msg","for","message","ConfirmRegistrationsController1","getRegistrationDataSuccess","getRegistrationDataFailure","teamId","locals","clickOutsideToClose","fullscreen","FacultySettingsController","userDetail","updating","changePassword","updateInfo","FacultyChangePasswordSuccess","resetForm","FacultyChangePasswordFailure","changePasswordForm","RegistrationDetailsController","getRegistrationsSuccess","getRegistrationsFailure","registrations","totalRegistrations","collected_amount","totalCollectedAmount","noregistration","VerifyCoordinatorController","getAllFacultyCoordinatorsSuccess","getAllFacultyCoordinatorsFailure","faculties","limitFaculty","nomoreFaculty","verifyingIndex","verifyFacultySuccess","verifyFacultyFailure","rejectionIndex","rejectFacultySuccess","rejectFacultyFailure","splice","loadmore","orderField","reverseSort","AddEventController","stateParams","Upload","$filter","doneLoading","openManagersModal","myEvent","managers","each","feeTypeChanged","fees_type","fees","feeDisabled","do_payment","save","isUpdate","registerSuccess","registerFailure","uploadFiles","errFiles","attach","doc_name","dest","attachments","errorMsg","evt","Math","min","uploadImage","reponse","event_image","uploadIconImage","event_icon_image","image","DashboardController","getVFS","getUVF","array","unconfirmed_registrations","VFSPath","UVFPath","confirmedCount","unConfirmedCount","totalConfirmedParticipants","totalAmountCollected","EachEventController","$sce","undefined","getEventSuccess","getEventFailure","rules","trustAsHtml","judging_criteria","specification","EventCardController","deleteId","confirmedDelete","unconfirmedDelete","deleteEventSuccess","deleteEventFailure","EventRegistrationController","getRegistration","failure","eventDetails","getExcel","event_name","confirmed","input","confirmation","json","stringify","MemberSettingsController","MemberChangePasswordSuccess","MemberChangePasswordFailure","ParticipantRegistrationController","x","openParticipantModule","nopflag","first","myParticipant","other_participants","leaderFlag","getParticipantLength","team_leader","eventObject","event_id","event_shortcode","otherParticipants","maxParticipants","eventPrice","esflag","ShowEventController","getEvents","dummyEvents","UpdateEventController","loadIndex","loadCompleted","checkEventId","onEventGetSuccess","onEventGetFailure","totalManager","onUpdateSuccess","onUpdateFailure","event_icon","FacultyLayoutController","$mdSidenav","$mdMedia","logoutSuccessful","openLeftSidenav","isOpenLeftSidenav","isOpen","closeLeftSidenav","close","contact","ev","useFullScreen","parent","body","$watch","ContactDialogController","MemberLayoutController","FacultyForgotPasswordApplyController","submit","submitButtonClicked","newUser","copy","forgotPasswordApplyForm","applied","$error","not_registered","FacultyForgotPasswordSetController","$stateParams","changePasswordButtonClicked","utoken","uid","userid","forgotPasswordSetForm","set","uriLi","fi","si","ti","foi","substring","Boolean","FacultyLoginController","login","loginButtonClicked","loginSuccess","resetLogin","loginFailure","toString","loginForm","errorState","password","incorrect","FacultyRegistrationController","getCollegesError","colleges","register","registerButtonClicked","registerForm","querySearch","query","results","filter","createFilterFor","deferred","random","lowercaseQuery","lowercase","college","matches","match","acronym","join","toLowerCase","trim","selectedItem","searchText","MemberForgotPasswordApplyController","MemberForgotPasswordSetController","MemberLoginController","MemberRegistrationController","errMsg","slideVertical","addClass","addHideClass","removeClass","removeHideClass","className","done","opacity","from","ease","Power0","easeNone","to","Power2","easeOut","onComplete","delay","easeIn","animation"],"mappings":"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","file":"fcApp.min.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api', []);\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct_app', [\r\n\t\t\t'fct.api',\r\n\t\t\t'fct.core'\r\n\t\t]);\r\n})();\r\n","(function () {\r\n\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core', [\r\n\t\t\t'ngAnimate',\r\n\t\t\t'ngMessages',\r\n\t\t\t'ngMaterial',\r\n\t\t\t'ui.router',\r\n\t\t\t'underscore',\r\n\t\t\t'ngFileUpload',\r\n\t\t\t'validation.match',\r\n\t\t\t'ngMdIcons',\r\n\t\t\t'angularMoment',\r\n\t\t\t'ckeditor'\r\n\t\t\t// 'fct.api'\r\n\t\t]);\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.constant('TweenMax', TweenMax)\r\n\t\t.constant('TimelineMax', TimelineMax);\r\n\t//\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.run(initializeCore);\r\n\r\n\tinitializeCore.$inject = ['$rootScope', '$interval'];\r\n\r\n\tfunction initializeCore($rootScope, $interval) {\r\n\t\tactive();\r\n\r\n\t\tfunction active() {\r\n\t\t\tpreloader();\r\n\t\t}\r\n\r\n\t\t$rootScope.alreadyRedirected = false;\r\n\t\t\t\r\n\t\r\n\t\tfunction preloader() {\r\n\t\t\t$rootScope.$on('$viewContentLoading', startPreloader);\r\n\t\t\t$rootScope.$on('$viewContentLoaded', stopPreloader);\r\n\t\t}\r\n\r\n\t\tfunction startPreloader() {\r\n\t\t\t$rootScope.pageTransition = true;\r\n\t\t}\r\n\r\n\r\n\t\tfunction stopPreloader() {\r\n\t\t\tif ($rootScope.pageTransition) {\r\n\t\t\t\t$interval(function () {\r\n\t\t\t\t\t$rootScope.pageTransition = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","\t(function() {\r\n\t    'use strict';\r\n\r\n\t    angular\r\n\t        .module('fct.core')\r\n\t        .config(configName);\r\n\r\n\t    configName.$inject = ['$mdThemingProvider', '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider'];\r\n\r\n\t    function configName($mdThemingProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n\t        var themePalette = {\r\n\t            primary: \"blue\",\r\n\t            accent: \"amber\",\r\n\t            warn: \"red\"\r\n\t        };\r\n\r\n\t        activate();\r\n\r\n\t        function activate() {\r\n\t            setTheme();\r\n\t            setRoutes();\r\n\t            addInterceptors();\r\n\t        }\r\n\r\n\t        function addInterceptors() {\r\n\t            $httpProvider.interceptors.push('authInterceptor');\r\n\t        }\r\n\r\n\t        function setTheme() {\r\n\t            $mdThemingProvider.theme('default')\r\n\t                .primaryPalette(themePalette.primary)\r\n\t                .accentPalette(themePalette.accent)\r\n\t                .warnPalette(themePalette.warn);\r\n\t        }\r\n\r\n\t        //\r\n\t        //     function setRoutes() {\r\n\t        //         $locationProvider.html5Mode(true);\r\n\t        //         $urlRouterProvider.when('/', '/login');\r\n\t        //         $urlRouterProvider.otherwise('/login');\r\n\t        //         $stateProvider\r\n\t        //             .state('out', {\r\n\t        //                 templateUrl: '/templates/layouts/out.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectLoggedIn: redirectLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_fc', {\r\n\t        //                 templateUrl: '/templates/layouts/in_fc.html',\r\n\t        //                 controller: 'FacultyLayoutController',\r\n\t        //                 controllerAs: 'flayc',\r\n\t        //                 resolve: {\r\n\t        //                     redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_tc', {\r\n\t        //                 controller: 'MemberLayoutController',\r\n\t        //                 controllerAs: 'mlayc',\r\n\t        //                 templateUrl: '/templates/layouts/in_tc.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('out.login', {\r\n\t        //                 url: '/login',\r\n\t        //                 templateUrl: '/templates/pages/out/login.html',\r\n\t        //                 controller: 'FacultyLoginController',\r\n\t        //                 controllerAs: 'flc'\r\n\t        //             })\r\n\t        //             .state('out.register', {\r\n\t        //                 url: '/register',\r\n\t        //                 templateUrl: '/templates/pages/out/register.html',\r\n\t        //                 controller: 'FacultyRegistrationController',\r\n\t        //                 controllerAs: 'frc'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordApply', {\r\n\t        //                 url: '/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t        //                 controller: 'FacultyForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'ffpac'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordSet', {\r\n\t        //                 url: '/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t        //                 controller: 'FacultyForgotPasswordSetController',\r\n\t        //                 controllerAs: 'ffpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_login', {\r\n\t        //                 url: '/member/login',\r\n\t        //                 templateUrl: '/templates/pages/out/member/login.html',\r\n\t        //                 controller: 'MemberLoginController',\r\n\t        //                 controllerAs: 'mlc'\r\n\t        //             })\r\n\t        //             .state('out.member_register', {\r\n\t        //                 url: '/member/register',\r\n\t        //                 templateUrl: '/templates/pages/out/member/register.html',\r\n\t        //                 controller: 'MemberRegistrationController',\r\n\t        //                 controllerAs: 'mrc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordSet', {\r\n\t        //                 url: '/member/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t        //                 controller: 'MemberForgotPasswordSetController',\r\n\t        //                 controllerAs: 'mfpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordApply', {\r\n\t        //                 url: '/member/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t        //                 controller: 'MemberForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'mfpac'\r\n\t        //             })\r\n\t        //             .state('in_tc.verifyCoordinator', {\r\n\t        //                 url: '/member/verifyCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t        //                 controller: 'VerifyCoordinatorController',\r\n\t        //                 controllerAs: 'vcc'\r\n\t        //             })\r\n\t        //             .state('in_tc.collegeList', {\r\n\t        //                 url: '/member/collegeList',\r\n\t        //                 templateUrl: '/templates/pages/in/collegeList.html'\r\n\t        //             })\r\n\t        //             .state('in_tc.dashboard', {\r\n\t        //                 url: '/dashboard',\r\n\t        //                 templateUrl: '/templates/pages/in/dashboard.html',\r\n\t        //                 controller: 'DashboardController',\r\n\t        //                 controllerAs: 'dc'\r\n\t        //             })\r\n\t        //             .state('in_tc.eventRegistrations', {\r\n\t        //                 url: '/eventRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t        //                 controller: 'EventRegistrationController',\r\n\t        //                 controllerAs: 'erc'\r\n\t        //             })\r\n\t        //             .state('in_tc.addEvent', {\r\n\t        //                 url: '/member/events/create',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'AddEventController',\r\n\t        //                 controllerAs: 'ec',\r\n\t        //             })\r\n\t        //             .state('in_tc.settings', {\r\n\t        //                 url: '/member/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t        //                 controller: 'MemberSettingsController',\r\n\t        //                 controllerAs: 'msc'\r\n\t        //             })\r\n\t        //             .state('in_tc.updateEvent', {\r\n\t        //                 url: '/member/events/:eventId/update',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'UpdateEventController',\r\n\t        //                 controllerAs: 'ec'\r\n\t        //             })\r\n\t        //             .state('in_tc.showEvent', {\r\n\t        //                 url: '/member/events',\r\n\t        //                 templateUrl: '/templates/pages/in/showEvent.html',\r\n\t        //                 controller: 'ShowEventController',\r\n\t        //                 controllerAs: 'sec'\r\n\t        //             })\r\n\t        //             .state('in_tc.eachEvent', {\r\n\t        //                 url: '/member/events/:eventId',\r\n\t        //                 templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t        //                 controller: 'EachEventController',\r\n\t        //                 controllerAs: 'eec'\r\n\t        //             })\r\n\t        //             .state('in_fc.guidelines', {\r\n\t        //                 url: '/guidelines',\r\n\t        //                 templateUrl: '/templates/pages/in/guidelines.html'\r\n\t        //             })\r\n\t        //             .state('in_fc.settings', {\r\n\t        //                 url: '/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t        //                 controller: 'FacultySettingsController',\r\n\t        //                 controllerAs: 'fsc'\r\n\t        //             })\r\n\t        //             .state('in_fc.confirm_registration', {\r\n\t        //                 url: '/confirm/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t        //                 controller: 'ConfirmRegistrationsController1',\r\n\t        //                 controllerAs: 'crc'\r\n\t        //             })\r\n\t        //             .state('in_fc.registration_details', {\r\n\t        //                 url: '/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t        //                 controller: 'RegistrationDetailsController',\r\n\t        //                 controllerAs: 'rdc'\r\n\t        //             })\r\n\t        //             .state('in_fc.student_coordinator', {\r\n\t        //                 url: '/studentCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t        //                 controller: 'AddStudentController',\r\n\t        //                 controllerAs: 'ascc'\r\n\t        //             })\r\n\t        //             .state('in_fc.participant_registration', {\r\n\t        //                 url: '/participantRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t        //                 controller: 'ParticipantRegistrationController',\r\n\t        //                 controllerAs: 'prc'\r\n\t        //             });\r\n\t        //     }\r\n\t        // }\r\n\r\n\t        function setRoutes() {\r\n\t            $locationProvider.html5Mode(true);\r\n\t            $urlRouterProvider.when('/', '/login');\r\n\t            $urlRouterProvider.otherwise('/login');\r\n\t            $stateProvider\r\n\t                .state('out', {\r\n\t                    templateUrl: '/templates/layouts/out.html',\r\n\t                    resolve: {\r\n\t                        redirectLoggedIn: redirectLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_fc', {\r\n\t                    templateUrl: '/templates/layouts/in_fc.html',\r\n\t                    controller: 'FacultyLayoutController',\r\n\t                    controllerAs: 'flayc',\r\n\t                    resolve: {\r\n\t                        redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_tc', {\r\n\t                    controller: 'MemberLayoutController',\r\n\t                    controllerAs: 'mlayc',\r\n\t                    templateUrl: '/templates/layouts/in_tc.html',\r\n\t                    resolve: {\r\n\t                        redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('out.login', {\r\n\t                    url: '/login',\r\n\t                    templateUrl: '/templates/pages/out/login.html',\r\n\t                    controller: 'FacultyLoginController',\r\n\t                    controllerAs: 'flc'\r\n\t                })\r\n\t                .state('out.register', {\r\n\t                    url: '/register',\r\n\t                    templateUrl: '/templates/pages/out/register.html',\r\n\t                    controller: 'FacultyRegistrationController',\r\n\t                    controllerAs: 'frc'\r\n\t                })\r\n\t                .state('out.forgotPasswordApply', {\r\n\t                    url: '/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t                    controller: 'FacultyForgotPasswordApplyController',\r\n\t                    controllerAs: 'ffpac'\r\n\t                })\r\n\t                .state('out.forgotPasswordSet', {\r\n\t                    url: '/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t                    controller: 'FacultyForgotPasswordSetController',\r\n\t                    controllerAs: 'ffpsc'\r\n\t                })\r\n\t                .state('out.member_login', {\r\n\t                    url: '/member/login',\r\n\t                    templateUrl: '/templates/pages/out/member/login.html',\r\n\t                    controller: 'MemberLoginController',\r\n\t                    controllerAs: 'mlc'\r\n\t                })\r\n\t                .state('out.member_register', {\r\n\t                    url: '/member/register',\r\n\t                    templateUrl: '/templates/pages/out/member/register.html',\r\n\t                    controller: 'MemberRegistrationController',\r\n\t                    controllerAs: 'mrc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordSet', {\r\n\t                    url: '/member/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t                    controller: 'MemberForgotPasswordSetController',\r\n\t                    controllerAs: 'mfpsc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordApply', {\r\n\t                    url: '/member/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t                    controller: 'MemberForgotPasswordApplyController',\r\n\t                    controllerAs: 'mfpac'\r\n\t                })\r\n\t                .state('in_tc.verifyCoordinator', {\r\n\t                    url: '/member/verifyCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t                    controller: 'VerifyCoordinatorController',\r\n\t                    controllerAs: 'vcc'\r\n\t                })\r\n\t                .state('in_tc.collegeList', {\r\n\t                    url: '/member/collegeList',\r\n\t                    templateUrl: '/templates/pages/in/collegeList.html'\r\n\t                })\r\n\t                .state('in_tc.dashboard', {\r\n\t                    url: '/dashboard',\r\n\t                    templateUrl: '/templates/pages/in/dashboard.html',\r\n\t                    controller: 'DashboardController',\r\n\t                    controllerAs: 'dc'\r\n\t                })\r\n\t                .state('in_tc.eventRegistrations', {\r\n\t                    url: '/eventRegistration',\r\n\t                    templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t                    controller: 'EventRegistrationController',\r\n\t                    controllerAs: 'erc'\r\n\t                })\r\n\t                .state('in_tc.addEvent', {\r\n\t                    url: '/member/events/create',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'AddEventController',\r\n\t                    controllerAs: 'ec',\r\n\t                })\r\n\t                .state('in_tc.settings', {\r\n\t                    url: '/member/settings',\r\n\t                    templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t                    controller: 'MemberSettingsController',\r\n\t                    controllerAs: 'msc'\r\n\t                })\r\n\t                .state('in_tc.updateEvent', {\r\n\t                    url: '/member/events/:eventId/update',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'UpdateEventController',\r\n\t                    controllerAs: 'ec'\r\n\t                })\r\n\t                .state('in_tc.showEvent', {\r\n\t                    url: '/member/events',\r\n\t                    templateUrl: '/templates/pages/in/showEvent.html',\r\n\t                    controller: 'ShowEventController',\r\n\t                    controllerAs: 'sec'\r\n\t                })\r\n\t                .state('in_tc.eachEvent', {\r\n\t                    url: '/member/events/:eventId',\r\n\t                    templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t                    controller: 'EachEventController',\r\n\t                    controllerAs: 'eec'\r\n\t                })\r\n\t                .state('in_fc.guidelines', {\r\n\t                    url: '/guidelines',\r\n\t                    templateUrl: '/templates/pages/in/guidelines.html'\r\n\t                })\r\n\t                .state('in_fc.settings', {\r\n\t                    url: '/settings',\r\n\t                    templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t                    controller: 'FacultySettingsController',\r\n\t                    controllerAs: 'fsc'\r\n\t                })\r\n\t                .state('in_fc.confirm_registration', {\r\n\t                    url: '/confirm/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t                    controller: 'ConfirmRegistrationsController1',\r\n\t                    controllerAs: 'crc'\r\n\t                })\r\n\t                .state('in_fc.registration_details', {\r\n\t                    url: '/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t                    controller: 'RegistrationDetailsController',\r\n\t                    controllerAs: 'rdc'\r\n\t                })\r\n\t                .state('in_fc.student_coordinator', {\r\n\t                    url: '/studentCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t                    controller: 'AddStudentController',\r\n\t                    controllerAs: 'ascc'\r\n\t                })\r\n\t                .state('in_fc.participant_registration', {\r\n\t                    url: '/participantRegistration',\r\n\t                    templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t                    controller: 'ParticipantRegistrationController',\r\n\t                    controllerAs: 'prc'\r\n\t                });\r\n\t        }\r\n\t    }\r\n\t    redirectFacultyNotLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectFacultyNotLoggedIn(facultyAuthService, memberAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate) {\r\n\t            if ($rootScope.faculty.verified !== true && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t            }\r\n\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    redirectTeamNotLoggedIn.$inject = ['memberAuthService', 'facultyAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectTeamNotLoggedIn(memberAuthService, facultyAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t        if (memberAuthenticate) {\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t            if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\r\n\r\n\t        }\r\n\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\r\n\t    redirectLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$state', '$q', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectLoggedIn(facultyAuthService, memberAuthService, $state, $q, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t            defer.reject();\r\n\t            $timeout(function() {\r\n\t                $rootScope.alreadyRedirected = true;\r\n\t                $state.go('in_fc.guidelines');\r\n\t            });\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                defer.reject();\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t            } else {\r\n\t                defer.resolve();\r\n\t            }\r\n\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    // redirectTeamLoggedIn.$inject = ['memberAuthService','facultyAuthService', '$state', '$q', '$timeout'];\r\n\t    //\r\n\t    // function redirectTeamLoggedIn(memberAuthService, facultyAuthService, $state, $q, $timeout) {\r\n\t    // \t// if(angular.isDefined($rootScope.faculty)){\r\n\t    // \t//\r\n\t    // \t// }\r\n\t    //\r\n\t    // \tvar defer = $q.defer();\r\n\t    // \tvar authenticate = memberAuthService.checkMemberLoggedIn();\r\n\t    // \tif (authenticate) {\r\n\t    // \t\tdefer.reject();\r\n\t    // \t\t$timeout(function () {\r\n\t    // \t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t    // \t\t});\r\n\t    // \t} else {\r\n\t    // \t\tdefer.resolve();\r\n\t    // \t}\r\n\t    // \treturn defer.promise;\r\n\t    // }\r\n\r\n\t})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t  .module('fct.core')\r\n\t  .factory('eventService', eventService);\r\n\r\n\teventService.$inject = ['$http'];\r\n\r\n\tfunction eventService($http) {\r\n\t  var service = {\r\n\t    addEvent: addEvent,\r\n\t\t\tgetEvent: getEvent,\r\n\t\t\tupdateEvent: updateEvent,\r\n\t\t\tgetSingleEvent: getSingleEvent,\r\n\t\t\tdeleteEvent: deleteEvent,\r\n\t  };\r\n\r\n\t  return service;\r\n\r\n\t  function addEvent(eventData) {\r\n\t\t\treturn $http.post('/api/members/events', eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getEvent() {\r\n\t\t\treturn $http.get('/api/members/events')\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getSingleEvent(id) {\r\n\t\t\treturn $http.get('/api/members/events/' + id)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function updateEvent(eventId, eventData) {\r\n\t\t\treturn $http.put('/api/members/events/' + eventId, eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function deleteEvent(eventId) {\r\n\t\t\treturn $http.delete('/api/members/events/' + eventId)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyService', facultyService);\r\n\r\n\tfacultyService.$inject = ['$http', '$rootScope'];\r\n\r\n\tfunction facultyService($http, $rootScope) {\r\n\t\tvar baseLink = '/api/faculty/' + $rootScope.faculty.id;\r\n\r\n\t\tvar service = {\r\n\t\t\tconfirmRegistration: confirmRegistration,\r\n\t\t\tgetFacultyRegistrations: getFacultyRegistrations,\r\n\t\t\tgetStudentCoordinator: getStudentCoordinator,\r\n\t\t\teditStudentCoordinator: editStudentCoordinator,\r\n\t\t\tgetEachFaculty: getEachFaculty,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t\tgetRegistrationData: getRegistrationData,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\tvar link = baseLink + '/getEachFaculty';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(registration) {\r\n\t\t\tvar link = baseLink + '/registrations/confirm';\r\n\t\t\treturn $http.post(link, registration)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrations() {\r\n\t\t\tvar link = baseLink + '/registrations';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction get(students) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.put(link, students)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinator(student) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.post(link, student)\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinator() {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty(data) {\r\n\t\t\tvar link = baseLink + '/updateFaculty/';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData(data) {\r\n\t\t\tvar link = baseLink + '/getRegistrationData';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\t// replaceToken(response.data.token);\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyAuthService', facultyAuthService);\r\n\r\n\tfacultyAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction facultyAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tfacultyLogin: facultyLogin,\r\n\t\t\tfacultyRegister: facultyRegister,\r\n\t\t\tcheckFacultyLoggedIn: checkFacultyLoggedIn,\r\n\t\t\tchangeFacultyPassword: changeFacultyPassword,\r\n\t\t\tlogout: logout,\r\n\t\t\tfacultyForgotPasswordApply: facultyForgotPasswordApply,\r\n\t\t\tfacultyForgotPasswordSet: facultyForgotPasswordSet,\r\n\t\t\tgetColleges: getColleges,\r\n\t\t\tcheckVerified: checkVerified\r\n\t\t\t// editStudentCoordinator: editStudentCoordinator\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkFacultyLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\t\t\t\tif (angular.isDefined(payload.collegeId)) {\r\n\t\t\t\t\t$rootScope.faculty = {};\r\n\t\t\t\t\t$rootScope.faculty.email = payload.email;\r\n\t\t\t\t\t$rootScope.faculty.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.faculty.name = payload.name;\r\n\t\t\t\t\t$rootScope.faculty.verified = payload.verified;\r\n\t\t\t\t\t$rootScope.faculty.rejected = payload.rejected;\r\n\t\t\t\t\t$rootScope.faculty.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.faculty.id = payload._id;\r\n\t\t\t\t\t$rootScope.collegeId = payload.collegeId;\r\n\t\t\t\t\t// $rootScope.faculty.registrations_count = payload.registrations_count;\r\n\t\t\t\t\t// $rootScope.faculty.collected_amount = payload.collected_amount;\r\n\t\t\t\t\t// $rootScope.faculty.student_coordinator = payload.student_coordinator;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t\t// console.log($rootScope.faculty);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction replaceToken(token) {\r\n\t\t\tremoveToken();\r\n\t\t\tsaveToken(token);\r\n\t\t}\r\n\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/login', user)\r\n\t\t\t\t.then(facultyLoginSuccess)\r\n\t\t\t\t.catch(facultyLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/register', user)\r\n\t\t\t\t.then(facultyRegisterSuccess)\r\n\t\t\t\t.catch(facultyRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyRegister');\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyRegister', error);\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyLogin');\r\n\t\t\t// checkFacultyLoggedIn();\r\n\t\t}\r\n\r\n\t\tfunction facultyLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction getColleges() {\r\n\t\t\treturn $http.get('/api/college/getAllCollege')\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesFailure);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t\tfunction changeFacultyPassword(passwordObject) {\r\n\t\t\tif (checkFacultyLoggedIn()) {\r\n\t\t\t\tif ($rootScope.faculty) {\r\n\t\t\t\t\tpasswordObject.facultyId = $rootScope.faculty.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/faculty/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApply(faculty) {\r\n\t\t\t$http.post('/api/auth/faculty/forgotPasswordApply', faculty)\r\n\t\t\t\t.then(facultyForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSet(faculty, id) {\r\n\t\t\tvar link = '/api/auth/faculty/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, faculty)\r\n\t\t\t\t.then(facultyForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(error) {\r\n\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\r\n\t\tfunction checkVerified() {\r\n\t\t\tconsole.log($rootScope.faculty);\r\n\t\t\t$http.get('/api/faculty/check')\r\n\t\t\t\t.then(checkVerifiedSuccess)\r\n\t\t\t\t.catch(checkVerifiedFailure);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\treplaceToken(response.data.token);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction functionName(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberService', memberService);\r\n\r\n\tmemberService.$inject = ['$http', '$mdDialog'];\r\n\r\n\tfunction memberService($http, $mdDialog) {\r\n\t\tvar service = {\r\n\t\t\tgetAllFacultyCoordinators: getAllFacultyCoordinators,\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tgetTotalRegistrations: getTotalRegistrations,\r\n\t\t\tgetDeleteModal: getDeleteModal,\r\n\t\t\tgetVerifyFacultyStudent: getVerifyFacultyStudent,\r\n\t\t\tgetUnverifiedFaculty: getUnverifiedFaculty,\r\n\t\t\tgetUnconfirmedRegistration: getUnconfirmedRegistration,\r\n\t\t\tgetRegistrationsByEvent: getRegistrationsByEvent,\r\n\t\t\tgetEventRegistrationExcel: getEventRegistrationExcel,\r\n\t\t\tgetConfirmedRegistrationCount: getConfirmedRegistrationCount,\r\n\t\t\texportParticipantList: exportParticipantList,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getAllFacultyCoordinators() {\r\n\t\t\treturn $http.get('/api/members/faculty')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/verify/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/reject/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getTotalRegistrations() {\r\n\t\t\treturn $http.get('/api/members/registrations')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsByEvent() {\r\n\t\t\treturn $http.get('/api/members/registration/eventRegistrationData')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getVerifyFacultyStudent() {\r\n\t\t\treturn $http.get('/api/members/exportVFSList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnverifiedFaculty() {\r\n\t\t\treturn $http.get('/api/members/exportUVFList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnconfirmedRegistration() {\r\n\t\t\treturn $http.get('/api/members/registration/exportUnconfirmedRegistration')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getEventRegistrationExcel(request) {\r\n\t\t\treturn $http.post('/api/members/registrations/export', request)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getConfirmedRegistrationCount() {\r\n\t\t\treturn $http.get('/api/members/registration/confirmRegistrationCount')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction exportParticipantList() {\r\n\t\t\treturn $http.get('/api/members/registration/exportParticipantList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getDeleteModal() {\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Delete')\r\n\t\t\t\t.textContent('Are you sure you want to delete this record?')\r\n\t\t\t\t.ok('Confirm')\r\n\t\t\t\t.cancel('Cancel');\r\n\t\t\treturn $mdDialog.show(confirm).then(responseFunc, errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction responseFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberAuthService', memberAuthService);\r\n\r\n\tmemberAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction memberAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tmemberLogin: memberLogin,\r\n\t\t\tmemberRegister: memberRegister,\r\n\t\t\tcheckMemberLoggedIn: checkMemberLoggedIn,\r\n\t\t\tlogout: logout,\r\n\t\t\tchangeMemberPassword: changeMemberPassword,\r\n\t\t\tmemberForgotPasswordApply: memberForgotPasswordApply,\r\n\t\t\tmemberForgotPasswordSet: memberForgotPasswordSet\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkMemberLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\r\n\t\t\t\tif (angular.isUndefined(payload.registrations_count)) {\r\n\t\t\t\t\t$rootScope.member = {};\r\n\t\t\t\t\t$rootScope.member.email = payload.email;\r\n\t\t\t\t\t$rootScope.member.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.member.name = payload.name;\r\n\t\t\t\t\t$rootScope.member.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.member.id = payload._id;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\t\tfunction memberLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/member/login', user)\r\n\t\t\t\t.then(memberLoginSuccess)\r\n\t\t\t\t.catch(memberLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/member/register', user)\r\n\t\t\t\t.then(memberRegisterSuccess)\r\n\t\t\t\t.catch(memberRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberRegister');\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberRegister', error);\r\n\t\t}\r\n\r\n\t\tfunction memberLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberLogin');\r\n\t\t}\r\n\r\n\t\tfunction memberLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApply(member) {\r\n\t\t\t$http.post('/api/auth/member/forgotPasswordApply', member)\r\n\t\t\t\t.then(memberForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(memberForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSet(member, id) {\r\n\t\t\tvar link = '/api/auth/member/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, member)\r\n\t\t\t\t.then(memberForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(memberForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure() {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction changeMemberPassword(passwordObject) {\r\n\t\t\tif (checkMemberLoggedIn()) {\r\n\t\t\t\tif ($rootScope.member) {\r\n\t\t\t\t\tpasswordObject.memberId = $rootScope.member.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/members/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('authInterceptor', authInterceptor);\r\n\r\n\tauthInterceptor.$inject = ['$window', '$q', '$location'];\r\n\r\n\tfunction authInterceptor($window, $q, $location) {\r\n\t\tvar service = {\r\n\t\t\trequest: request,\r\n\t\t\trequestError: requestError,\r\n\t\t\tresponse: response,\r\n\t\t\tresponseError: responseError\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction request(config) {\r\n\t\t\tvar token = getToken();\r\n\t\t\tif (token !== null) {\r\n\t\t\t\tvar authHead = 'Bearer ' + token;\r\n\t\t\t\tconfig.headers['Authorization'] = authHead;\r\n\t\t\t}\r\n\t\t\t// console.log(config);\r\n\t\t\treturn config;\r\n\t\t}\r\n\r\n\t\tfunction requestError(rejection) {\r\n\t\t\t// console.log(\"Request Rejection\",rejection);\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\r\n\t\tfunction response(response) {\r\n\t\t\t// console.log(\"response\",response);\r\n\t\t\treturn response || $q.when(response);\r\n\t\t}\r\n\r\n\t\tfunction responseError(rejection) {\r\n\t\t\t// console.log(\"response rejection\", rejection);\r\n\t\t\tif (rejection.status == 403) {\r\n\t\t\t\t$location.path('/login');\r\n\t\t\t}\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.factory('fctToast', fctToast);\r\n\r\n\tfctToast.$inject = ['$mdToast'];\r\n\r\n\tfunction fctToast($mdToast) {\r\n\t\tvar service = {\r\n\t\t\tshowToast: showToast\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction showToast(data, success) {\r\n\t\t\tvar toasterClass = 'md-toast-warn';\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\ttoasterClass = 'md-toast-success';\r\n\t\t\t}\r\n\r\n\t\t\tvar toaster = $mdToast.simple()\r\n\t\t\t\t.textContent(data)\r\n\t\t\t\t.position('bottom right')\r\n\t\t\t\t.hideDelay(3000)\r\n\t\t\t\t.toastClass(toasterClass);\r\n\t\t\t$mdToast.show(toaster);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fct.core')\r\n    .directive('eventCard', eventCard);\r\n\r\n  eventCard.$inject = [];\r\n\r\n  function eventCard() {\r\n    var directive = {\r\n          restrict: 'E',\r\n          templateUrl: '/templates/components/cards/eventCard.html',\r\n          link: linkFunc,\r\n          scope: {\r\n              eventdata : '=',\r\n              reload : '&'\r\n          },\r\n          controller: 'EventCardController',\r\n          controllerAs: 'ecc'\r\n      };\r\n\r\n      return directive;\r\n\r\n      function linkFunc($scope) {\r\n          $scope.openCard = false;\r\n          $scope.caret = 'expand_less';\r\n          $scope.toggleCard = toggleCard;\r\n\r\n          function toggleCard() {\r\n              $scope.openCard = !($scope.openCard);\r\n              if($scope.openCard === true){\r\n                  $scope.caret = 'expand_more';\r\n              }\r\n              else {\r\n                  $scope.caret = 'expand_less';\r\n              }\r\n          }\r\n      }\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t.module('fct.core')\r\n\t.directive('fileUpload', fileUpload);\r\n\r\n\tfileUpload.$inject = ['$timeout'];\r\n\r\n\tfunction fileUpload($timeout) {\r\n        return {\r\n            restrict: 'E',\r\n            template: '<div ng-transclude></div>',\r\n            replace: true,\r\n            transclude: true,\r\n            scope: {\r\n                headers: '=',\r\n                ngModel: '=',\r\n                disabled: '='\r\n            },\r\n            require: 'ngModel',\r\n            link: function (scope, el, attr) {\r\n                var fileName,\r\n                    shareCredentials,\r\n                    withPreview,\r\n                    fileSelector,\r\n                    resize,\r\n                    maxWidth,\r\n                    maxHeight,\r\n                    sel;\r\n\r\n                fileName = attr.name || 'userFile';\r\n                shareCredentials = attr.credentials === 'true';\r\n                withPreview = attr.preview === 'true';\r\n                resize = attr.resize === 'true';\r\n                maxWidth = angular.isDefined(attr.maxWidth) ? parseInt(attr.maxWidth) : false;\r\n                maxHeight = angular.isDefined(attr.maxHeight) ? parseInt(attr.maxHeight) : false;\r\n                fileSelector = angular.isDefined(attr.fileSelector) ? attr.fileSelector : false;\r\n\r\n                el.append('<input style=\"display: none !important;\" type=\"file\" ' + (attr.multiple == 'true' ? 'multiple' : '') + ' accept=\"' + (attr.accept ? attr.accept : '') + '\" name=\"' + fileName + '\"/>');\r\n\r\n                function Resize(file, index, type) {\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    var img = document.createElement(\"img\");\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        img.src = e.target.result;\r\n                        draw();\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n\r\n                    function b64toBlob(b64Data, contentType, sliceSize) {\r\n                        contentType = contentType || '';\r\n                        sliceSize = sliceSize || 512;\r\n\r\n                        var byteCharacters = atob(b64Data);\r\n                        var byteArrays = [];\r\n\r\n                        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                            var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                            var byteNumbers = new Array(slice.length);\r\n                            for (var i = 0; i < slice.length; i++) {\r\n                                byteNumbers[i] = slice.charCodeAt(i);\r\n                            }\r\n\r\n                            var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                            byteArrays.push(byteArray);\r\n                        }\r\n\r\n                        var blob = new Blob(byteArrays, {type: contentType});\r\n                        return blob;\r\n                    }\r\n\r\n                    function draw() {\r\n                        var width = img.width;\r\n                        var height = img.height;\r\n                        var ctx = canvas.getContext(\"2d\");\r\n                        ctx.drawImage(img, 0, 0);\r\n\r\n                        if (width > 0 && height > 0) {\r\n                            if (width > height) {\r\n                                if (width > maxWidth) {\r\n                                    height *= maxWidth / width;\r\n                                    width = maxWidth;\r\n                                }\r\n                            } else {\r\n                                if (height > maxHeight) {\r\n                                    width *= maxHeight / height;\r\n                                    height = maxHeight;\r\n                                }\r\n                            }\r\n\r\n                            canvas.width = width;\r\n                            canvas.height = height;\r\n                            ctx.drawImage(img, 0, 0, width, height);\r\n                            var b64 = canvas.toDataURL(type).split(',')[1];\r\n                            file = b64toBlob(b64, type, 512);\r\n                        }\r\n\r\n                        uploadFile(file, index);\r\n                    }\r\n                }\r\n\r\n                function upload(fileProperties, index, file) {\r\n                    if (resize && maxWidth && maxHeight && (file.type.indexOf('image/') !== -1)) {\r\n                        Resize(file, index, file.type);\r\n                    } else {\r\n                        uploadFile(file, index);\r\n                    }\r\n                    return angular.extend(scope.ngModel[index], {\r\n                        name: fileProperties.name,\r\n                        size: fileProperties.size,\r\n                        type: fileProperties.type,\r\n                        status: {},\r\n                        percent: 0,\r\n                        preview: null\r\n                    });\r\n                }\r\n\r\n                function uploadFile(file, index) {\r\n                    var xhr = new XMLHttpRequest(),\r\n                        fd = new FormData(),\r\n                        progress = 0,\r\n                        uri = attr.uri || '/upload/upload';\r\n                    xhr.open('POST', uri, true);\r\n                    xhr.withCredentials = shareCredentials;\r\n                    if (scope.headers) {\r\n                        scope.headers.forEach(function (item) {\r\n                            xhr.setRequestHeader(item.header, item.value);\r\n                        });\r\n                    }\r\n                    xhr.onreadystatechange = function () {\r\n                        scope.ngModel[index].status = {\r\n                            code: xhr.status,\r\n                            statusText: xhr.statusText,\r\n                            response: xhr.response\r\n                        };\r\n                        scope.$apply();\r\n                    };\r\n                    xhr.upload.addEventListener(\"progress\", function (e) {\r\n                        progress = parseInt(e.loaded / e.total * 100);\r\n                        scope.ngModel[index].percent = progress;\r\n                        scope.$apply();\r\n                    }, false);\r\n\r\n                    fd.append(fileName, file);\r\n                    xhr.send(fd);\r\n\r\n                    if (withPreview) {\r\n                        var reader = new FileReader();\r\n                        reader.onload = function (e) {\r\n                            scope.ngModel[index].preview = e.target.result;\r\n                            scope.$apply();\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                }\r\n\r\n                $timeout(function () {\r\n                    sel = fileSelector ? angular.element(el[0].querySelectorAll(fileSelector)[0]) : el;\r\n                    sel.bind('click', function () {\r\n                        if (!scope.disabled) {\r\n                            scope.$eval(el.find('input')[0].click());\r\n                        }\r\n                    });\r\n                });\r\n\r\n                angular.element(el.find('input')[0]).bind('change', function (e) {\r\n                    var files = e.target.files;\r\n                    if (!angular.isDefined(scope.ngModel) || attr.multiple === 'true') {\r\n                        scope.ngModel = [];\r\n                    }\r\n                    var f;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        f = {\r\n                            name: files[i].name,\r\n                            size: files[i].size,\r\n                            type: files[i].type,\r\n                            status: {},\r\n                            percent: 0,\r\n                            preview: null\r\n                        };\r\n                        scope.ngModel.push(f);\r\n                        upload(f, i, files[i]);\r\n                    }\r\n                    scope.$apply();\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddStudentController', AddStudentController);\r\n\r\n\tAddStudentController.$inject = ['$http', 'facultyService', '$rootScope', 'fctToast'];\r\n\r\n\tfunction AddStudentController($http, facultyService, $rootScope, fctToast) {\r\n\t\tvar vm = this;\r\n\t\tvm.coordinator = {};\r\n\t\tvm.editInfo = false;\r\n\t\tvm.preInfo = false;\r\n\t\tvm.updateButtonClicked = false;\r\n\t\tvm.addButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tupdate: update,\r\n\t\t\taddStudentCoordinator: addStudentCoordinator,\r\n\t\t\tedit: edit\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getStudentCoordinator()\r\n\t\t\t\t.then(getStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(getStudentCoordinatorFailure);\r\n\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorSuccess(response) {\r\n\t\t\tif (response.data.student_coordinator) {\r\n\t\t\t\tvm.coordinator = response.data.student_coordinator;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.editInfo = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorFailure(error) {\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction update(event) {\r\n\t\t\tvm.updateButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction edit() {\r\n\t\t\tvm.editInfo = true;\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinator(event) {\r\n\t\t\tvm.addButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(addStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.preInfo = true;\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Added Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Updated Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Error!! Try Again');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationModalController', ConfirmRegistrationModalController);\r\n\r\n\tConfirmRegistrationModalController.$inject = ['$mdDialog', 'registration', 'facultyService'];\r\n\r\n\tfunction ConfirmRegistrationModalController($mdDialog, registration, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = registration;\r\n\t\tvm.registrationButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmData: confirmData,\r\n\t\t\thide: hide,\r\n\t\t\tcancel: cancel\r\n\t\t});\r\n\r\n\t\tfunction confirmData() {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn facultyService.confirmRegistration(registration)\r\n\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\thide(response);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\t$mdDialog.cancel(error);\r\n\t\t}\r\n\r\n\t\tfunction hide(response) {\r\n\t\t\t$mdDialog.hide(response);\r\n\t\t}\r\n\r\n\t\tfunction cancel() {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController', ConfirmRegistrationsController);\r\n\r\n\tConfirmRegistrationsController.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n\tfunction ConfirmRegistrationsController(facultyService, $mdDialog, fctToast, $scope) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmRegistration: confirmRegistration\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(event) {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\t// return\r\n\t\t\tvar confirm = $mdDialog.prompt()\r\n\t\t\t\t.title('Enter SERIAL ID')\r\n\t\t\t\t.textContent('Enter the serial id provided in ther Registration Slip')\r\n\t\t\t\t.placeholder('Serial Id')\r\n\t\t\t\t.ariaLabel('Serial Id')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.ok('Submit')\r\n\t\t\t\t.cancel('Cancel');\r\n\r\n\t\t\t$mdDialog.show(confirm).then(function (result) {\r\n\t\t\t\tvm.registration.serialId = result;\r\n\t\t\t\treturn facultyService.confirmRegistration(vm.registration)\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tvm.registration = {};\r\n\t\t\t$scope.confirmRegistrationForm.$setPristine();\r\n\t\t\t$scope.confirmRegistrationForm.$setUntouched();\r\n\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (response.status == 400) {\r\n\t\t\t\tmsg = response.data.error.for;\r\n\t\t\t\tfctToast.showToast(msg);\r\n\t\t\t}\r\n\r\n\t\t\tif (msg) {\r\n\t\t\t\tmsg = response.data.message;\r\n\t\t\t\tfctToast.showToast(msg, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController1', ConfirmRegistrationsController1);\r\n\r\n\tConfirmRegistrationsController1.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n\tfunction ConfirmRegistrationsController1(facultyService, $mdDialog, fctToast, $scope) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\t// confirmRegistration: confirmRegistration,\r\n\t\t\tgetRegistrationData: getRegistrationData\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\r\n\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (response.status == 400) {\r\n\t\t\t\tmsg = response.data.error.for;\r\n\t\t\t\tfctToast.showToast(msg);\r\n\t\t\t}\r\n\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\tmsg = response.data.message;\r\n\t\t\t\tfctToast.showToast(msg, true);\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\t$scope.confirmRegistrationForm.$setPristine();\r\n\t\t\t\t$scope.confirmRegistrationForm.$setUntouched();\r\n\r\n\t\t\t} else if (response.status == 404) {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"REGISTRAION NOT FOUND\");\r\n\t\t\t} else if (response.status == 405) {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"REGISTRAION CONFIRMED ALREADY\", true);\r\n\t\t\t} else {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"ERROR PLEASE TRY AGAIN\", true);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t//\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\t\t\tvm.registration = {};\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData() {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\tfacultyService.getRegistrationData(vm.registration)\r\n\t\t\t\t.then(getRegistrationDataSuccess)\r\n\t\t\t\t.catch(getRegistrationDataFailure);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationDataFailure(error) {\r\n\t\t\tfctToast.showToast(\"Internet Error, Please Try Again\");\r\n\t\t\tvm.registration = {};\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationDataSuccess(response) {\r\n\t\t\t// console.log(response);\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\tvm.registration.teamId = response.data.teamId;\r\n\t\t\t\tvm.registration.email = response.data.email;\r\n\t\t\t\tvm.registration.mobileno = response.data.mobileno;\r\n\t\t\t\tvm.registration.serialId = response.data.serialId;\r\n\r\n\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\ttemplateUrl: './templates/components/dialogs/confirmDetailDialog.html',\r\n\t\t\t\t\t\tcontroller: 'ConfirmRegistrationModalController',\r\n\t\t\t\t\t\tcontrollerAs: 'crmc',\r\n\t\t\t\t\t\tlocals: {\r\n\t\t\t\t\t\t\tregistration: vm.registration\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\t\t\tfullscreen: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t} else {\r\n\t\t\t\tfctToast.showToast(\"Registration Not Found\");\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultySettingsController', FacultySettingsController);\r\n\r\n\tFacultySettingsController.$inject = ['facultyAuthService', 'fctToast', '$scope', '$rootScope', '$timeout', 'facultyService'];\r\n\r\n\tfunction FacultySettingsController(facultyAuthService, fctToast, $scope, $rootScope, $timeout, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\t\tvm.userDetail = {};\r\n\t\tvm.updateButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetEachFaculty();\r\n\t\t}\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\treturn facultyService.getEachFaculty()\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tvm.userDetail.email = response.data.email;\r\n\t\t\t\tvm.userDetail.mobileno = parseInt(response.data.mobileno);\r\n\t\t\t\tvm.userDetail.name = response.data.name;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty() {\r\n\t\t\tif (vm.updating) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updating = true;\r\n\t\t\t\tvm.updateButtonClicked = true;\r\n\t\t\t\treturn facultyService.updateFaculty(vm.userDetail)\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.userDetail = response.data;\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tvm.editInfo = false;\r\n\t\t\t\t\tgetEachFaculty();\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tfacultyAuthService.changeFacultyPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('FacultyChangePasswordSuccess', FacultyChangePasswordSuccess);\r\n\t\t$rootScope.$on('FacultyChangePasswordFailure', FacultyChangePasswordFailure);\r\n\r\n\t\tfunction FacultyChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction FacultyChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('RegistrationDetailsController', RegistrationDetailsController);\r\n\r\n\tRegistrationDetailsController.$inject = ['fctToast', '$rootScope', 'facultyService'];\r\n\r\n\tfunction RegistrationDetailsController(fctToast, $rootScope, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.noregistration = true;\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getFacultyRegistrations()\r\n\t\t\t\t.then(getRegistrationsSuccess)\r\n\t\t\t\t.catch(getRegistrationsFailure);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsSuccess(response) {\r\n\r\n\t\t\tif (response.data.registrations.length !== 0) {\r\n\t\t\t\tvm.registrations = response.data.registrations;\r\n\t\t\t\tvm.registrations_count = response.data.totalRegistrations;\r\n\t\t\t\tvm.collected_amount = response.data.totalCollectedAmount;\r\n\t\t\t\tvm.noregistration = false;\r\n\t\t\t} else {\r\n\t\t\t\tvm.noregistration = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsFailure(error) {\r\n\t\t\tfctToast.showToast('Internal Server Error');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('VerifyCoordinatorController', VerifyCoordinatorController);\r\n\r\n\tVerifyCoordinatorController.$inject = ['$scope', 'memberService', '$mdDialog'];\r\n\r\n\tfunction VerifyCoordinatorController($scope, memberService, $mdDialog) {\r\n\t\tvar vm = this;\r\n\t\tvm.limitFaculty = 5;\r\n\t\tvm.nomoreFaculty = true;\r\n\t\tvm.orderField = 'registrations_count';\r\n\t\tvm.reverseSort = true;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tloadmore: loadmore\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn memberService.getAllFacultyCoordinators()\r\n\t\t\t\t.then(getAllFacultyCoordinatorsSuccess)\r\n\t\t\t\t.catch(getAllFacultyCoordinatorsFailure);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getAllFacultyCoordinatorsSuccess(response) {console.log(response);\r\n\t\t\tvm.faculties = response.data;\r\n\t\t\t// console.log(vm.faculties);\r\n\t\t\tif (vm.limitFaculty <= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getAllFacultyCoordinatorsFailure(error) {\r\n\t\t\t//State go to Add Events\r\n\t\t\t//Dashboard\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id, index, event) {\r\n\t\t\tvm.verifyingIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Verifying ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Verification')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.verifyFaculty(id)\r\n\t\t\t\t\t.then(verifyFacultySuccess)\r\n\t\t\t\t\t.catch(verifyFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.verifyingIndex].verified = true;\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id, index, event) {\r\n\t\t\tvm.rejectionIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Rejecting ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Rejection')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.rejectFaculty(id)\r\n\t\t\t\t\t.then(rejectFacultySuccess)\r\n\t\t\t\t\t.catch(rejectFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.rejectionIndex].rejected = true;\r\n\t\t\tvm.faculties.splice(vm.rejectionIndex, 1);\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction loadmore() {\r\n\t\t\tvm.limitFaculty += 5;\r\n\t\t\tif (vm.limitFaculty >= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddEventController', AddEventController);\r\n\r\n\tAddEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$timeout', 'Upload', '$state', 'fctToast', '$filter', 'memberService'];\r\n\r\n\tfunction AddEventController(stateParams, eventService, $rootScope, $timeout, Upload, $state, fctToast, $filter, memberService) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = false;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t\t'event': \"Add\",\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.image = '';\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\t// vm.myEvent.rules = CKEDITOR.instances[\"editorRules\"].getData();\r\n\t\t\t// vm.myEvent.specification = CKEDITOR.instances[\"editorSpecification\"].getData();\r\n\t\t\t// vm.myEvent.judging_criteria = CKEDITOR.instances[\"editorJudgingCriteria\"].getData();\r\n\t\t\tconsole.log(vm.myEvent);\r\n\t\t\tif (vm.myEvent.isUpdate) {\r\n\t\t\t\treturn eventService.updateEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t} else {\r\n\t\t\t\treturn eventService.addEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Event Registered.\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\t$state.go('in_tc.showEvent');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tfile.result = response.data;\r\n\t\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\t\tlink: file.dest,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t\t\tconsole.log(attach);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIconImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} //dfdf//sdf=\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('DashboardController', DashboardController);\r\n\r\n\tDashboardController.$inject = ['$rootScope', 'memberService', '$window'];\r\n\r\n\tfunction DashboardController($rootScope, memberService, $window) {\r\n\t\tvar vm = this;\r\n\t\tvm.confirmedCount = 0;\r\n\t\tvm.unConfirmedCount = 0;\r\n\t\tvm.totalConfirmedParticipants = 0;\r\n\t\tvm.totalAmountCollected = 0;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tgetVFS: getVFS,\r\n\t\t\tgetUVF: getUVF\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetVFS();\r\n\t\t\tgetUVF();\r\n\t\t\tgetConfirmedRegistrationCount();\r\n\t\t\tgetRegistrationData();\r\n\t\t\t// exportParticipantList();\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData() {\r\n\t\t\treturn memberService.getRegistrationsByEvent()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvar array = response.data;\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\tvar each = 0;\r\n\t\t\t\t\tvar index = 0;\r\n\t\t\t\t\tfor (index = 0; index < array.length; index++) {\r\n\t\t\t\t\t\teach += parseInt(array[index].unconfirmed_registrations);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t// console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getVFS() {\r\n\t\t\treturn memberService.getVerifyFacultyStudent()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.VFSPath = response.data.path;\r\n\t\t\t\t\t// $window.open(response.data.path);\r\n\t\t\t\t\t//console.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t//console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getUVF() {\r\n\t\t\treturn memberService.getUnverifiedFaculty()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.UVFPath = response.data.path;\r\n\t\t\t\t\t// $window.open(response.data.path);\r\n\t\t\t\t\t//console.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t//console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getConfirmedRegistrationCount() {\r\n\t\t\treturn memberService.getConfirmedRegistrationCount()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.confirmedCount = response.data.confirmedCount;\r\n\t\t\t\t\tvm.unConfirmedCount = response.data.unConfirmedCount;\r\n\t\t\t\t\tvm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\r\n\t\t\t\t\tvm.totalAmountCollected = response.data.totalAmountCollected;\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction exportParticipantList() {\r\n\t\t\treturn memberService.exportParticipantList()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// (function() {\r\n//     'use strict';\r\n//\r\n//     angular\r\n//         .module('fct.core')\r\n//         .controller('DashboardController', DashboardController);\r\n//\r\n//     DashboardController.$inject = ['$rootScope', 'memberService', '$window'];\r\n//\r\n//     function DashboardController($rootScope, memberService, $window) {\r\n//         var vm = this;\r\n//         vm.confirmedCount = 0;\r\n//         vm.unConfirmedCount = 0;\r\n//         vm.totalConfirmedParticipants = 0;\r\n//         vm.totalAmountCollected = 0;\r\n//\r\n//         angular.extend(vm, {\r\n//             getVFS: getVFS,\r\n//             getUVF: getUVF\r\n//         });\r\n//\r\n//         activate();\r\n//\r\n//         function activate() {\r\n//             getVFS();\r\n//             getUVF();\r\n//             getConfirmedRegistrationCount();\r\n//             // exportParticipantList();\r\n//         }\r\n//\r\n//         function getVFS() {\r\n//             return memberService.getVerifyFacultyStudent()\r\n//                 .then(function(response) {\r\n//                     vm.VFSPath = response.data.path;\r\n//                     // $window.open(response.data.path);\r\n//                     //console.log(response);\r\n//                 })\r\n//                 .catch(function(error) {\r\n//                     //console.log(error);\r\n//                 });\r\n//         }\r\n//\r\n//         function getUVF() {\r\n//             return memberService.getUnverifiedFaculty()\r\n//                 .then(function(response) {\r\n//                     vm.UVFPath = response.data.path;\r\n//                     // $window.open(response.data.path);\r\n//                     //console.log(response);\r\n//                 })\r\n//                 .catch(function(error) {\r\n//                     //console.log(error);\r\n//                 });\r\n//         }\r\n//\r\n//         function getConfirmedRegistrationCount() {\r\n//           return memberService.getConfirmedRegistrationCount()\r\n//             .then(function(response) {\r\n//               vm.confirmedCount = response.data.confirmedCount;\r\n//               vm.unConfirmedCount = response.data.unConfirmedCount;\r\n//               vm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\r\n//               vm.totalAmountCollected = response.data.totalAmountCollected;\r\n//               console.log(response);\r\n//             })\r\n//             .catch(function(error) {\r\n//               console.log(error);\r\n//             });\r\n//         }\r\n//\r\n//         function exportParticipantList() {\r\n//           return memberService.exportParticipantList()\r\n//             .then(function(response) {\r\n//                 console.log(response);\r\n//             })\r\n//             .catch(function(error) {\r\n//                 console.log(error);\r\n//             });\r\n//           }\r\n//     }\r\n// })();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EachEventController', EachEventController);\r\n\r\n    EachEventController.$inject = ['$stateParams', 'eventService', '$sce'];\r\n\r\n    function EachEventController(stateParams, eventService, $sce) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          if(stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n            vm.eventId = stateParams.eventId;\r\n            getEvent();\r\n          }\r\n\t\t    }\r\n\r\n        function getEvent() {\r\n          return eventService.getSingleEvent(vm.eventId)\r\n            .then(getEventSuccess)\r\n            .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.myEvent = response.data;\r\n          vm.rules = $sce.trustAsHtml(vm.myEvent.rules);\r\n          vm.judging_criteria = $sce.trustAsHtml(vm.myEvent.judging_criteria);\r\n          vm.specification = $sce.trustAsHtml(vm.myEvent.specification);\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EventCardController', EventCardController);\r\n\r\n    EventCardController.$inject = ['eventService', '$mdDialog', 'memberService', '$scope'];\r\n\r\n    function EventCardController(eventService, $mdDialog, memberService, $scope) {\r\n        var vm = this;\r\n        vm.openCard = false;\r\n        vm.caret = 'expand_less';\r\n\r\n        angular.extend(vm, {\r\n            deleteEvent: deleteEvent,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function deleteEvent(id) {\r\n          if(id !== undefined && id !== null) {\r\n            vm.deleteId = id;\r\n            return memberService.getDeleteModal()\r\n              .then(confirmedDelete)\r\n              .catch(unconfirmedDelete);\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function confirmedDelete() {\r\n          return eventService.deleteEvent(vm.deleteId)\r\n            .then(deleteEventSuccess)\r\n            .catch(deleteEventFailure);\r\n        }\r\n\r\n        function unconfirmedDelete() {\r\n          //\r\n        }\r\n\r\n        function deleteEventSuccess(response) {\r\n          console.log(response);\r\n          $scope.reload();\r\n          // vm.reload();\r\n        }\r\n\r\n        function deleteEventFailure(error) {\r\n          console.log(error);\r\n          //redirect\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('EventRegistrationController', EventRegistrationController);\r\n\r\n\tEventRegistrationController.$inject = ['memberService', '$window'];\r\n\r\n\tfunction EventRegistrationController(memberService, $window) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tgetExcel: getExcel\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetRegistration();\r\n\t\t}\r\n\r\n\t\tfunction getRegistration() {\r\n\t\t\treturn memberService.getRegistrationsByEvent().then(success).catch(failure);\r\n\t\t}\r\n\r\n\t\tfunction success(response) {\r\n\t\t\tvm.eventDetails = response.data;\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction failure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction getExcel(event_name, confirmed) {\r\n\t\t\tvar input = {\r\n\t\t\t\tevent_name: event_name,\r\n\t\t\t\tconfirmation: confirmed,\r\n\t\t\t};\r\n\t\t\tvar json = JSON.stringify(input);\r\n\t\t\tmemberService.getEventRegistrationExcel(json).then(function (response) {\r\n\t\t\t\t$window.open(response.data.path);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberSettingsController', MemberSettingsController);\r\n\r\n\tMemberSettingsController.$inject = ['memberAuthService', 'fctToast', '$scope', '$rootScope', '$timeout'];\r\n\r\n\tfunction MemberSettingsController(memberAuthService, fctToast, $scope, $rootScope, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tmemberAuthService.changeMemberPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('MemberChangePasswordSuccess', MemberChangePasswordSuccess);\r\n\t\t$rootScope.$on('MemberChangePasswordFailure', MemberChangePasswordFailure);\r\n\r\n\t\tfunction MemberChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction MemberChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setPristine();\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ParticipantRegistrationController', ParticipantRegistrationController);\r\n\r\n\tParticipantRegistrationController.$inject = ['$http'];\r\n\r\n\tfunction ParticipantRegistrationController($http) {\r\n\t\tvar vm = this;\r\n\t\tvm.myParticipant = {\r\n\t\t\teventObject: {\r\n\t\t\t\tevent_id: 123123,\r\n\t\t\t\tevent_shortcode: 'EVET'\r\n\t\t\t},\r\n\t\t\tother_participants: []\r\n\t\t};\r\n    vm.otherParticipants = [];\r\n\t\tvm.myParticipant.other_participants = [];\r\n    vm.maxParticipants = 4;\r\n    vm.eventPrice = 50;\r\n    vm.esflag = false;\r\n    vm.nopflag = false;\r\n\r\n\t\tangular.extend(vm, {\r\n      getParticipantLength : getParticipantLength,\r\n      save : save,\r\n      openParticipantModule : openParticipantModule,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tvar x = '{\"eventObject\": {\"event_id\": \"123123\",\"event_shortcode\": \"EVET\",\"event_section\": \"1\",\"event_name\": \"1\"},\"other_participants\": [{\"title\": \"Team Member\",\"leaderFlag\": false,\"$$hashKey\": \"object:68\",\"name\": \"cl\",\"email\": \"d@ddc.c\",\"college_name\": \"1\",\"branch\": \"2\",\"semester\": \"6\",\"mobileno\": \"43223443223\",\"enrollment\": \"322342342342343\"}],\"total_amount\": 100,\"numberOfParticipant\": \"2\",\"do_payment\": true,\"team_leader\": {\"title\": \"Team Leader\",\"leaderFlag\": true,\"$$hashKey\": \"object:67\",\"name\": \"fd\",\"email\": \"s@sd.3\",\"mobileno\": \"12341232133\",\"college_name\": \"1\",\"branch\": \"1\",\"semester\": \"2\",\"enrollment\": \"231312312332333\"}}';\r\n\t\t\treturn $http.post('/api/registration/create', x)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n    function openParticipantModule(total) {\r\n      vm.nopflag = true;\r\n      var first = true;\r\n      vm.myParticipant.other_participants = [];\r\n      while(total > 0) {\r\n        var each = {\"title\": (first) ? \"Team Leader\" : \"Team Member\",\r\n                    \"leaderFlag\": first};\r\n        vm.myParticipant.other_participants.push(each);\r\n        first = false;\r\n        total--;\r\n      }\r\n    }\r\n\r\n    function getParticipantLength() {\r\n      return vm.myParticipant.other_participants.length;\r\n    }\r\n\r\n\t\tfunction save() {\r\n\t\t\tvm.myParticipant.do_payment = true;\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\tvm.myParticipant.team_leader = vm.myParticipant.other_participants[0];\r\n\t\t\tvm.myParticipant.other_participants.splice(0, 1);\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\treturn $http.post('/api/registration/create', vm.myParticipant)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('ShowEventController', ShowEventController);\r\n\r\n    ShowEventController.$inject = ['eventService'];\r\n\r\n    function ShowEventController(eventService) {\r\n        var vm = this;\r\n\r\n        angular.extend(vm, {\r\n            getEvents: getEvents,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          getEvents();\r\n        }\r\n\r\n        function getEvents() {\r\n            return eventService.getEvent()\r\n              .then(getEventSuccess)\r\n              .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.dummyEvents = response.data;\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('UpdateEventController', UpdateEventController);\r\n\r\n\tUpdateEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$state', 'fctToast', 'memberService', 'Upload', '$timeout'];\r\n\r\n\tfunction UpdateEventController(stateParams, eventService, $rootScope, state, fctToast, memberService, Upload, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = true;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.feeDisabled = false;\r\n\t\tvm.myEvent.do_payment = false;\r\n\t\tvm.loadIndex = 0;\r\n\t\tvm.loadCompleted = 3;\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t\t//checkEventId();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {\r\n\t\t\tvm.loadIndex++;\r\n\t\t\tif (vm.loadIndex == vm.loadCompleted) {\r\n\t\t\t\tcheckEventId();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction checkEventId() {\r\n\t\t\tif (stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n\t\t\t\tvm.eventId = stateParams.eventId;\r\n\t\t\t\treturn eventService.getSingleEvent(vm.eventId)\r\n\t\t\t\t\t.then(onEventGetSuccess)\r\n\t\t\t\t\t.catch(onEventGetFailure);\r\n\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfunction onEventGetSuccess(eventData) {\r\n\t\t\tconsole.log(eventData);\r\n\t\t\tvm.myEvent = eventData.data;\r\n\t\t\tvm.myEvent.event = \"Update\";\r\n\t\t\tvm.myEvent.totalManager = vm.myEvent.managers.length;\r\n\t\t\tvm.files = vm.myEvent.attachments;\r\n\t\t\t// return [CKEDITOR.instances['editorRules'].setData(vm.myEvent.rules),\r\n\t\t\t// \tCKEDITOR.instances['editorSpecification'].setData(vm.myEvent.specification),\r\n\t\t\t// \tCKEDITOR.instances['editorJudgingCriteria'].setData(vm.myEvent.judging_criteria)];\r\n\t\t}\r\n\r\n\t\tfunction onEventGetFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\treturn eventService.updateEvent(vm.eventId, vm.myEvent)\r\n\t\t\t\t.then(onUpdateSuccess)\r\n\t\t\t\t.catch(onUpdateFailure);\r\n\t\t}\r\n\r\n\t\tfunction onUpdateSuccess(response) {\r\n\t\t\tfctToast.showToast(\"Update Success.\", true);\r\n\t\t\tstate.go('in_tc.showEvent');\r\n\t\t}\r\n\r\n\t\tfunction onUpdateFailure(error) {\r\n\t\t\tfctToast.showToast(\"Please try again later.\");\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\tlink: response.data.path,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIcons',\r\n\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLayoutController', FacultyLayoutController)\r\n\t\t.controller('ContactDialogController', ContactDialogController);\r\n\r\n\tFacultyLayoutController.$inject = ['facultyAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$mdDialog', '$mdMedia', '$scope'];\r\n\r\n\tfunction FacultyLayoutController(facultyAuthService, $mdSidenav, $rootScope, fctToast, $state, $mdDialog, $mdMedia, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\t$scope.$watch(function () {\r\n\t\t\treturn $mdMedia('xs') || $mdMedia('sm');\r\n\t\t});\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t\tcontact: contact\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tfacultyAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\r\n\t\tfunction contact(ev) {\r\n\t\t\tvar useFullScreen = $mdMedia('sm') || $mdMedia('xs');\r\n\t\t\t$mdDialog.show({\r\n\t\t\t\tcontroller: 'ContactDialogController',\r\n\t\t\t\ttemplateUrl: '/templates/components/dialogs/contact.html',\r\n\t\t\t\tparent: angular.element(document.body),\r\n\t\t\t\ttargetEvent: ev,\r\n\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\tfullscreen: useFullScreen // Only for -xs, -sm breakpoints.\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tContactDialogController.$inject = ['$scope', '$mdDialog'];\r\n\r\n\tfunction ContactDialogController($scope, $mdDialog) {\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.hide = function () {\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLayoutController', MemberLayoutController);\r\n\r\n\tMemberLayoutController.$inject = ['memberAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$scope'];\r\n\r\n\tfunction MemberLayoutController(memberAuthService, $mdSidenav, $rootScope, fctToast, $state, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tmemberAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.member_login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordApplyController', FacultyForgotPasswordApplyController);\r\n\r\n\tFacultyForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyForgotPasswordApplyController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tconsole.log(\"HHHIII\");\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"222\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordApply', facultyForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordApply', facultyForgotPasswordApplyFailure);\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\t//df\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordSetController', FacultyForgotPasswordSetController);\r\n\r\n\tFacultyForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope', '$stateParams', '$location'];\r\n\r\n\tfunction FacultyForgotPasswordSetController($scope, fctToast, facultyAuthService, $state, $rootScope, $stateParams, $location) {\r\n\t\tvar vm = this;\r\n\t\tconsole.log(\"URL\", $location.url());\r\n\t\tvar uriLi = $location.url();\r\n\t\turiLi = uriLi.replace('#x3D;', '=');\r\n\t\turiLi = uriLi.replace('&%23x3D;', '=');\r\n\t\tvar fi, si, ti, foi;\r\n\t\tfi = uriLi.indexOf('=');\r\n\t\tsi = uriLi.indexOf('&');\r\n\t\tti = uriLi.indexOf('=', fi + 1);\r\n\t\tfoi = uriLi.length;\r\n\r\n\t\tvar utoken = uriLi.substring(fi + 1, si);\r\n\t\t// console.log(\"utoken\", utoken);\r\n\r\n\t\tvar userid = uriLi.substring(ti + 1, foi);\r\n\t\t// console.log(\"uid\", userid);\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = utoken;\r\n\t\t\tvar uid = userid;\r\n\r\n\t\t\tfacultyAuthService.facultyForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordSet', facultyForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordSet', facultyForgotPasswordSetFailure);\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLoginController', FacultyLoginController);\r\n\r\n\tFacultyLoginController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyLoginController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.faculty) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyRegistrationController', FacultyRegistrationController);\r\n\r\n\tFacultyRegistrationController.$inject = ['facultyAuthService', '$scope', 'fctToast', '$rootScope', '$state', '$timeout', '$q'];\r\n\r\n\tfunction FacultyRegistrationController(facultyAuthService, $scope, fctToast, $rootScope, $state, $timeout, $q) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\t// vm.states = loadAll();\r\n\t\tvm.selectedItem = null;\r\n\t\tvm.searchText = null;\r\n\t\tvm.querySearch = querySearch;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyAuthService.getColleges()\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesError);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\tvm.colleges = response.data;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesError(error) {\r\n\t\t\tfctToast.showToast('Error in getting colleges');\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = 'Email already registered';\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction querySearch(query) {\r\n\t\t\tvar results = query ? vm.colleges.filter(createFilterFor(query)) : vm.colleges;\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tconsole.log(results);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tdeferred.resolve(results);\r\n\t\t\t}, Math.random() * 1000, false);\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t// function loadAll() {\r\n\t\t// \tvar allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana';\r\n\t\t//\r\n\t\t// \treturn allStates.split(/, +/g).map(function (state) {\r\n\t\t// \t\treturn {\r\n\t\t// \t\t\tvalue: state.toLowerCase(),\r\n\t\t// \t\t\tdisplay: state\r\n\t\t// \t\t};\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\r\n\t\tfunction createFilterFor(query) {\r\n\t\t\tvar lowercaseQuery = angular.lowercase(query);\r\n\t\t\treturn function filterFn(college) {\r\n\t\t\t\tvar matches = college.name.match(/\\b(\\w)/g);\r\n\t\t\t\tvar acronym = matches.join('');\r\n\t\t\t\tacronym = acronym.toLowerCase();\r\n\t\t\t\treturn (college.name.toLowerCase().trim().indexOf(lowercaseQuery) === 0 ||\r\n\t\t\t\t\tacronym.indexOf(lowercaseQuery) === 0);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordApplyController', MemberForgotPasswordApplyController);\r\n\r\n\tMemberForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberForgotPasswordApplyController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"HIII\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordApply', memberForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordApply', memberForgotPasswordApplyFailure);\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordSetController', MemberForgotPasswordSetController);\r\n\r\n\tMemberForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope', '$stateParams'];\r\n\r\n\tfunction MemberForgotPasswordSetController($scope, fctToast, memberAuthService, $state, $rootScope, $stateParams) {\r\n\t\tvar vm = this;\r\n\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = $stateParams.token;\r\n\t\t\tvar uid = $stateParams.id;\r\n\r\n\t\t\tmemberAuthService.memberForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordSet', memberForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordSet', memberForgotPasswordSetFailure);\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLoginController', MemberLoginController);\r\n\r\n\tMemberLoginController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberLoginController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorMemberLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\t// console.log(error);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.member) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberRegistrationController', MemberRegistrationController);\r\n\r\n\tMemberRegistrationController.$inject = ['memberAuthService', '$scope', 'fctToast', '$rootScope', '$state'];\r\n\r\n\tfunction MemberRegistrationController(memberAuthService, $scope, fctToast, $rootScope, $state) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tconsole.log(newUser);\r\n\t\t\tmemberAuthService.memberRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorMemberRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = error.data.errMsg.toString();\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n\r\n    angular.module('fct.core')\r\n      .animation('.slide-vertical', slideVertical);\r\n\r\n    slideVertical.$inject = ['TweenMax'];\r\n\r\n    function slideVertical(TweenMax) {\r\n        return {\r\n            addClass: addHideClass,\r\n            removeClass: removeHideClass\r\n        };\r\n    }\r\n\r\n    function addHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        // var timeline = new TimelineMax();\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.3, {opacity: 1, ease: Power0.easeNone});\r\n        TweenMax.to(element, 0.4, {height:0, ease:  Power2.easeOut, onComplete: done}).delay(0.25);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n\r\n    }\r\n\r\n    function removeHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        element.removeClass('ng-hide');\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.4, {height:0, ease: Power2.easeIn});\r\n        TweenMax.to(element, 0.3, {opacity: 1, ease: Power2.easeIn, onComplete:done}).delay(0.35);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n    }\r\n})();\r\n"]}