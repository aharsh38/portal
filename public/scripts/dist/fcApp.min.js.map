{"version":3,"sources":["api/api.module.js","app/fct_app.module.js","core/core.module.js","core/core.config.js","api/interceptors/authInterceptor.factory.js","api/services/event.factory.js","api/services/faculty.factory.js","api/services/facultyAuth.factory.js","api/services/member.factory.js","api/services/memberAuth.factory.js","core/services/fctToast.factory.js","core/directives/core.eventCard.directive.js","core/controllers/in_fc/confirmRegistrations.controller.js","core/controllers/in_fc/facultySettings.controller.js","core/controllers/in_fc/registrationDetails.controller.js","core/controllers/in_fc/verifyCoordinator.controller.js","core/controllers/in_team/addEvent.controller.js","core/controllers/in_team/showEvent.controller.js","core/controllers/layout/facultyLayout.controller.js","core/controllers/out/facultyForgotPasswordApply.controller.js","core/controllers/out/facultyForgotPasswordSet.controller.js","core/controllers/out/facultyLogin.controller.js","core/controllers/out/facultyRegister.controller.js","core/controllers/out/memberForgotPasswordApply.controller.js","core/controllers/out/memberForgotPasswordSet.controller.js","core/controllers/out/memberLogin.controller.js","core/controllers/out/memberRegister.controller.js"],"names":["angular","module","initializeCore","$rootScope","$interval","active","preloader","$on","startPreloader","stopPreloader","pageTransition","constant","TweenMax","TimelineMax","run","$inject","configName","$mdThemingProvider","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","activate","setTheme","setRoutes","addInterceptors","interceptors","push","theme","primaryPalette","themePalette","primary","accentPalette","accent","warnPalette","warn","html5Mode","when","otherwise","state","templateUrl","controller","controllerAs","resolve","redirectFacultyNotLoggedIn","redirectTeamNotLoggedIn","url","params","editData","facultyAuthService","$q","$state","$timeout","defer","authenticate","checkFacultyLoggedIn","faculty","verified","go","reject","promise","memberAuthService","checkMemberLoggedIn","config","authInterceptor","$window","$location","getToken","localStorage","request","token","authHead","headers","requestError","rejection","response","responseError","console","log","status","path","service","factory","eventService","$http","addEvent","event","alert","JSON","stringify","facultyService","confirmRegistration","registration","link","baseLink","post","then","resolveFunc","catch","errorFunc","error","id","payload","split","atob","parse","email","mobileno","name","rejected","forgot_password","_id","registrations_count","collected_amount","exp","Date","now","saveToken","removeToken","removeItem","facultyLogin","user","facultyLoginSuccess","facultyLoginFailure","facultyRegister","facultyRegisterSuccess","facultyRegisterFailure","data","$broadcast","getColleges","get","getCollegesSuccess","getCollegesFailure","changeFacultyPassword","passwordObject","facultyId","changePasswordLink","patch","changePasswordSuccess","changePasswordFailure","facultyForgotPasswordApply","facultyForgotPasswordApplySuccess","facultyForgotPasswordApplyFailure","facultyForgotPasswordSet","facultyForgotPasswordSetSuccess","facultyForgotPasswordSetFailure","logout","memberService","getAllFacultyCoordinators","responseFunc","verifyFaculty","member","memberLogin","memberLoginSuccess","memberLoginFailure","memberRegister","memberRegisterSuccess","memberRegisterFailure","fctToast","$mdToast","showToast","success","toasterClass","toaster","simple","textContent","position","hideDelay","toastClass","show","eventCard","linkFunc","$scope","$element","$attributes","toggleCard","openCard","caret","userdata","directive","restrict","scope","eventdata","EventCardController","ConfirmRegistrationsController","$mdDialog","vm","registrationButtonClicked","preventDefault","confirm","prompt","title","placeholder","ariaLabel","targetEvent","ok","cancel","result","serialId","confirmRegistrationSuccess","confirmRegistrationFailure","msg","for","this","extend","FacultySettingsController","changePassword","updateInfo","FacultyChangePasswordSuccess","resetForm","FacultyChangePasswordFailure","message","changePasswordForm","$setPristine","$setUntouched","RegistrationDetailsController","getFacultyRegistrations","getRegistrationsSuccess","getRegistrationsFailure","registrations","VerifyCoordinatorController","getAllFacultyCoordinatorsSuccess","getAllFacultyCoordinatorsFailure","faculties","limitFaculty","length","nomoreFaculty","index","verifyingIndex","verifyFacultySuccess","verifyFacultyFailure","loadmore","AddEventController","stateParams","initializeCKEditor","register","myEvent","registerSuccess","asToast","registerFailure","undefined","CKEDITOR","env","ie","version","tools","enableHtml5Elements","document","height","width","initSample","isWysiwygareaAvailable","revision","plugins","wysiwygareaAvailable","editorElement","getById","replace","setAttribute","inline","ShowEventController","dummyEvents","teamId","teamName","leaderName","contactNumber","eventName","eventSection","FacultyLayoutController","$mdSidenav","$mdMedia","logoutSuccessful","openLeftSidenav","open","isOpenLeftSidenav","isOpen","closeLeftSidenav","close","contact","ev","useFullScreen","parent","element","body","clickOutsideToClose","fullscreen","$watch","ContactDialogController","hide","FacultyForgotPasswordApplyController","submit","submitButtonClicked","newUser","copy","isUndefined","forgotPasswordApplyForm","applied","$error","not_registered","FacultyForgotPasswordSetController","$stateParams","changePasswordButtonClicked","uid","forgotPasswordSetForm","set","errorMsg","Boolean","FacultyLoginController","login","loginButtonClicked","loginSuccess","resetLogin","loginFailure","toString","loginForm","errorState","password","incorrect","FacultyRegistrationController","getCollegesError","colleges","registerButtonClicked","registerForm","querySearch","query","results","filter","createFilterFor","deferred","Math","random","lowercaseQuery","lowercase","college","toLowerCase","trim","indexOf","selectedItem","searchText","MemberForgotPasswordApplyController","memberForgotPasswordApply","memberForgotPasswordApplySuccess","memberForgotPasswordApplyFailure","MemberForgotPasswordSetController","memberForgotPasswordSet","memberForgotPasswordSetSuccess","memberForgotPasswordSetFailure","MemberLoginController","MemberRegistrationController","errMsg"],"mappings":"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","file":"fcApp.min.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api', []);\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct_app', [\r\n\t\t\t'fct.api',\r\n\t\t\t'fct.core'\r\n\t\t]);\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core', [\r\n\t\t\t'ngAnimate',\r\n\t\t\t'ngMessages',\r\n\t\t\t'ngMaterial',\r\n\t\t\t'ui.router',\r\n\t\t\t'underscore',\r\n\t\t\t'ngFileUpload',\r\n\t\t\t'validation.match',\r\n\t\t\t'ngMdIcons',\r\n\t\t\t'angularMoment'\r\n\t\t]);\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.constant('TweenMax', TweenMax)\r\n\t\t.constant('TimelineMax', TimelineMax);\r\n\t//\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.run(initializeCore);\r\n\r\n\tinitializeCore.$inject = ['$rootScope', '$interval'];\r\n\r\n\tfunction initializeCore($rootScope, $interval) {\r\n\t\tactive();\r\n\r\n\t\tfunction active() {\r\n\t\t\tpreloader();\r\n\t\t}\r\n\r\n\t\tfunction preloader() {\r\n\t\t\t$rootScope.$on('$viewContentLoading', startPreloader);\r\n\t\t\t$rootScope.$on('$viewContentLoaded', stopPreloader);\r\n\t\t}\r\n\r\n\t\tfunction startPreloader() {\r\n\t\t\t$rootScope.pageTransition = true;\r\n\t\t}\r\n\r\n\r\n\t\tfunction stopPreloader() {\r\n\t\t\tif ($rootScope.pageTransition) {\r\n\t\t\t\t$interval(function () {\r\n\t\t\t\t\t$rootScope.pageTransition = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.config(configName);\r\n\r\n\tconfigName.$inject = ['$mdThemingProvider', '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider'];\r\n\r\n\tfunction configName($mdThemingProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n\t\tvar themePalette = {\r\n\t\t\tprimary: \"blue\",\r\n\t\t\taccent: \"amber\",\r\n\t\t\twarn: \"red\"\r\n\t\t};\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tsetTheme();\r\n\t\t\tsetRoutes();\r\n\t\t\taddInterceptors();\r\n\t\t}\r\n\r\n\t\tfunction addInterceptors() {\r\n\t\t\t$httpProvider.interceptors.push('authInterceptor');\r\n\t\t}\r\n\r\n\t\tfunction setTheme() {\r\n\t\t\t$mdThemingProvider.theme('default')\r\n\t\t\t\t.primaryPalette(themePalette.primary)\r\n\t\t\t\t.accentPalette(themePalette.accent)\r\n\t\t\t\t.warnPalette(themePalette.warn);\r\n\t\t}\r\n\r\n\t\tfunction setRoutes() {\r\n\t\t\t$locationProvider.html5Mode(true);\r\n\t\t\t$urlRouterProvider.when('/', '/login');\r\n\t\t\t$urlRouterProvider.otherwise('/login');\r\n\t\t\t$stateProvider\r\n\t\t\t\t.state('out', {\r\n\t\t\t\t\ttemplateUrl: '/templates/layouts/out.html'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_fc', {\r\n\t\t\t\t\ttemplateUrl: '/templates/layouts/in_fc.html',\r\n\t\t\t\t\tcontroller: 'FacultyLayoutController',\r\n\t\t\t\t\tcontrollerAs: 'flayc',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tredirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc', {\r\n\t\t\t\t\t// controller: 'TeamLayoutController',\r\n\t\t\t\t\t// controllerAs: 'tlac',\r\n\t\t\t\t\ttemplateUrl: '/templates/layouts/in_tc.html',\r\n\t\t\t\t\tresolve: {\r\n\t\t\t\t\t\tredirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.login', {\r\n\t\t\t\t\turl: '/login',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/login.html',\r\n\t\t\t\t\tcontroller: 'FacultyLoginController',\r\n\t\t\t\t\tcontrollerAs: 'flc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.register', {\r\n\t\t\t\t\turl: '/register',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/register.html',\r\n\t\t\t\t\tcontroller: 'FacultyRegistrationController',\r\n\t\t\t\t\tcontrollerAs: 'frc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.forgotPasswordApply', {\r\n\t\t\t\t\turl: '/forgotPasswordApply',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t\t\t\t\tcontroller: 'FacultyForgotPasswordApplyController',\r\n\t\t\t\t\tcontrollerAs: 'ffpac'\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.forgotPasswordSet', {\r\n\t\t\t\t\turl: '/forgotPasswordSet?token&id',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t\t\t\t\tcontroller: 'FacultyForgotPasswordSetController',\r\n\t\t\t\t\tcontrollerAs: 'ffpsc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.member_login', {\r\n\t\t\t\t\turl: '/member/login',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/member/login.html',\r\n\t\t\t\t\tcontroller: 'MemberLoginController',\r\n\t\t\t\t\tcontrollerAs: 'mlc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('out.member_register', {\r\n\t\t\t\t\turl: '/member/register',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/out/member/register.html',\r\n\t\t\t\t\tcontroller: 'MemberRegistrationController',\r\n\t\t\t\t\tcontrollerAs: 'mrc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc.verifyCoordinator', {\r\n\t\t\t\t\turl: '/verifyCoordinator',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t\t\t\t\tcontroller: 'VerifyCoordinatorController',\r\n\t\t\t\t\tcontrollerAs: 'vcc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc.collegeList', {\r\n\t\t\t\t\turl: '/collegeList',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/collegeList.html'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc.eventRegistrations', {\r\n\t\t\t\t\turl: '/eventRegistration',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/eventRegistration.html'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc.addEvent', {\r\n\t\t\t\t\turl: '/team/addEvent',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/addEvent.html',\r\n\t\t\t\t\tcontroller: 'AddEventController',\r\n\t\t\t\t\tcontrollerAs: 'aec',\r\n\t\t\t\t\tparams: {\r\n\t\t\t\t\t\teditData: null,\r\n\t\t\t\t\t}\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_tc.showEvent', {\r\n\t\t\t\t\turl: '/team/showEvent',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/showEvent.html',\r\n\t\t\t\t\tcontroller: 'ShowEventController',\r\n\t\t\t\t\tcontrollerAs: 'sec'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_fc.guidelines', {\r\n\t\t\t\t\turl: '/guidelines',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/guidelines.html'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_fc.settings', {\r\n\t\t\t\t\turl: '/settings',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/facultySettings.html',\r\n\t\t\t\t\tcontroller: 'FacultySettingsController',\r\n\t\t\t\t\tcontrollerAs: 'fsc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_fc.confirm_registration', {\r\n\t\t\t\t\turl: '/confirm/registrations',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/faculty/confirmRegistration.html',\r\n\t\t\t\t\tcontroller: 'ConfirmRegistrationsController',\r\n\t\t\t\t\tcontrollerAs: 'crc'\r\n\t\t\t\t})\r\n\t\t\t\t.state('in_fc.registration_details', {\r\n\t\t\t\t\turl: '/registrations',\r\n\t\t\t\t\ttemplateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t\t\t\t\tcontroller: 'RegistrationDetailsController',\r\n\t\t\t\t\tcontrollerAs: 'rdc'\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tredirectFacultyNotLoggedIn.$inject = ['facultyAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\tfunction redirectFacultyNotLoggedIn(facultyAuthService, $q, $state, $timeout, $rootScope) {\r\n\t\tvar defer = $q.defer();\r\n\t\tvar authenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t\tif (authenticate) {\r\n\t\t\tif ($rootScope.faculty.verified !== true) {\r\n\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t$state.go('in_fc.guidelines');\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdefer.resolve();\r\n\t\t} else {\r\n\t\t\t$timeout(function () {\r\n\t\t\t\t$state.go('out.login');\r\n\t\t\t});\r\n\t\t\tdefer.reject();\r\n\t\t}\r\n\r\n\t\treturn defer.promise;\r\n\t}\r\n\r\n\tredirectTeamNotLoggedIn.$inject = ['memberAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\tfunction redirectTeamNotLoggedIn(memberAuthService, $q, $state, $timeout, $rootScope) {\r\n\t\tvar defer = $q.defer();\r\n\t\tvar authenticate = memberAuthService.checkMemberLoggedIn();\r\n\t\tif (authenticate) {\r\n\t\t\tdefer.resolve();\r\n\t\t} else {\r\n\t\t\t$timeout(function () {\r\n\t\t\t\t$state.go('out.login');\r\n\t\t\t});\r\n\t\t\tdefer.reject();\r\n\t\t}\r\n\r\n\t\treturn defer.promise;\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('authInterceptor', authInterceptor);\r\n\r\n\tauthInterceptor.$inject = ['$window', '$q', '$location'];\r\n\r\n\tfunction authInterceptor($window, $q, $location) {\r\n\t\tvar service = {\r\n\t\t\trequest: request,\r\n\t\t\trequestError: requestError,\r\n\t\t\tresponse: response,\r\n\t\t\tresponseError: responseError\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction request(config) {\r\n\t\t\tvar token = getToken();\r\n\t\t\tif (token !== null) {\r\n\t\t\t\tvar authHead = 'Bearer ' + token;\r\n\t\t\t\tconfig.headers['Authorization'] = authHead;\r\n\t\t\t}\r\n\t\t\treturn config;\r\n\t\t}\r\n\r\n\t\tfunction requestError(rejection) {\r\n\t\t\t// console.log(\"Request Rejection\",rejection);\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\r\n\t\tfunction response(response) {\r\n\t\t\t// console.log(\"response\",response);\r\n\t\t\treturn response || $q.when(response);\r\n\t\t}\r\n\r\n\t\tfunction responseError(rejection) {\r\n\t\t\tconsole.log(\"response rejection\", rejection);\r\n\t\t\tif (rejection.status == 403) {\r\n\t\t\t\t$location.path('/login');\r\n\t\t\t}\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t  .module('fct.core')\r\n\t  .factory('eventService', eventService);\r\n\r\n\teventService.$inject = ['$http'];\r\n\r\n\tfunction eventService($http) {\r\n\t  var service = {\r\n\t    addEvent: addEvent\r\n\t  };\r\n\r\n\t  return service;\r\n\r\n\t  function addEvent(event) {\r\n\t\t\talert(JSON.stringify(event));\r\n\t\t\t// return $http.post('/api/event/events', event)\r\n\t\t\t// \t.then(resolveFunc)\r\n\t\t\t// \t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyService', facultyService);\r\n\r\n\tfacultyService.$inject = ['$http', '$rootScope'];\r\n\r\n\tfunction facultyService($http, $rootScope) {\r\n\t\tvar baseLink = '/api/faculty/' + $rootScope.faculty.id;\r\n\r\n\t\tvar service = {\r\n\t\t\tconfirmRegistration: confirmRegistration\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction confirmRegistration(registration) {\r\n\t\t\tvar link = baseLink + '/registrations/confirm';\r\n\t\t\treturn $http.post(link, registration)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrations() {\r\n\t\t\tvar link = baseLink + '/registrations';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinator(students) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.put(link, students)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyAuthService', facultyAuthService);\r\n\r\n\tfacultyAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction facultyAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tfacultyLogin: facultyLogin,\r\n\t\t\tfacultyRegister: facultyRegister,\r\n\t\t\tcheckFacultyLoggedIn: checkFacultyLoggedIn,\r\n\t\t\tchangeFacultyPassword: changeFacultyPassword,\r\n\t\t\tlogout: logout,\r\n\t\t\tfacultyForgotPasswordApply: facultyForgotPasswordApply,\r\n\t\t\tfacultyForgotPasswordSet: facultyForgotPasswordSet,\r\n\t\t\tgetColleges: getColleges\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkFacultyLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\t\t\t\t$rootScope.faculty = {};\r\n\t\t\t\t$rootScope.faculty.email = payload.email;\r\n\t\t\t\t$rootScope.faculty.mobileno = payload.mobileno;\r\n\t\t\t\t$rootScope.faculty.name = payload.name;\r\n\t\t\t\t$rootScope.faculty.verified = payload.verified;\r\n\t\t\t\t$rootScope.faculty.rejected = payload.rejected;\r\n\t\t\t\t$rootScope.faculty.forgot_password = payload.forgot_password;\r\n\t\t\t\t$rootScope.faculty.id = payload._id;\r\n\t\t\t\t$rootScope.faculty.registrations_count = payload.registrations_count;\r\n\t\t\t\t$rootScope.faculty.collected_amount = payload.collected_amount;\r\n\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/login', user)\r\n\t\t\t\t.then(facultyLoginSuccess)\r\n\t\t\t\t.catch(facultyLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/register', user)\r\n\t\t\t\t.then(facultyRegisterSuccess)\r\n\t\t\t\t.catch(facultyRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyRegister');\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyRegister', error);\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyLogin');\r\n\t\t\t// checkFacultyLoggedIn();\r\n\t\t}\r\n\r\n\t\tfunction facultyLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction getColleges() {\r\n\t\t\treturn $http.get('/api/college/getAllCollege')\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesFailure);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t\tfunction changeFacultyPassword(passwordObject) {\r\n\t\t\tif (checkFacultyLoggedIn()) {\r\n\t\t\t\tif ($rootScope.faculty) {\r\n\t\t\t\t\tpasswordObject.facultyId = $rootScope.faculty.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/faculty/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApply(faculty) {\r\n\t\t\t$http.post('/api/auth/faculty/forgotPasswordApply', faculty)\r\n\t\t\t\t.then(facultyForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSet(faculty, id) {\r\n\t\t\tvar link = '/api/auth/faculty/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, faculty)\r\n\t\t\t\t.then(facultyForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure() {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberService', memberService);\r\n\r\n\tmemberService.$inject = ['$http'];\r\n\r\n\tfunction memberService($http) {\r\n\t\tvar service = {\r\n\t\t\tgetAllFacultyCoordinators: getAllFacultyCoordinators,\r\n\t\t\tverifyFaculty: verifyFaculty\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getAllFacultyCoordinators() {\r\n\t\t\treturn $http.get('/api/members/faculty')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/verify/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(registration) {\r\n\r\n\t\t}\r\n\r\n\t\tfunction responseFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberAuthService', memberAuthService);\r\n\r\n\tmemberAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction memberAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tmemberLogin: memberLogin,\r\n\t\t\tmemberRegister: memberRegister,\r\n\t\t\tcheckMemberLoggedIn: checkMemberLoggedIn,\r\n\t\t\tlogout: logout\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkMemberLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\t\t\t\t$rootScope.member = {};\r\n\t\t\t\t$rootScope.member.email = payload.email;\r\n\t\t\t\t$rootScope.member.mobileno = payload.mobileno;\r\n\t\t\t\t$rootScope.member.name = payload.name;\r\n\t\t\t\t$rootScope.member.forgot_password = payload.forgot_password;\r\n\t\t\t\t$rootScope.member.id = payload._id;\r\n\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\t\tfunction memberLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/member/login', user)\r\n\t\t\t\t.then(memberLoginSuccess)\r\n\t\t\t\t.catch(memberLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/member/register', user)\r\n\t\t\t\t.then(memberRegisterSuccess)\r\n\t\t\t\t.catch(memberRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberRegister');\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberRegister', error);\r\n\t\t}\r\n\r\n\t\tfunction memberLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberLogin');\r\n\t\t}\r\n\r\n\t\tfunction memberLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApply(member) {\r\n\t\t\t$http.post('/api/auth/member/forgotPasswordApply', member)\r\n\t\t\t\t.then(memberForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(memberForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSet(member, id) {\r\n\t\t\tvar link = '/api/auth/member/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, member)\r\n\t\t\t\t.then(memberForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(memberForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure() {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.factory('fctToast', fctToast);\r\n\r\n\tfctToast.$inject = ['$mdToast'];\r\n\r\n\tfunction fctToast($mdToast) {\r\n\t\tvar service = {\r\n\t\t\tshowToast: showToast\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction showToast(data, success) {\r\n\t\t\tvar toasterClass = 'md-toast-warn';\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\ttoasterClass = 'md-toast-success';\r\n\t\t\t}\r\n\r\n\t\t\tvar toaster = $mdToast.simple()\r\n\t\t\t\t.textContent(data)\r\n\t\t\t\t.position('bottom right')\r\n\t\t\t\t.hideDelay(3000)\r\n\t\t\t\t.toastClass(toasterClass);\r\n\t\t\t$mdToast.show(toaster);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fct.core')\r\n    .directive('eventCard', eventCard);\r\n\r\n  eventCard.$inject = [];\r\n  \r\n  function eventCard() {\r\n    var directive = {\r\n          restrict: 'E',\r\n          templateUrl: '/templates/components/cards/eventCard.html',\r\n          link: linkFunc,\r\n          scope: {\r\n              eventdata : '='\r\n          },\r\n          controller: 'EventCardController',\r\n          controllerAs: 'ecc'\r\n      };\r\n\r\n      return directive;\r\n\r\n      function linkFunc($scope, $element, $attributes) {\r\n          $scope.openCard = false;\r\n          $scope.caret = 'expand_less';\r\n          $scope.toggleCard = toggleCard;\r\n          console.log($scope.userdata);\r\n\r\n          function toggleCard() {\r\n              $scope.openCard = !($scope.openCard);\r\n\r\n              if($scope.openCard === true){\r\n                  $scope.caret = 'expand_more';\r\n              }\r\n              else {\r\n                  $scope.caret = 'expand_less';\r\n              }\r\n          }\r\n      }\r\n\r\n  }\r\n\r\n\tangular\r\n    .module('fct.core')\r\n    .controller('EventCardController', EventCardController);\r\n\r\n  EventCardController.$inject = ['$scope'];\r\n\r\n  function EventCardController($scope) {\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController', ConfirmRegistrationsController);\r\n\r\n\tConfirmRegistrationsController.$inject = ['memberService', '$mdDialog', 'fctToast'];\r\n\r\n\tfunction ConfirmRegistrationsController(memberService, $mdDialog, fctToast) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmRegistration: confirmRegistration\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(event) {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\t// return\r\n\t\t\tvar confirm = $mdDialog.prompt()\r\n\t\t\t\t.title('Enter SERIAL ID')\r\n\t\t\t\t.textContent('Enter the serial id provided in ther Registration Slip')\r\n\t\t\t\t.placeholder('Serial Id')\r\n\t\t\t\t.ariaLabel('Serial Id')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.ok('Submit')\r\n\t\t\t\t.cancel('Cancel');\r\n\r\n\t\t\t$mdDialog.show(confirm).then(function (result) {\r\n\t\t\t\tvm.registration.serialId = result;\r\n\t\t\t\treturn memberService.confirmRegistration(vm.registration)\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast('Registration Successful', true);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultySettingsController', FacultySettingsController);\r\n\r\n\tFacultySettingsController.$inject = ['facultyAuthService', 'fctToast', '$scope', '$rootScope', '$timeout'];\r\n\r\n\tfunction FacultySettingsController(facultyAuthService, fctToast, $scope, $rootScope, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tfacultyAuthService.changeFacultyPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('FacultyChangePasswordSuccess', FacultyChangePasswordSuccess);\r\n\t\t$rootScope.$on('FacultyChangePasswordFailure', FacultyChangePasswordFailure);\r\n\r\n\t\tfunction FacultyChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction FacultyChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setPristine();\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('RegistrationDetailsController', RegistrationDetailsController);\r\n\r\n\tRegistrationDetailsController.$inject = ['fctToast', '$rootScope', 'facultyService'];\r\n\r\n\tfunction RegistrationDetailsController(fctToast, $rootScope, facultyService) {\r\n\t\tvar vm = this;\r\n\r\n\t\t// angular.extend(vm, {\r\n\t\t// \tfunc: func\r\n\t\t// });\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tif ($rootScope.faculty.registrations_count > 0) {\r\n\t\t\t\treturn facultyService.getFacultyRegistrations()\r\n\t\t\t\t\t.then(getRegistrationsSuccess)\r\n\t\t\t\t\t.catch(getRegistrationsFailure);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsSuccess(response) {\r\n\t\t\tvm.registrations = response.data;\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\tfctToast.showToast('Internal Server Error');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('VerifyCoordinatorController', VerifyCoordinatorController);\r\n\r\n\tVerifyCoordinatorController.$inject = ['$scope', 'memberService', '$mdDialog'];\r\n\r\n\tfunction VerifyCoordinatorController($scope, memberService, $mdDialog) {\r\n\t\tvar vm = this;\r\n\t\tvm.limitFaculty = 5;\r\n\t\tvm.nomoreFaculty = true;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\tloadmore: loadmore\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn memberService.getAllFacultyCoordinators()\r\n\t\t\t\t.then(getAllFacultyCoordinatorsSuccess)\r\n\t\t\t\t.catch(getAllFacultyCoordinatorsFailure);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getAllFacultyCoordinatorsSuccess(response) {\r\n\t\t\tvm.faculties = response.data;\r\n\t\t\tif (vm.limitFaculty <= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getAllFacultyCoordinatorsFailure(error) {\r\n\t\t\t//State go to Add Events\r\n\t\t\t//Dashboard\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id, index, event) {\r\n\t\t\tvm.verifyingIndex = index;\r\n\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Verifying ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Verification')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.verifyFaculty(id)\r\n\t\t\t\t\t.then(verifyFacultySuccess)\r\n\t\t\t\t\t.catch(verifyFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t// $scope.status = 'You decided to keep your debt.';\r\n\t\t\t});\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.verifyingIndex].verified = true;\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t}\r\n\r\n\t\tfunction loadmore() {\r\n\t\t\tvm.limitFaculty += 5;\r\n\t\t\tif (vm.limitFaculty >= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('AddEventController', AddEventController);\r\n\r\n    AddEventController.$inject = ['$stateParams', 'eventService', '$rootScope'];\r\n\r\n    function AddEventController(stateParams, eventService, $rootScope) {\r\n        var vm = this;\r\n        vm.myEvent = {};\r\n\r\n        angular.extend(vm, {\r\n            register: register\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          initializeCKEditor();\r\n        }\r\n\r\n        function register() {alert(JSON.stringify(vm.myEvent));\r\n          //eventService.addEvent(vm.myEvent);\r\n        }\r\n\r\n    \t\t$rootScope.$on('registerSuccess', registerSuccess);\r\n        $rootScope.$on('registerFailure', registerFailure);\r\n\r\n    \t\tfunction registerSuccess(event) {\r\n            asToast.showToast(\"Registered\",true);\r\n\r\n        }\r\n\r\n        function registerFailure(event, error) {\r\n            asToast.showToast(error.data.message);\r\n        }\r\n\r\n        function initializeCKEditor() {\r\n          if(stateParams.editData !== undefined &&\r\n              stateParams.editData !== null) {\r\n            vm.myEvent = stateParams.editData;\r\n            vm.myEvent.event = \"Insert\";\r\n          } else {\r\n            vm.myEvent.event = \"Update\";\r\n          }\r\n\r\n          if ( CKEDITOR.env.ie && CKEDITOR.env.version < 9 )\r\n          \tCKEDITOR.tools.enableHtml5Elements( document );\r\n\r\n          // The trick to keep the editor in the sample quite small\r\n          // unless user specified own height.\r\n          CKEDITOR.config.height = 150;\r\n          CKEDITOR.config.width = 'auto';\r\n\r\n          var initSample = ( function() {\r\n          \tvar wysiwygareaAvailable = isWysiwygareaAvailable();\r\n\r\n          \treturn function() {\r\n          \t\tvar editorElement = CKEDITOR.document.getById( 'editor' );\r\n\r\n          \t\t// Depending on the wysiwygare plugin availability initialize classic or inline editor.\r\n          \t\tif ( wysiwygareaAvailable ) {\r\n          \t\t\tCKEDITOR.replace( 'editorRules' );\r\n          \t\t\tCKEDITOR.replace( 'editorSpecification' );\r\n          \t\t\tCKEDITOR.replace( 'editorJudgingCriteria' );\r\n          \t\t} else {\r\n          \t\t\teditorElement.setAttribute( 'contenteditable', 'true' );\r\n          \t\t\tCKEDITOR.inline( 'editorRules' );\r\n          \t\t\tCKEDITOR.inline( 'editorSpecification' );\r\n          \t\t\tCKEDITOR.inline( 'editorJudgingCriteria' );\r\n\r\n          \t\t\t// TODO we can consider displaying some info box that\r\n          \t\t\t// without wysiwygarea the classic editor may not work.\r\n          \t\t}\r\n\r\n          \t\t//CKEDITOR.instances[\"editor\"].getData()\r\n          \t\t//to get the data\r\n          \t};\r\n\r\n          \tfunction isWysiwygareaAvailable() {\r\n          \t\t// If in development mode, then the wysiwygarea must be available.\r\n          \t\t// Split REV into two strings so builder does not replace it :D.\r\n          \t\tif ( CKEDITOR.revision == ( '%RE' + 'V%' ) ) {\r\n          \t\t\treturn true;\r\n          \t\t}\r\n\r\n          \t\treturn !!CKEDITOR.plugins.get( 'wysiwygarea' );\r\n          \t}\r\n          } )();\r\n          initSample();\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('ShowEventController', ShowEventController);\r\n\r\n    ShowEventController.$inject = [];\r\n    \r\n    function ShowEventController() {\r\n        var vm = this;\r\n\r\n        activate();\r\n        var joinedDate = \"ab\";\r\n\r\n        function activate() {\r\n\r\n          vm.dummyEvents = [{\r\n            teamId: '32049',\r\n            teamName: 'Mona Lisa',\r\n            leaderName: 'Monit',\r\n            contactNumber: '9329239499',\r\n            eventName: 'Scrabble+',\r\n            email: 'abc@123.com',\r\n            eventSection: 'IT Department'\r\n          },\r\n          {\r\n            teamId: '32048',\r\n            teamName: 'Mango',\r\n            leaderName: 'Monit',\r\n            contactNumber: '9329239499',\r\n            eventName: 'Scrabble+',\r\n            email: 'abc@123.com',\r\n            eventSection: 'IT Department'\r\n          },\r\n          {\r\n            teamId: '32047',\r\n            teamName: 'Rascals',\r\n            leaderName: 'Monit',\r\n            contactNumber: '9329239499',\r\n            eventName: 'Scrabble+',\r\n            email: 'abc@123.com',\r\n            eventSection: 'IT Department'\r\n          },\r\n          {\r\n            teamId: '32046',\r\n            teamName: 'Rockerstar',\r\n            leaderName: 'Monit',\r\n            contactNumber: '9329239499',\r\n            eventName: 'Scrabble+',\r\n            email: 'abc@123.com',\r\n            eventSection: 'IT Department'\r\n          },];\r\n\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLayoutController', FacultyLayoutController)\r\n\t\t.controller('ContactDialogController', ContactDialogController);\r\n\r\n\tFacultyLayoutController.$inject = ['facultyAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$mdDialog', '$mdMedia', '$scope'];\r\n\r\n\tfunction FacultyLayoutController(facultyAuthService, $mdSidenav, $rootScope, fctToast, $state, $mdDialog, $mdMedia, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\t$scope.$watch(function () {\r\n\t\t\treturn $mdMedia('xs') || $mdMedia('sm');\r\n\t\t});\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t\tcontact: contact\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tfacultyAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\r\n\t\tfunction contact(ev) {\r\n\t\t\tvar useFullScreen = $mdMedia('sm') || $mdMedia('xs');\r\n\t\t\t$mdDialog.show({\r\n\t\t\t\tcontroller: 'ContactDialogController',\r\n\t\t\t\ttemplateUrl: '/templates/components/dialogs/contact.html',\r\n\t\t\t\tparent: angular.element(document.body),\r\n\t\t\t\ttargetEvent: ev,\r\n\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\tfullscreen: useFullScreen // Only for -xs, -sm breakpoints.\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tContactDialogController.$inject = ['$scope', '$mdDialog'];\r\n\r\n\tfunction ContactDialogController($scope, $mdDialog) {\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.hide = function () {\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordApplyController', FacultyForgotPasswordApplyController);\r\n\r\n\tFacultyForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyForgotPasswordApplyController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\r\n\r\n\t\tfunction submit() {\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordApply', facultyForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordApply', facultyForgotPasswordApplyFailure);\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordSetController', FacultyForgotPasswordSetController);\r\n\r\n\tFacultyForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope', '$stateParams'];\r\n\r\n\tfunction FacultyForgotPasswordSetController($scope, fctToast, facultyAuthService, $state, $rootScope, $stateParams) {\r\n\t\tvar vm = this;\r\n\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = $stateParams.token;\r\n\t\t\tvar uid = $stateParams.id;\r\n\r\n\t\t\tfacultyAuthService.facultyForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordSet', facultyForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordSet', facultyForgotPasswordSetFailure);\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLoginController', FacultyLoginController);\r\n\r\n\tFacultyLoginController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyLoginController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.faculty) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyRegistrationController', FacultyRegistrationController);\r\n\r\n\tFacultyRegistrationController.$inject = ['facultyAuthService', '$scope', 'fctToast', '$rootScope', '$state', '$timeout', '$q'];\r\n\r\n\tfunction FacultyRegistrationController(facultyAuthService, $scope, fctToast, $rootScope, $state, $timeout, $q) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\t// vm.states = loadAll();\r\n\t\tvm.selectedItem = null;\r\n\t\tvm.searchText = null;\r\n\t\tvm.querySearch = querySearch;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyAuthService.getColleges()\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesError);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\tvm.colleges = response.data;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesError(error) {\r\n\t\t\tfctToast.showToast('Error in getting colleges');\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = 'Email already registered';\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction querySearch(query) {\r\n\t\t\tvar results = query ? vm.colleges.filter(createFilterFor(query)) : vm.colleges;\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tconsole.log(results);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tdeferred.resolve(results);\r\n\t\t\t}, Math.random() * 1000, false);\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t// function loadAll() {\r\n\t\t// \tvar allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana';\r\n\t\t//\r\n\t\t// \treturn allStates.split(/, +/g).map(function (state) {\r\n\t\t// \t\treturn {\r\n\t\t// \t\t\tvalue: state.toLowerCase(),\r\n\t\t// \t\t\tdisplay: state\r\n\t\t// \t\t};\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\r\n\t\tfunction createFilterFor(query) {\r\n\t\t\tvar lowercaseQuery = angular.lowercase(query);\r\n\r\n\t\t\treturn function filterFn(college) {\r\n\t\t\t\treturn (college.name.toLowerCase().trim().indexOf(lowercaseQuery) === 0);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordApplyController', MemberForgotPasswordApplyController);\r\n\r\n\tMemberForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberForgotPasswordApplyController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tfunction submit() {\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordApply', memberForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordApply', memberForgotPasswordApplyFailure);\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordSetController', MemberForgotPasswordSetController);\r\n\r\n\tMemberForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope', '$stateParams'];\r\n\r\n\tfunction MemberForgotPasswordSetController($scope, fctToast, memberAuthService, $state, $rootScope, $stateParams) {\r\n\t\tvar vm = this;\r\n\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = $stateParams.token;\r\n\t\t\tvar uid = $stateParams.id;\r\n\r\n\t\t\tmemberAuthService.memberForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordSet', memberForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordSet', memberForgotPasswordSetFailure);\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLoginController', MemberLoginController);\r\n\r\n\tMemberLoginController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberLoginController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorMemberLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t// $state.go('inapp.orders');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\t// console.log(error);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.member) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberRegistrationController', MemberRegistrationController);\r\n\r\n\tMemberRegistrationController.$inject = ['memberAuthService', '$scope', 'fctToast', '$rootScope', '$state'];\r\n\r\n\tfunction MemberRegistrationController(memberAuthService, $scope, fctToast, $rootScope, $state) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tconsole.log(newUser);\r\n\t\t\tmemberAuthService.memberRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorMemberRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t// $state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = error.data.errMsg.toString();\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n"]}