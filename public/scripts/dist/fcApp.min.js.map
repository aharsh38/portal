<<<<<<< HEAD
{"version":3,"sources":["api/api.module.js","app/fct_app.module.js","core/core.module.js","core/core.config.js","api/interceptors/authInterceptor.factory.js","api/services/event.factory.js","api/services/faculty.factory.js","api/services/facultyAuth.factory.js","api/services/member.factory.js","api/services/memberAuth.factory.js","core/services/fctToast.factory.js","core/directives/core.eventCard.directive.js","core/directives/core.fileUpload.directive.js","core/controllers/in_fc/ConfirmRegistrationModal.controller.js","core/controllers/in_fc/addStudentCoordinator.controller.js","core/controllers/in_fc/confirmRegistrations.controller.js","core/controllers/in_fc/confirmRegistrations1.controller.js","core/controllers/in_fc/facultySettings.controller.js","core/controllers/in_fc/registrationDetails.controller.js","core/controllers/in_fc/verifyCoordinator.controller.js","core/controllers/in_team/addEvent.controller.js","core/controllers/in_team/dashboard.controller.js","core/controllers/in_team/eachEvent.controller.js","core/controllers/in_team/eventCard.controller.js","core/controllers/in_team/eventRegistration.controller.js","core/controllers/in_team/memberSettings.controller.js","core/controllers/in_team/participantRegistration.controller.js","core/controllers/in_team/showEvent.controller.js","core/controllers/in_team/updateEvent.controller.js","core/controllers/layout/facultyLayout.controller.js","core/controllers/layout/memberLayout.controller.js","core/controllers/out/facultyForgotPasswordApply.controller.js","core/controllers/out/facultyForgotPasswordSet.controller.js","core/controllers/out/facultyLogin.controller.js","core/controllers/out/facultyRegister.controller.js","core/controllers/out/memberForgotPasswordApply.controller.js","core/controllers/out/memberForgotPasswordSet.controller.js","core/controllers/out/memberLogin.controller.js","core/controllers/out/memberRegister.controller.js","core/animations/core.slideVertical.animation.js"],"names":["angular","module","initializeCore","$rootScope","$interval","preloader","$on","startPreloader","stopPreloader","pageTransition","alreadyRedirected","constant","TweenMax","TimelineMax","run","$inject","configName","$mdThemingProvider","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","addInterceptors","interceptors","push","setTheme","theme","primaryPalette","themePalette","primary","accentPalette","accent","warnPalette","warn","setRoutes","html5Mode","when","otherwise","state","templateUrl","resolve","redirectLoggedIn","controller","controllerAs","redirectFacultyNotLoggedIn","redirectTeamNotLoggedIn","url","facultyAuthService","memberAuthService","$q","$state","$timeout","defer","checkFacultyLoggedIn","faculty","verified","go","checkMemberLoggedIn","reject","promise","config","authInterceptor","$window","$location","getToken","localStorage","request","token","authHead","headers","requestError","rejection","response","responseError","status","path","factory","eventService","$http","addEvent","eventData","post","then","resolveFunc","catch","rejectFunc","getEvent","get","getSingleEvent","id","updateEvent","eventId","put","deleteEvent","delete","error","facultyService","getEachFaculty","link","baseLink","errorFunc","confirmRegistration","registration","getFacultyRegistrations","editStudentCoordinator","student","editStudentCoordinatorSuccess","editStudentCoordinatorFailure","getStudentCoordinator","updateFaculty","data","getRegistrationData","payload","split","atob","JSON","parse","isDefined","collegeId","email","mobileno","name","rejected","forgot_password","_id","exp","Date","now","replaceToken","removeToken","saveToken","removeItem","facultyLogin","user","facultyLoginSuccess","facultyLoginFailure","facultyRegister","facultyRegisterSuccess","facultyRegisterFailure","$broadcast","getColleges","getCollegesSuccess","getCollegesFailure","changeFacultyPassword","passwordObject","facultyId","patch","changePasswordSuccess","changePasswordFailure","facultyForgotPasswordApply","facultyForgotPasswordApplySuccess","facultyForgotPasswordApplyFailure","facultyForgotPasswordSet","facultyForgotPasswordSetSuccess","facultyForgotPasswordSetFailure","logout","checkVerified","console","log","checkVerifiedSuccess","checkVerifiedFailure","memberService","$mdDialog","getAllFacultyCoordinators","responseFunc","verifyFaculty","rejectFaculty","getTotalRegistrations","getRegistrationsByEvent","getVerifyFacultyStudent","getUnverifiedFaculty","getUnconfirmedRegistration","getEventRegistrationExcel","getConfirmedRegistrationCount","exportParticipantList","getDeleteModal","confirm","title","textContent","ok","cancel","show","isUndefined","registrations_count","member","memberLogin","memberLoginSuccess","memberLoginFailure","memberRegister","memberRegisterSuccess","memberRegisterFailure","memberForgotPasswordApply","memberForgotPasswordApplySuccess","memberForgotPasswordApplyFailure","memberForgotPasswordSet","memberForgotPasswordSetSuccess","memberForgotPasswordSetFailure","changeMemberPassword","memberId","fctToast","$mdToast","showToast","success","toasterClass","toaster","simple","position","hideDelay","toastClass","eventCard","linkFunc","$scope","toggleCard","openCard","caret","restrict","scope","eventdata","reload","directive","fileUpload","template","replace","transclude","ngModel","disabled","require","el","attr","Resize","file","index","type","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","Blob","draw","width","img","height","ctx","canvas","getContext","drawImage","maxWidth","maxHeight","toDataURL","uploadFile","document","createElement","reader","FileReader","onload","e","src","target","result","readAsDataURL","upload","fileProperties","resize","indexOf","extend","size","percent","preview","xhr","XMLHttpRequest","fd","FormData","progress","uri","open","withCredentials","shareCredentials","forEach","item","setRequestHeader","header","value","onreadystatechange","code","statusText","$apply","addEventListener","parseInt","loaded","total","append","fileName","send","withPreview","fileSelector","sel","credentials","multiple","accept","element","querySelectorAll","bind","$eval","find","click","files","f","ConfirmRegistrationModalController","confirmData","vm","registrationButtonClicked","event","preventDefault","confirmRegistrationSuccess","confirmRegistrationFailure","hide","this","AddStudentController","getStudentCoordinatorSuccess","student_coordinator","coordinator","preInfo","editInfo","getStudentCoordinatorFailure","update","updateButtonClicked","edit","addStudentCoordinator","addButtonClicked","addStudentCoordinatorSuccess","ConfirmRegistrationsController","prompt","placeholder","ariaLabel","targetEvent","serialId","confirmRegistrationForm","$setPristine","$setUntouched","msg","for","message","ConfirmRegistrationsController1","getRegistrationDataSuccess","getRegistrationDataFailure","teamId","locals","clickOutsideToClose","fullscreen","FacultySettingsController","userDetail","updating","changePassword","updateInfo","FacultyChangePasswordSuccess","resetForm","FacultyChangePasswordFailure","changePasswordForm","RegistrationDetailsController","getRegistrationsSuccess","registrations","totalRegistrations","collected_amount","totalCollectedAmount","noregistration","getRegistrationsFailure","VerifyCoordinatorController","getAllFacultyCoordinatorsSuccess","faculties","limitFaculty","nomoreFaculty","getAllFacultyCoordinatorsFailure","verifyingIndex","verifyFacultySuccess","verifyFacultyFailure","rejectionIndex","rejectFacultySuccess","rejectFacultyFailure","splice","loadmore","orderField","reverseSort","AddEventController","stateParams","Upload","$filter","doneLoading","openManagersModal","myEvent","managers","each","feeTypeChanged","fees_type","fees","feeDisabled","do_payment","save","isUpdate","registerSuccess","registerFailure","uploadFiles","errFiles","attach","doc_name","dest","attachments","errorMsg","evt","Math","min","uploadImage","reponse","event_image","uploadIconImage","event_icon_image","image","DashboardController","array","unconfirmed_registrations","getVFS","VFSPath","getUVF","UVFPath","confirmedCount","unConfirmedCount","totalConfirmedParticipants","totalAmountCollected","EachEventController","$sce","getEventSuccess","getEventFailure","rules","trustAsHtml","judging_criteria","specification","undefined","EventCardController","deleteId","confirmedDelete","unconfirmedDelete","deleteEventSuccess","deleteEventFailure","EventRegistrationController","getRegistration","failure","eventDetails","getExcel","event_name","confirmed","input","confirmation","json","stringify","MemberSettingsController","MemberChangePasswordSuccess","MemberChangePasswordFailure","ParticipantRegistrationController","openParticipantModule","nopflag","first","myParticipant","other_participants","leaderFlag","getParticipantLength","team_leader","eventObject","event_id","event_shortcode","otherParticipants","maxParticipants","eventPrice","esflag","ShowEventController","getEvents","dummyEvents","UpdateEventController","loadIndex","loadCompleted","checkEventId","onEventGetSuccess","onEventGetFailure","totalManager","onUpdateSuccess","onUpdateFailure","event_icon","FacultyLayoutController","$mdSidenav","$mdMedia","logoutSuccessful","openLeftSidenav","isOpenLeftSidenav","isOpen","closeLeftSidenav","close","contact","ev","useFullScreen","parent","body","$watch","ContactDialogController","MemberLayoutController","FacultyForgotPasswordApplyController","submit","submitButtonClicked","newUser","copy","forgotPasswordApplyForm","applied","$error","not_registered","FacultyForgotPasswordSetController","$stateParams","changePasswordButtonClicked","utoken","uid","userid","forgotPasswordSetForm","set","uriLi","fi","si","ti","foi","substring","Boolean","FacultyLoginController","login","loginButtonClicked","loginSuccess","resetLogin","loginFailure","toString","loginForm","errorState","password","incorrect","FacultyRegistrationController","colleges","getCollegesError","register","registerButtonClicked","registerForm","querySearch","query","results","filter","createFilterFor","deferred","random","lowercaseQuery","lowercase","college","matches","match","acronym","join","toLowerCase","trim","selectedItem","searchText","MemberForgotPasswordApplyController","MemberForgotPasswordSetController","MemberLoginController","MemberRegistrationController","errMsg","slideVertical","addClass","addHideClass","removeClass","removeHideClass","className","done","opacity","from","ease","Power0","easeNone","to","Power2","easeOut","onComplete","delay","easeIn","animation"],"mappings":"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","file":"fcApp.min.js","sourcesContent":["(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api', []);\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct_app', [\n\t\t\t'fct.api',\n\t\t\t'fct.core'\n\t\t]);\n})();\n","(function () {\n\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core', [\n\t\t\t'ngAnimate',\n\t\t\t'ngMessages',\n\t\t\t'ngMaterial',\n\t\t\t'ui.router',\n\t\t\t'underscore',\n\t\t\t'ngFileUpload',\n\t\t\t'validation.match',\n\t\t\t'ngMdIcons',\n\t\t\t'angularMoment',\n\t\t\t'ckeditor'\n\t\t\t// 'fct.api'\n\t\t]);\n\n\tangular\n\t\t.module('fct.core')\n\t\t.constant('TweenMax', TweenMax)\n\t\t.constant('TimelineMax', TimelineMax);\n\t//\n\tangular\n\t\t.module('fct.core')\n\t\t.run(initializeCore);\n\n\tinitializeCore.$inject = ['$rootScope', '$interval'];\n\n\tfunction initializeCore($rootScope, $interval) {\n\t\tactive();\n\n\t\tfunction active() {\n\t\t\tpreloader();\n\t\t}\n\n\t\t$rootScope.alreadyRedirected = false;\n\t\t\t\n\t\n\t\tfunction preloader() {\n\t\t\t$rootScope.$on('$viewContentLoading', startPreloader);\n\t\t\t$rootScope.$on('$viewContentLoaded', stopPreloader);\n\t\t}\n\n\t\tfunction startPreloader() {\n\t\t\t$rootScope.pageTransition = true;\n\t\t}\n\n\n\t\tfunction stopPreloader() {\n\t\t\tif ($rootScope.pageTransition) {\n\t\t\t\t$interval(function () {\n\t\t\t\t\t$rootScope.pageTransition = false;\n\t\t\t\t}, 1000);\n\t\t\t}\n\t\t}\n\t}\n})();\n","\t(function() {\n\t    'use strict';\n\n\t    angular\n\t        .module('fct.core')\n\t        .config(configName);\n\n\t    configName.$inject = ['$mdThemingProvider', '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider'];\n\n\t    function configName($mdThemingProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\n\t        var themePalette = {\n\t            primary: \"blue\",\n\t            accent: \"amber\",\n\t            warn: \"red\"\n\t        };\n\n\t        activate();\n\n\t        function activate() {\n\t            setTheme();\n\t            setRoutes();\n\t            addInterceptors();\n\t        }\n\n\t        function addInterceptors() {\n\t            $httpProvider.interceptors.push('authInterceptor');\n\t        }\n\n\t        function setTheme() {\n\t            $mdThemingProvider.theme('default')\n\t                .primaryPalette(themePalette.primary)\n\t                .accentPalette(themePalette.accent)\n\t                .warnPalette(themePalette.warn);\n\t        }\n\n\t        //\n\t        //     function setRoutes() {\n\t        //         $locationProvider.html5Mode(true);\n\t        //         $urlRouterProvider.when('/', '/login');\n\t        //         $urlRouterProvider.otherwise('/login');\n\t        //         $stateProvider\n\t        //             .state('out', {\n\t        //                 templateUrl: '/templates/layouts/out.html',\n\t        //                 resolve: {\n\t        //                     redirectLoggedIn: redirectLoggedIn\n\t        //                 }\n\t        //             })\n\t        //             .state('in_fc', {\n\t        //                 templateUrl: '/templates/layouts/in_fc.html',\n\t        //                 controller: 'FacultyLayoutController',\n\t        //                 controllerAs: 'flayc',\n\t        //                 resolve: {\n\t        //                     redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\n\t        //                 }\n\t        //             })\n\t        //             .state('in_tc', {\n\t        //                 controller: 'MemberLayoutController',\n\t        //                 controllerAs: 'mlayc',\n\t        //                 templateUrl: '/templates/layouts/in_tc.html',\n\t        //                 resolve: {\n\t        //                     redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\n\t        //                 }\n\t        //             })\n\t        //             .state('out.login', {\n\t        //                 url: '/login',\n\t        //                 templateUrl: '/templates/pages/out/login.html',\n\t        //                 controller: 'FacultyLoginController',\n\t        //                 controllerAs: 'flc'\n\t        //             })\n\t        //             .state('out.register', {\n\t        //                 url: '/register',\n\t        //                 templateUrl: '/templates/pages/out/register.html',\n\t        //                 controller: 'FacultyRegistrationController',\n\t        //                 controllerAs: 'frc'\n\t        //             })\n\t        //             .state('out.forgotPasswordApply', {\n\t        //                 url: '/forgotPasswordApply',\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordApply.html',\n\t        //                 controller: 'FacultyForgotPasswordApplyController',\n\t        //                 controllerAs: 'ffpac'\n\t        //             })\n\t        //             .state('out.forgotPasswordSet', {\n\t        //                 url: '/forgotPasswordSet?token&id',\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordSet.html',\n\t        //                 controller: 'FacultyForgotPasswordSetController',\n\t        //                 controllerAs: 'ffpsc'\n\t        //             })\n\t        //             .state('out.member_login', {\n\t        //                 url: '/member/login',\n\t        //                 templateUrl: '/templates/pages/out/member/login.html',\n\t        //                 controller: 'MemberLoginController',\n\t        //                 controllerAs: 'mlc'\n\t        //             })\n\t        //             .state('out.member_register', {\n\t        //                 url: '/member/register',\n\t        //                 templateUrl: '/templates/pages/out/member/register.html',\n\t        //                 controller: 'MemberRegistrationController',\n\t        //                 controllerAs: 'mrc'\n\t        //             })\n\t        //             .state('out.member_forgotPasswordSet', {\n\t        //                 url: '/member/forgotPasswordSet?token&id',\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\n\t        //                 controller: 'MemberForgotPasswordSetController',\n\t        //                 controllerAs: 'mfpsc'\n\t        //             })\n\t        //             .state('out.member_forgotPasswordApply', {\n\t        //                 url: '/member/forgotPasswordApply',\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\n\t        //                 controller: 'MemberForgotPasswordApplyController',\n\t        //                 controllerAs: 'mfpac'\n\t        //             })\n\t        //             .state('in_tc.verifyCoordinator', {\n\t        //                 url: '/member/verifyCoordinator',\n\t        //                 templateUrl: '/templates/pages/in/verifyCoordinator.html',\n\t        //                 controller: 'VerifyCoordinatorController',\n\t        //                 controllerAs: 'vcc'\n\t        //             })\n\t        //             .state('in_tc.collegeList', {\n\t        //                 url: '/member/collegeList',\n\t        //                 templateUrl: '/templates/pages/in/collegeList.html'\n\t        //             })\n\t        //             .state('in_tc.dashboard', {\n\t        //                 url: '/dashboard',\n\t        //                 templateUrl: '/templates/pages/in/dashboard.html',\n\t        //                 controller: 'DashboardController',\n\t        //                 controllerAs: 'dc'\n\t        //             })\n\t        //             .state('in_tc.eventRegistrations', {\n\t        //                 url: '/eventRegistration',\n\t        //                 templateUrl: '/templates/pages/in/eventRegistration.html',\n\t        //                 controller: 'EventRegistrationController',\n\t        //                 controllerAs: 'erc'\n\t        //             })\n\t        //             .state('in_tc.addEvent', {\n\t        //                 url: '/member/events/create',\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\n\t        //                 controller: 'AddEventController',\n\t        //                 controllerAs: 'ec',\n\t        //             })\n\t        //             .state('in_tc.settings', {\n\t        //                 url: '/member/settings',\n\t        //                 templateUrl: '/templates/pages/in/memberSettings.html',\n\t        //                 controller: 'MemberSettingsController',\n\t        //                 controllerAs: 'msc'\n\t        //             })\n\t        //             .state('in_tc.updateEvent', {\n\t        //                 url: '/member/events/:eventId/update',\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\n\t        //                 controller: 'UpdateEventController',\n\t        //                 controllerAs: 'ec'\n\t        //             })\n\t        //             .state('in_tc.showEvent', {\n\t        //                 url: '/member/events',\n\t        //                 templateUrl: '/templates/pages/in/showEvent.html',\n\t        //                 controller: 'ShowEventController',\n\t        //                 controllerAs: 'sec'\n\t        //             })\n\t        //             .state('in_tc.eachEvent', {\n\t        //                 url: '/member/events/:eventId',\n\t        //                 templateUrl: '/templates/pages/in/eachEvent.html',\n\t        //                 controller: 'EachEventController',\n\t        //                 controllerAs: 'eec'\n\t        //             })\n\t        //             .state('in_fc.guidelines', {\n\t        //                 url: '/guidelines',\n\t        //                 templateUrl: '/templates/pages/in/guidelines.html'\n\t        //             })\n\t        //             .state('in_fc.settings', {\n\t        //                 url: '/settings',\n\t        //                 templateUrl: '/templates/pages/in/facultySettings.html',\n\t        //                 controller: 'FacultySettingsController',\n\t        //                 controllerAs: 'fsc'\n\t        //             })\n\t        //             .state('in_fc.confirm_registration', {\n\t        //                 url: '/confirm/registrations',\n\t        //                 templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\n\t        //                 controller: 'ConfirmRegistrationsController1',\n\t        //                 controllerAs: 'crc'\n\t        //             })\n\t        //             .state('in_fc.registration_details', {\n\t        //                 url: '/registrations',\n\t        //                 templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\n\t        //                 controller: 'RegistrationDetailsController',\n\t        //                 controllerAs: 'rdc'\n\t        //             })\n\t        //             .state('in_fc.student_coordinator', {\n\t        //                 url: '/studentCoordinator',\n\t        //                 templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\n\t        //                 controller: 'AddStudentController',\n\t        //                 controllerAs: 'ascc'\n\t        //             })\n\t        //             .state('in_fc.participant_registration', {\n\t        //                 url: '/participantRegistration',\n\t        //                 templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\n\t        //                 controller: 'ParticipantRegistrationController',\n\t        //                 controllerAs: 'prc'\n\t        //             });\n\t        //     }\n\t        // }\n\n\t        function setRoutes() {\n\t            $locationProvider.html5Mode(true);\n\t            $urlRouterProvider.when('/', '/login');\n\t            $urlRouterProvider.otherwise('/login');\n\t            $stateProvider\n\t                .state('out', {\n\t                    templateUrl: '/templates/layouts/out.html',\n\t                    resolve: {\n\t                        redirectLoggedIn: redirectLoggedIn\n\t                    }\n\t                })\n\t                .state('in_fc', {\n\t                    templateUrl: '/templates/layouts/in_fc.html',\n\t                    controller: 'FacultyLayoutController',\n\t                    controllerAs: 'flayc',\n\t                    resolve: {\n\t                        redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\n\t                    }\n\t                })\n\t                .state('in_tc', {\n\t                    controller: 'MemberLayoutController',\n\t                    controllerAs: 'mlayc',\n\t                    templateUrl: '/templates/layouts/in_tc.html',\n\t                    resolve: {\n\t                        redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\n\t                    }\n\t                })\n\t                .state('out.login', {\n\t                    url: '/login',\n\t                    templateUrl: '/templates/pages/out/login.html',\n\t                    controller: 'FacultyLoginController',\n\t                    controllerAs: 'flc'\n\t                })\n\t                .state('out.register', {\n\t                    url: '/register',\n\t                    templateUrl: '/templates/pages/out/register.html',\n\t                    controller: 'FacultyRegistrationController',\n\t                    controllerAs: 'frc'\n\t                })\n\t                .state('out.forgotPasswordApply', {\n\t                    url: '/forgotPasswordApply',\n\t                    templateUrl: '/templates/pages/out/forgotPasswordApply.html',\n\t                    controller: 'FacultyForgotPasswordApplyController',\n\t                    controllerAs: 'ffpac'\n\t                })\n\t                .state('out.forgotPasswordSet', {\n\t                    url: '/forgotPasswordSet?token&id',\n\t                    templateUrl: '/templates/pages/out/forgotPasswordSet.html',\n\t                    controller: 'FacultyForgotPasswordSetController',\n\t                    controllerAs: 'ffpsc'\n\t                })\n\t                .state('out.member_login', {\n\t                    url: '/member/login',\n\t                    templateUrl: '/templates/pages/out/member/login.html',\n\t                    controller: 'MemberLoginController',\n\t                    controllerAs: 'mlc'\n\t                })\n\t                .state('out.member_register', {\n\t                    url: '/member/register',\n\t                    templateUrl: '/templates/pages/out/member/register.html',\n\t                    controller: 'MemberRegistrationController',\n\t                    controllerAs: 'mrc'\n\t                })\n\t                .state('out.member_forgotPasswordSet', {\n\t                    url: '/member/forgotPasswordSet?token&id',\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\n\t                    controller: 'MemberForgotPasswordSetController',\n\t                    controllerAs: 'mfpsc'\n\t                })\n\t                .state('out.member_forgotPasswordApply', {\n\t                    url: '/member/forgotPasswordApply',\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\n\t                    controller: 'MemberForgotPasswordApplyController',\n\t                    controllerAs: 'mfpac'\n\t                })\n\t                .state('in_tc.verifyCoordinator', {\n\t                    url: '/member/verifyCoordinator',\n\t                    templateUrl: '/templates/pages/in/verifyCoordinator.html',\n\t                    controller: 'VerifyCoordinatorController',\n\t                    controllerAs: 'vcc'\n\t                })\n\t                .state('in_tc.collegeList', {\n\t                    url: '/member/collegeList',\n\t                    templateUrl: '/templates/pages/in/collegeList.html'\n\t                })\n\t                .state('in_tc.dashboard', {\n\t                    url: '/dashboard',\n\t                    templateUrl: '/templates/pages/in/dashboard.html',\n\t                    controller: 'DashboardController',\n\t                    controllerAs: 'dc'\n\t                })\n\t                .state('in_tc.eventRegistrations', {\n\t                    url: '/eventRegistration',\n\t                    templateUrl: '/templates/pages/in/eventRegistration.html',\n\t                    controller: 'EventRegistrationController',\n\t                    controllerAs: 'erc'\n\t                })\n\t                .state('in_tc.addEvent', {\n\t                    url: '/member/events/create',\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\n\t                    controller: 'AddEventController',\n\t                    controllerAs: 'ec',\n\t                })\n\t                .state('in_tc.settings', {\n\t                    url: '/member/settings',\n\t                    templateUrl: '/templates/pages/in/memberSettings.html',\n\t                    controller: 'MemberSettingsController',\n\t                    controllerAs: 'msc'\n\t                })\n\t                .state('in_tc.updateEvent', {\n\t                    url: '/member/events/:eventId/update',\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\n\t                    controller: 'UpdateEventController',\n\t                    controllerAs: 'ec'\n\t                })\n\t                .state('in_tc.showEvent', {\n\t                    url: '/member/events',\n\t                    templateUrl: '/templates/pages/in/showEvent.html',\n\t                    controller: 'ShowEventController',\n\t                    controllerAs: 'sec'\n\t                })\n\t                .state('in_tc.eachEvent', {\n\t                    url: '/member/events/:eventId',\n\t                    templateUrl: '/templates/pages/in/eachEvent.html',\n\t                    controller: 'EachEventController',\n\t                    controllerAs: 'eec'\n\t                })\n\t                .state('in_fc.guidelines', {\n\t                    url: '/guidelines',\n\t                    templateUrl: '/templates/pages/in/guidelines.html'\n\t                })\n\t                .state('in_fc.settings', {\n\t                    url: '/settings',\n\t                    templateUrl: '/templates/pages/in/facultySettings.html',\n\t                    controller: 'FacultySettingsController',\n\t                    controllerAs: 'fsc'\n\t                })\n\t                .state('in_fc.confirm_registration', {\n\t                    url: '/confirm/registrations',\n\t                    templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\n\t                    controller: 'ConfirmRegistrationsController1',\n\t                    controllerAs: 'crc'\n\t                })\n\t                .state('in_fc.registration_details', {\n\t                    url: '/registrations',\n\t                    templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\n\t                    controller: 'RegistrationDetailsController',\n\t                    controllerAs: 'rdc'\n\t                })\n\t                .state('in_fc.student_coordinator', {\n\t                    url: '/studentCoordinator',\n\t                    templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\n\t                    controller: 'AddStudentController',\n\t                    controllerAs: 'ascc'\n\t                })\n\t                .state('in_fc.participant_registration', {\n\t                    url: '/participantRegistration',\n\t                    templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\n\t                    controller: 'ParticipantRegistrationController',\n\t                    controllerAs: 'prc'\n\t                });\n\t        }\n\t    }\n\t    redirectFacultyNotLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$q', '$state', '$timeout', '$rootScope'];\n\n\t    function redirectFacultyNotLoggedIn(facultyAuthService, memberAuthService, $q, $state, $timeout, $rootScope) {\n\t        var defer = $q.defer();\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\n\t        if (facultyAuthenticate) {\n\t            if ($rootScope.faculty.verified !== true && !$rootScope.alreadyRedirected) {\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('in_fc.guidelines');\n\t                });\n\t            }\n\n\t            defer.resolve();\n\t        } else {\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('in_tc.dashboard');\n\t                });\n\t                defer.resolve();\n\t            } else {\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('out.login');\n\t                });\n\t                defer.reject();\n\t            }\n\t        }\n\t        return defer.promise;\n\t    }\n\n\t    redirectTeamNotLoggedIn.$inject = ['memberAuthService', 'facultyAuthService', '$q', '$state', '$timeout', '$rootScope'];\n\n\t    function redirectTeamNotLoggedIn(memberAuthService, facultyAuthService, $q, $state, $timeout, $rootScope) {\n\t        var defer = $q.defer();\n\t        var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\n\t        if (memberAuthenticate) {\n\t            defer.resolve();\n\t        } else {\n\t            var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\n\t            if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('in_fc.guidelines');\n\t                });\n\t                defer.resolve();\n\t            } else {\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('out.login');\n\t                });\n\t                defer.reject();\n\t            }\n\n\n\t        }\n\n\t        return defer.promise;\n\t    }\n\n\n\t    redirectLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$state', '$q', '$timeout', '$rootScope'];\n\n\t    function redirectLoggedIn(facultyAuthService, memberAuthService, $state, $q, $timeout, $rootScope) {\n\t        var defer = $q.defer();\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\n\t        if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\n\t            defer.reject();\n\t            $timeout(function() {\n\t                $rootScope.alreadyRedirected = true;\n\t                $state.go('in_fc.guidelines');\n\t            });\n\t        } else {\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\n\t                defer.reject();\n\t                $timeout(function() {\n\t                    $rootScope.alreadyRedirected = true;\n\t                    $state.go('in_tc.dashboard');\n\t                });\n\t            } else {\n\t                defer.resolve();\n\t            }\n\n\t        }\n\t        return defer.promise;\n\t    }\n\n\t    // redirectTeamLoggedIn.$inject = ['memberAuthService','facultyAuthService', '$state', '$q', '$timeout'];\n\t    //\n\t    // function redirectTeamLoggedIn(memberAuthService, facultyAuthService, $state, $q, $timeout) {\n\t    // \t// if(angular.isDefined($rootScope.faculty)){\n\t    // \t//\n\t    // \t// }\n\t    //\n\t    // \tvar defer = $q.defer();\n\t    // \tvar authenticate = memberAuthService.checkMemberLoggedIn();\n\t    // \tif (authenticate) {\n\t    // \t\tdefer.reject();\n\t    // \t\t$timeout(function () {\n\t    // \t\t\t$state.go('in_tc.verifyCoordinator');\n\t    // \t\t});\n\t    // \t} else {\n\t    // \t\tdefer.resolve();\n\t    // \t}\n\t    // \treturn defer.promise;\n\t    // }\n\n\t})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api')\n\t\t.factory('authInterceptor', authInterceptor);\n\n\tauthInterceptor.$inject = ['$window', '$q', '$location'];\n\n\tfunction authInterceptor($window, $q, $location) {\n\t\tvar service = {\n\t\t\trequest: request,\n\t\t\trequestError: requestError,\n\t\t\tresponse: response,\n\t\t\tresponseError: responseError\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction getToken() {\n\t\t\tif ($window.localStorage['auth-token']) {\n\t\t\t\treturn $window.localStorage['auth-token'];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tfunction request(config) {\n\t\t\tvar token = getToken();\n\t\t\tif (token !== null) {\n\t\t\t\tvar authHead = 'Bearer ' + token;\n\t\t\t\tconfig.headers['Authorization'] = authHead;\n\t\t\t}\n\t\t\t// console.log(config);\n\t\t\treturn config;\n\t\t}\n\n\t\tfunction requestError(rejection) {\n\t\t\t// console.log(\"Request Rejection\",rejection);\n\t\t\treturn $q.reject(rejection);\n\t\t}\n\n\t\tfunction response(response) {\n\t\t\t// console.log(\"response\",response);\n\t\t\treturn response || $q.when(response);\n\t\t}\n\n\t\tfunction responseError(rejection) {\n\t\t\t// console.log(\"response rejection\", rejection);\n\t\t\tif (rejection.status == 403) {\n\t\t\t\t$location.path('/login');\n\t\t\t}\n\t\t\treturn $q.reject(rejection);\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t  .module('fct.core')\n\t  .factory('eventService', eventService);\n\n\teventService.$inject = ['$http'];\n\n\tfunction eventService($http) {\n\t  var service = {\n\t    addEvent: addEvent,\n\t\t\tgetEvent: getEvent,\n\t\t\tupdateEvent: updateEvent,\n\t\t\tgetSingleEvent: getSingleEvent,\n\t\t\tdeleteEvent: deleteEvent,\n\t  };\n\n\t  return service;\n\n\t  function addEvent(eventData) {\n\t\t\treturn $http.post('/api/members/events', eventData)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t  }\n\n\t  function getEvent() {\n\t\t\treturn $http.get('/api/members/events')\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t  }\n\n\t  function getSingleEvent(id) {\n\t\t\treturn $http.get('/api/members/events/' + id)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t  }\n\n\t  function updateEvent(eventId, eventData) {\n\t\t\treturn $http.put('/api/members/events/' + eventId, eventData)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t  }\n\n\t  function deleteEvent(eventId) {\n\t\t\treturn $http.delete('/api/members/events/' + eventId)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t  }\n\n\t\tfunction resolveFunc(response) {\n\t\t\treturn response;\n\t\t}\n\n\t\tfunction rejectFunc(error) {\n\t\t\treturn error;\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api')\n\t\t.factory('facultyService', facultyService);\n\n\tfacultyService.$inject = ['$http', '$rootScope'];\n\n\tfunction facultyService($http, $rootScope) {\n\t\tvar baseLink = '/api/faculty/' + $rootScope.faculty.id;\n\n\t\tvar service = {\n\t\t\tconfirmRegistration: confirmRegistration,\n\t\t\tgetFacultyRegistrations: getFacultyRegistrations,\n\t\t\tgetStudentCoordinator: getStudentCoordinator,\n\t\t\teditStudentCoordinator: editStudentCoordinator,\n\t\t\tgetEachFaculty: getEachFaculty,\n\t\t\tupdateFaculty: updateFaculty,\n\t\t\tgetRegistrationData: getRegistrationData,\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction getEachFaculty() {\n\t\t\tvar link = baseLink + '/getEachFaculty';\n\t\t\treturn $http.get(link)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction confirmRegistration(registration) {\n\t\t\tvar link = baseLink + '/registrations/confirm';\n\t\t\treturn $http.post(link, registration)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getFacultyRegistrations() {\n\t\t\tvar link = baseLink + '/registrations';\n\t\t\treturn $http.get(link)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction get(students) {\n\t\t\tvar link = baseLink + '/studentCoordinator';\n\t\t\treturn $http.put(link, students)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction editStudentCoordinator(student) {\n\t\t\tvar link = baseLink + '/studentCoordinator';\n\t\t\treturn $http.post(link, student)\n\t\t\t\t.then(editStudentCoordinatorSuccess)\n\t\t\t\t.catch(editStudentCoordinatorFailure);\n\t\t}\n\n\t\tfunction getStudentCoordinator() {\n\t\t\tvar link = baseLink + '/studentCoordinator';\n\t\t\treturn $http.get(link)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction updateFaculty(data) {\n\t\t\tvar link = baseLink + '/updateFaculty/';\n\t\t\treturn $http.post(link, data)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getRegistrationData(data) {\n\t\t\tvar link = baseLink + '/getRegistrationData';\n\t\t\treturn $http.post(link, data)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction editStudentCoordinatorSuccess(response) {\n\t\t\t// replaceToken(response.data.token);\n\t\t\treturn response;\n\t\t}\n\n\t\tfunction editStudentCoordinatorFailure(error) {\n\t\t\treturn error;\n\t\t}\n\n\n\n\t\tfunction resolveFunc(response) {\n\t\t\treturn response;\n\t\t}\n\n\t\tfunction errorFunc(error) {\n\t\t\treturn error;\n\t\t}\n\n\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api')\n\t\t.factory('facultyAuthService', facultyAuthService);\n\n\tfacultyAuthService.$inject = ['$http', '$window', '$rootScope'];\n\n\tfunction facultyAuthService($http, $window, $rootScope) {\n\t\tvar service = {\n\t\t\tfacultyLogin: facultyLogin,\n\t\t\tfacultyRegister: facultyRegister,\n\t\t\tcheckFacultyLoggedIn: checkFacultyLoggedIn,\n\t\t\tchangeFacultyPassword: changeFacultyPassword,\n\t\t\tlogout: logout,\n\t\t\tfacultyForgotPasswordApply: facultyForgotPasswordApply,\n\t\t\tfacultyForgotPasswordSet: facultyForgotPasswordSet,\n\t\t\tgetColleges: getColleges,\n\t\t\tcheckVerified: checkVerified\n\t\t\t// editStudentCoordinator: editStudentCoordinator\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction checkFacultyLoggedIn() {\n\t\t\tvar token = getToken();\n\t\t\tvar payload;\n\t\t\tif (token) {\n\t\t\t\tpayload = token.split('.')[1];\n\t\t\t\tpayload = $window.atob(payload);\n\t\t\t\tpayload = JSON.parse(payload);\n\t\t\t\tif (angular.isDefined(payload.collegeId)) {\n\t\t\t\t\t$rootScope.faculty = {};\n\t\t\t\t\t$rootScope.faculty.email = payload.email;\n\t\t\t\t\t$rootScope.faculty.mobileno = payload.mobileno;\n\t\t\t\t\t$rootScope.faculty.name = payload.name;\n\t\t\t\t\t$rootScope.faculty.verified = payload.verified;\n\t\t\t\t\t$rootScope.faculty.rejected = payload.rejected;\n\t\t\t\t\t$rootScope.faculty.forgot_password = payload.forgot_password;\n\t\t\t\t\t$rootScope.faculty.id = payload._id;\n\t\t\t\t\t$rootScope.collegeId = payload.collegeId;\n\t\t\t\t\t// $rootScope.faculty.registrations_count = payload.registrations_count;\n\t\t\t\t\t// $rootScope.faculty.collected_amount = payload.collected_amount;\n\t\t\t\t\t// $rootScope.faculty.student_coordinator = payload.student_coordinator;\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\n\t\t\t\t\t// console.log($rootScope.faculty);\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfunction replaceToken(token) {\n\t\t\tremoveToken();\n\t\t\tsaveToken(token);\n\t\t}\n\n\n\t\tfunction saveToken(token) {\n\t\t\t$window.localStorage['auth-token'] = token;\n\t\t}\n\n\t\tfunction getToken() {\n\t\t\tif ($window.localStorage['auth-token']) {\n\t\t\t\treturn $window.localStorage['auth-token'];\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\t\t}\n\n\t\tfunction removeToken() {\n\t\t\t$window.localStorage.removeItem('auth-token');\n\t\t}\n\n\n\t\tfunction facultyLogin(user) {\n\t\t\treturn $http.post('/api/auth/faculty/login', user)\n\t\t\t\t.then(facultyLoginSuccess)\n\t\t\t\t.catch(facultyLoginFailure);\n\t\t}\n\n\t\tfunction facultyRegister(user) {\n\t\t\treturn $http.post('/api/auth/faculty/register', user)\n\t\t\t\t.then(facultyRegisterSuccess)\n\t\t\t\t.catch(facultyRegisterFailure);\n\t\t}\n\n\t\tfunction facultyRegisterSuccess(response) {\n\t\t\tsaveToken(response.data.token);\n\t\t\t$rootScope.$broadcast('SuccessFacultyRegister');\n\t\t}\n\n\t\tfunction facultyRegisterFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorFacultyRegister', error);\n\t\t}\n\n\n\t\tfunction facultyLoginSuccess(response) {\n\t\t\tsaveToken(response.data.token);\n\t\t\t$rootScope.$broadcast('SuccessFacultyLogin');\n\t\t\t// checkFacultyLoggedIn();\n\t\t}\n\n\t\tfunction facultyLoginFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorFacultyLogin', error);\n\t\t}\n\n\t\tfunction getColleges() {\n\t\t\treturn $http.get('/api/college/getAllCollege')\n\t\t\t\t.then(getCollegesSuccess)\n\t\t\t\t.catch(getCollegesFailure);\n\t\t}\n\n\t\tfunction getCollegesSuccess(response) {\n\t\t\treturn response;\n\t\t}\n\n\t\tfunction getCollegesFailure(error) {\n\t\t\treturn error;\n\t\t}\n\n\t\tfunction changeFacultyPassword(passwordObject) {\n\t\t\tif (checkFacultyLoggedIn()) {\n\t\t\t\tif ($rootScope.faculty) {\n\t\t\t\t\tpasswordObject.facultyId = $rootScope.faculty.id;\n\t\t\t\t\tvar changePasswordLink = \"/api/faculty/settings/changePassword\";\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\n\t\t\t\t\t\t.then(changePasswordSuccess)\n\t\t\t\t\t\t.catch(changePasswordFailure);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction changePasswordSuccess(response) {\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordSuccess');\n\t\t}\n\n\t\tfunction changePasswordFailure(error) {\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordFailure', error);\n\t\t}\n\n\t\tfunction facultyForgotPasswordApply(faculty) {\n\t\t\t$http.post('/api/auth/faculty/forgotPasswordApply', faculty)\n\t\t\t\t.then(facultyForgotPasswordApplySuccess)\n\t\t\t\t.catch(facultyForgotPasswordApplyFailure);\n\t\t}\n\n\t\tfunction facultyForgotPasswordApplySuccess(response) {\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\n\t\t}\n\n\t\tfunction facultyForgotPasswordApplyFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\n\t\t}\n\n\t\tfunction facultyForgotPasswordSet(faculty, id) {\n\t\t\tvar link = '/api/auth/faculty/' + id + '/forgotPasswordSet';\n\t\t\t$http.post(link, faculty)\n\t\t\t\t.then(facultyForgotPasswordSetSuccess)\n\t\t\t\t.catch(facultyForgotPasswordSetFailure);\n\t\t}\n\n\t\tfunction facultyForgotPasswordSetSuccess(response) {\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\n\t\t}\n\n\t\tfunction facultyForgotPasswordSetFailure(error) {\n\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\n\t\t}\n\n\t\tfunction logout() {\n\t\t\tremoveToken();\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\n\t\t}\n\n\t\tfunction checkVerified() {\n\t\t\tconsole.log($rootScope.faculty);\n\t\t\t$http.get('/api/faculty/check')\n\t\t\t\t.then(checkVerifiedSuccess)\n\t\t\t\t.catch(checkVerifiedFailure);\n\t\t}\n\n\t\tfunction checkVerifiedSuccess(response) {\n\t\t\tconsole.log(response);\n\t\t\treplaceToken(response.data.token);\n\t\t}\n\n\t\tfunction checkVerifiedFailure(error) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\n\n\t\tfunction functionName(error) {\n\t\t\treturn error;\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api')\n\t\t.factory('memberService', memberService);\n\n\tmemberService.$inject = ['$http', '$mdDialog'];\n\n\tfunction memberService($http, $mdDialog) {\n\t\tvar service = {\n\t\t\tgetAllFacultyCoordinators: getAllFacultyCoordinators,\n\t\t\tverifyFaculty: verifyFaculty,\n\t\t\trejectFaculty: rejectFaculty,\n\t\t\tgetTotalRegistrations: getTotalRegistrations,\n\t\t\tgetDeleteModal: getDeleteModal,\n\t\t\tgetVerifyFacultyStudent: getVerifyFacultyStudent,\n\t\t\tgetUnverifiedFaculty: getUnverifiedFaculty,\n\t\t\tgetUnconfirmedRegistration: getUnconfirmedRegistration,\n\t\t\tgetRegistrationsByEvent: getRegistrationsByEvent,\n\t\t\tgetEventRegistrationExcel: getEventRegistrationExcel,\n\t\t\tgetConfirmedRegistrationCount: getConfirmedRegistrationCount,\n\t\t\texportParticipantList: exportParticipantList,\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction getAllFacultyCoordinators() {\n\t\t\treturn $http.get('/api/members/faculty')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction verifyFaculty(id) {\n\t\t\treturn $http.patch('/api/members/faculty/verify/' + id)\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction rejectFaculty(id) {\n\t\t\treturn $http.patch('/api/members/faculty/reject/' + id)\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getTotalRegistrations() {\n\t\t\treturn $http.get('/api/members/registrations')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getRegistrationsByEvent() {\n\t\t\treturn $http.get('/api/members/registration/eventRegistrationData')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getVerifyFacultyStudent() {\n\t\t\treturn $http.get('/api/members/exportVFSList')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getUnverifiedFaculty() {\n\t\t\treturn $http.get('/api/members/exportUVFList')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getUnconfirmedRegistration() {\n\t\t\treturn $http.get('/api/members/registration/exportUnconfirmedRegistration')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getEventRegistrationExcel(request) {\n\t\t\treturn $http.post('/api/members/registrations/export', request)\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getConfirmedRegistrationCount() {\n\t\t\treturn $http.get('/api/members/registration/confirmRegistrationCount')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction exportParticipantList() {\n\t\t\treturn $http.get('/api/members/registration/exportParticipantList')\n\t\t\t\t.then(responseFunc)\n\t\t\t\t.catch(errorFunc);\n\t\t}\n\n\t\tfunction getDeleteModal() {\n\t\t\tvar confirm = $mdDialog.confirm()\n\t\t\t\t.title('Delete')\n\t\t\t\t.textContent('Are you sure you want to delete this record?')\n\t\t\t\t.ok('Confirm')\n\t\t\t\t.cancel('Cancel');\n\t\t\treturn $mdDialog.show(confirm).then(responseFunc, errorFunc);\n\t\t}\n\n\t\tfunction responseFunc(response) {\n\t\t\treturn response;\n\t\t}\n\n\t\tfunction errorFunc(error) {\n\t\t\treturn error;\n\t\t}\n\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.api')\n\t\t.factory('memberAuthService', memberAuthService);\n\n\tmemberAuthService.$inject = ['$http', '$window', '$rootScope'];\n\n\tfunction memberAuthService($http, $window, $rootScope) {\n\t\tvar service = {\n\t\t\tmemberLogin: memberLogin,\n\t\t\tmemberRegister: memberRegister,\n\t\t\tcheckMemberLoggedIn: checkMemberLoggedIn,\n\t\t\tlogout: logout,\n\t\t\tchangeMemberPassword: changeMemberPassword,\n\t\t\tmemberForgotPasswordApply: memberForgotPasswordApply,\n\t\t\tmemberForgotPasswordSet: memberForgotPasswordSet\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction checkMemberLoggedIn() {\n\t\t\tvar token = getToken();\n\t\t\tvar payload;\n\t\t\tif (token) {\n\t\t\t\tpayload = token.split('.')[1];\n\t\t\t\tpayload = $window.atob(payload);\n\t\t\t\tpayload = JSON.parse(payload);\n\n\t\t\t\tif (angular.isUndefined(payload.registrations_count)) {\n\t\t\t\t\t$rootScope.member = {};\n\t\t\t\t\t$rootScope.member.email = payload.email;\n\t\t\t\t\t$rootScope.member.mobileno = payload.mobileno;\n\t\t\t\t\t$rootScope.member.name = payload.name;\n\t\t\t\t\t$rootScope.member.forgot_password = payload.forgot_password;\n\t\t\t\t\t$rootScope.member.id = payload._id;\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\n\t\t\t\t} else {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\tfunction saveToken(token) {\n\t\t\t$window.localStorage['auth-token'] = token;\n\t\t}\n\n\t\tfunction getToken() {\n\t\t\treturn $window.localStorage['auth-token'];\n\t\t}\n\n\t\tfunction removeToken() {\n\t\t\t$window.localStorage.removeItem('auth-token');\n\t\t}\n\n\t\tfunction memberLogin(user) {\n\t\t\treturn $http.post('/api/auth/member/login', user)\n\t\t\t\t.then(memberLoginSuccess)\n\t\t\t\t.catch(memberLoginFailure);\n\t\t}\n\n\t\tfunction memberRegister(user) {\n\t\t\treturn $http.post('/api/auth/member/register', user)\n\t\t\t\t.then(memberRegisterSuccess)\n\t\t\t\t.catch(memberRegisterFailure);\n\t\t}\n\n\t\tfunction memberRegisterSuccess(response) {\n\t\t\tsaveToken(response.data.token);\n\t\t\t$rootScope.$broadcast('SuccessMemberRegister');\n\t\t}\n\n\t\tfunction memberRegisterFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorMemberRegister', error);\n\t\t}\n\n\t\tfunction memberLoginSuccess(response) {\n\t\t\tsaveToken(response.data.token);\n\t\t\t$rootScope.$broadcast('SuccessMemberLogin');\n\t\t}\n\n\t\tfunction memberLoginFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorMemberLogin', error);\n\t\t}\n\n\t\tfunction memberForgotPasswordApply(member) {\n\t\t\t$http.post('/api/auth/member/forgotPasswordApply', member)\n\t\t\t\t.then(memberForgotPasswordApplySuccess)\n\t\t\t\t.catch(memberForgotPasswordApplyFailure);\n\t\t}\n\n\t\tfunction memberForgotPasswordApplySuccess(response) {\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordApply');\n\t\t}\n\n\t\tfunction memberForgotPasswordApplyFailure(error) {\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordApply', error);\n\t\t}\n\n\t\tfunction memberForgotPasswordSet(member, id) {\n\t\t\tvar link = '/api/auth/member/' + id + '/forgotPasswordSet';\n\t\t\t$http.post(link, member)\n\t\t\t\t.then(memberForgotPasswordSetSuccess)\n\t\t\t\t.catch(memberForgotPasswordSetFailure);\n\t\t}\n\n\t\tfunction memberForgotPasswordSetSuccess(response) {\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordSet');\n\t\t}\n\n\t\tfunction memberForgotPasswordSetFailure() {\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordSet', error);\n\t\t}\n\n\t\tfunction changeMemberPassword(passwordObject) {\n\t\t\tif (checkMemberLoggedIn()) {\n\t\t\t\tif ($rootScope.member) {\n\t\t\t\t\tpasswordObject.memberId = $rootScope.member.id;\n\t\t\t\t\tvar changePasswordLink = \"/api/members/settings/changePassword\";\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\n\t\t\t\t\t\t.then(changePasswordSuccess)\n\t\t\t\t\t\t.catch(changePasswordFailure);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction changePasswordSuccess(response) {\n\t\t\t$rootScope.$broadcast('MemberChangePasswordSuccess');\n\t\t}\n\n\t\tfunction changePasswordFailure(error) {\n\t\t\tconsole.log(error);\n\t\t\t$rootScope.$broadcast('MemberChangePasswordFailure', error);\n\t\t}\n\n\t\tfunction logout() {\n\t\t\tremoveToken();\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.factory('fctToast', fctToast);\n\n\tfctToast.$inject = ['$mdToast'];\n\n\tfunction fctToast($mdToast) {\n\t\tvar service = {\n\t\t\tshowToast: showToast\n\t\t};\n\n\t\treturn service;\n\n\t\tfunction showToast(data, success) {\n\t\t\tvar toasterClass = 'md-toast-warn';\n\n\t\t\tif (success) {\n\t\t\t\ttoasterClass = 'md-toast-success';\n\t\t\t}\n\n\t\t\tvar toaster = $mdToast.simple()\n\t\t\t\t.textContent(data)\n\t\t\t\t.position('bottom right')\n\t\t\t\t.hideDelay(3000)\n\t\t\t\t.toastClass(toasterClass);\n\t\t\t$mdToast.show(toaster);\n\t\t}\n\t}\n})();\n","(function () {\n  'use strict';\n\n  angular\n    .module('fct.core')\n    .directive('eventCard', eventCard);\n\n  eventCard.$inject = [];\n\n  function eventCard() {\n    var directive = {\n          restrict: 'E',\n          templateUrl: '/templates/components/cards/eventCard.html',\n          link: linkFunc,\n          scope: {\n              eventdata : '=',\n              reload : '&'\n          },\n          controller: 'EventCardController',\n          controllerAs: 'ecc'\n      };\n\n      return directive;\n\n      function linkFunc($scope) {\n          $scope.openCard = false;\n          $scope.caret = 'expand_less';\n          $scope.toggleCard = toggleCard;\n\n          function toggleCard() {\n              $scope.openCard = !($scope.openCard);\n              if($scope.openCard === true){\n                  $scope.caret = 'expand_more';\n              }\n              else {\n                  $scope.caret = 'expand_less';\n              }\n          }\n      }\n\n  }\n\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t.module('fct.core')\n\t.directive('fileUpload', fileUpload);\n\n\tfileUpload.$inject = ['$timeout'];\n\n\tfunction fileUpload($timeout) {\n        return {\n            restrict: 'E',\n            template: '<div ng-transclude></div>',\n            replace: true,\n            transclude: true,\n            scope: {\n                headers: '=',\n                ngModel: '=',\n                disabled: '='\n            },\n            require: 'ngModel',\n            link: function (scope, el, attr) {\n                var fileName,\n                    shareCredentials,\n                    withPreview,\n                    fileSelector,\n                    resize,\n                    maxWidth,\n                    maxHeight,\n                    sel;\n\n                fileName = attr.name || 'userFile';\n                shareCredentials = attr.credentials === 'true';\n                withPreview = attr.preview === 'true';\n                resize = attr.resize === 'true';\n                maxWidth = angular.isDefined(attr.maxWidth) ? parseInt(attr.maxWidth) : false;\n                maxHeight = angular.isDefined(attr.maxHeight) ? parseInt(attr.maxHeight) : false;\n                fileSelector = angular.isDefined(attr.fileSelector) ? attr.fileSelector : false;\n\n                el.append('<input style=\"display: none !important;\" type=\"file\" ' + (attr.multiple == 'true' ? 'multiple' : '') + ' accept=\"' + (attr.accept ? attr.accept : '') + '\" name=\"' + fileName + '\"/>');\n\n                function Resize(file, index, type) {\n                    var canvas = document.createElement(\"canvas\");\n                    var img = document.createElement(\"img\");\n                    var reader = new FileReader();\n                    reader.onload = function (e) {\n                        img.src = e.target.result;\n                        draw();\n                    };\n                    reader.readAsDataURL(file);\n\n                    function b64toBlob(b64Data, contentType, sliceSize) {\n                        contentType = contentType || '';\n                        sliceSize = sliceSize || 512;\n\n                        var byteCharacters = atob(b64Data);\n                        var byteArrays = [];\n\n                        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\n                            var slice = byteCharacters.slice(offset, offset + sliceSize);\n\n                            var byteNumbers = new Array(slice.length);\n                            for (var i = 0; i < slice.length; i++) {\n                                byteNumbers[i] = slice.charCodeAt(i);\n                            }\n\n                            var byteArray = new Uint8Array(byteNumbers);\n\n                            byteArrays.push(byteArray);\n                        }\n\n                        var blob = new Blob(byteArrays, {type: contentType});\n                        return blob;\n                    }\n\n                    function draw() {\n                        var width = img.width;\n                        var height = img.height;\n                        var ctx = canvas.getContext(\"2d\");\n                        ctx.drawImage(img, 0, 0);\n\n                        if (width > 0 && height > 0) {\n                            if (width > height) {\n                                if (width > maxWidth) {\n                                    height *= maxWidth / width;\n                                    width = maxWidth;\n                                }\n                            } else {\n                                if (height > maxHeight) {\n                                    width *= maxHeight / height;\n                                    height = maxHeight;\n                                }\n                            }\n\n                            canvas.width = width;\n                            canvas.height = height;\n                            ctx.drawImage(img, 0, 0, width, height);\n                            var b64 = canvas.toDataURL(type).split(',')[1];\n                            file = b64toBlob(b64, type, 512);\n                        }\n\n                        uploadFile(file, index);\n                    }\n                }\n\n                function upload(fileProperties, index, file) {\n                    if (resize && maxWidth && maxHeight && (file.type.indexOf('image/') !== -1)) {\n                        Resize(file, index, file.type);\n                    } else {\n                        uploadFile(file, index);\n                    }\n                    return angular.extend(scope.ngModel[index], {\n                        name: fileProperties.name,\n                        size: fileProperties.size,\n                        type: fileProperties.type,\n                        status: {},\n                        percent: 0,\n                        preview: null\n                    });\n                }\n\n                function uploadFile(file, index) {\n                    var xhr = new XMLHttpRequest(),\n                        fd = new FormData(),\n                        progress = 0,\n                        uri = attr.uri || '/upload/upload';\n                    xhr.open('POST', uri, true);\n                    xhr.withCredentials = shareCredentials;\n                    if (scope.headers) {\n                        scope.headers.forEach(function (item) {\n                            xhr.setRequestHeader(item.header, item.value);\n                        });\n                    }\n                    xhr.onreadystatechange = function () {\n                        scope.ngModel[index].status = {\n                            code: xhr.status,\n                            statusText: xhr.statusText,\n                            response: xhr.response\n                        };\n                        scope.$apply();\n                    };\n                    xhr.upload.addEventListener(\"progress\", function (e) {\n                        progress = parseInt(e.loaded / e.total * 100);\n                        scope.ngModel[index].percent = progress;\n                        scope.$apply();\n                    }, false);\n\n                    fd.append(fileName, file);\n                    xhr.send(fd);\n\n                    if (withPreview) {\n                        var reader = new FileReader();\n                        reader.onload = function (e) {\n                            scope.ngModel[index].preview = e.target.result;\n                            scope.$apply();\n                        };\n                        reader.readAsDataURL(file);\n                    }\n                }\n\n                $timeout(function () {\n                    sel = fileSelector ? angular.element(el[0].querySelectorAll(fileSelector)[0]) : el;\n                    sel.bind('click', function () {\n                        if (!scope.disabled) {\n                            scope.$eval(el.find('input')[0].click());\n                        }\n                    });\n                });\n\n                angular.element(el.find('input')[0]).bind('change', function (e) {\n                    var files = e.target.files;\n                    if (!angular.isDefined(scope.ngModel) || attr.multiple === 'true') {\n                        scope.ngModel = [];\n                    }\n                    var f;\n                    for (var i = 0; i < files.length; i++) {\n                        f = {\n                            name: files[i].name,\n                            size: files[i].size,\n                            type: files[i].type,\n                            status: {},\n                            percent: 0,\n                            preview: null\n                        };\n                        scope.ngModel.push(f);\n                        upload(f, i, files[i]);\n                    }\n                    scope.$apply();\n                });\n            }\n        };\n    }\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('ConfirmRegistrationModalController', ConfirmRegistrationModalController);\n\n\tConfirmRegistrationModalController.$inject = ['$mdDialog', 'registration', 'facultyService'];\n\n\tfunction ConfirmRegistrationModalController($mdDialog, registration, facultyService) {\n\t\tvar vm = this;\n\t\tvm.registration = registration;\n\t\tvm.registrationButtonClicked = false;\n\n\t\tangular.extend(vm, {\n\t\t\tconfirmData: confirmData,\n\t\t\thide: hide,\n\t\t\tcancel: cancel\n\t\t});\n\n\t\tfunction confirmData() {\n\t\t\tif (vm.registrationButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.registrationButtonClicked = true;\n\t\t\t}\n\n\t\t\treturn facultyService.confirmRegistration(registration)\n\t\t\t\t.then(confirmRegistrationSuccess)\n\t\t\t\t.catch(confirmRegistrationFailure);\n\t\t}\n\n\t\tfunction confirmRegistrationSuccess(response) {\n\t\t\tconsole.log(response);\n\t\t\thide(response);\n\t\t}\n\n\t\tfunction confirmRegistrationFailure(error) {\n\t\t\t$mdDialog.cancel(error);\n\t\t}\n\n\t\tfunction hide(response) {\n\t\t\t$mdDialog.hide(response);\n\t\t}\n\n\t\tfunction cancel() {\n\t\t\t$mdDialog.cancel();\n\t\t}\n\t}\n\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('AddStudentController', AddStudentController);\n\n\tAddStudentController.$inject = ['$http', 'facultyService', '$rootScope', 'fctToast'];\n\n\tfunction AddStudentController($http, facultyService, $rootScope, fctToast) {\n\t\tvar vm = this;\n\t\tvm.coordinator = {};\n\t\tvm.editInfo = false;\n\t\tvm.preInfo = false;\n\t\tvm.updateButtonClicked = false;\n\t\tvm.addButtonClicked = false;\n\n\t\tangular.extend(vm, {\n\t\t\tupdate: update,\n\t\t\taddStudentCoordinator: addStudentCoordinator,\n\t\t\tedit: edit\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\treturn facultyService.getStudentCoordinator()\n\t\t\t\t.then(getStudentCoordinatorSuccess)\n\t\t\t\t.catch(getStudentCoordinatorFailure);\n\n\t\t}\n\n\t\tfunction getStudentCoordinatorSuccess(response) {\n\t\t\tif (response.data.student_coordinator) {\n\t\t\t\tvm.coordinator = response.data.student_coordinator;\n\t\t\t\tvm.preInfo = true;\n\t\t\t} else {\n\t\t\t\tvm.editInfo = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getStudentCoordinatorFailure(error) {\n\t\t\t// console.log(error);\n\t\t}\n\n\t\tfunction update(event) {\n\t\t\tvm.updateButtonClicked = true;\n\t\t\treturn facultyService.editStudentCoordinator({\n\t\t\t\t\tstudent_coordinator: vm.coordinator\n\t\t\t\t})\n\t\t\t\t.then(editStudentCoordinatorSuccess)\n\t\t\t\t.catch(editStudentCoordinatorFailure);\n\t\t}\n\n\t\tfunction edit() {\n\t\t\tvm.editInfo = true;\n\t\t}\n\n\t\tfunction addStudentCoordinator(event) {\n\t\t\tvm.addButtonClicked = true;\n\t\t\treturn facultyService.editStudentCoordinator({\n\t\t\t\t\tstudent_coordinator: vm.coordinator\n\t\t\t\t})\n\t\t\t\t.then(addStudentCoordinatorSuccess)\n\t\t\t\t.catch(editStudentCoordinatorFailure);\n\t\t}\n\n\t\tfunction addStudentCoordinatorSuccess(response) {\n\t\t\tvm.preInfo = true;\n\t\t\tvm.editInfo = false;\n\t\t\tvm.addButtonClicked = false;\n\t\t\tfctToast.showToast('Student Coordinator Details Added Successfuly', true);\n\t\t}\n\n\t\tfunction editStudentCoordinatorSuccess(response) {\n\t\t\tvm.editInfo = false;\n\t\t\tvm.updateButtonClicked = false;\n\t\t\tfctToast.showToast('Student Coordinator Details Updated Successfuly', true);\n\t\t}\n\n\t\tfunction editStudentCoordinatorFailure(error) {\n\t\t\tvm.editInfo = false;\n\t\t\tvm.addButtonClicked = false;\n\t\t\tvm.updateButtonClicked = false;\n\t\t\tfctToast.showToast('Error!! Try Again');\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('ConfirmRegistrationsController', ConfirmRegistrationsController);\n\n\tConfirmRegistrationsController.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\n\n\tfunction ConfirmRegistrationsController(facultyService, $mdDialog, fctToast, $scope) {\n\t\tvar vm = this;\n\t\tvm.registration = {};\n\t\tvm.registrationButtonClicked = false;\n\t\tangular.extend(vm, {\n\t\t\tconfirmRegistration: confirmRegistration\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction getFacultyRegistrationData() {\n\n\t\t}\n\n\t\tfunction confirmRegistration(event) {\n\t\t\tif (vm.registrationButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.registrationButtonClicked = true;\n\t\t\t}\n\n\t\t\t// return\n\t\t\tvar confirm = $mdDialog.prompt()\n\t\t\t\t.title('Enter SERIAL ID')\n\t\t\t\t.textContent('Enter the serial id provided in ther Registration Slip')\n\t\t\t\t.placeholder('Serial Id')\n\t\t\t\t.ariaLabel('Serial Id')\n\t\t\t\t.targetEvent(event)\n\t\t\t\t.theme('normal')\n\t\t\t\t.ok('Submit')\n\t\t\t\t.cancel('Cancel');\n\n\t\t\t$mdDialog.show(confirm).then(function (result) {\n\t\t\t\tvm.registration.serialId = result;\n\t\t\t\treturn facultyService.confirmRegistration(vm.registration)\n\t\t\t\t\t.then(confirmRegistrationSuccess)\n\t\t\t\t\t.catch(confirmRegistrationFailure);\n\t\t\t}, function () {\n\t\t\t\tvm.registrationButtonClicked = false;\n\t\t\t});\n\t\t}\n\n\t\tfunction confirmRegistrationSuccess(response) {\n\t\t\tconsole.log(response);\n\t\t\tvm.registrationButtonClicked = false;\n\t\t\tvm.registration = {};\n\t\t\t$scope.confirmRegistrationForm.$setPristine();\n\t\t\t$scope.confirmRegistrationForm.$setUntouched();\n\n\t\t\tvar msg;\n\n\t\t\tif (response.status == 400) {\n\t\t\t\tmsg = response.data.error.for;\n\t\t\t\tfctToast.showToast(msg);\n\t\t\t}\n\n\t\t\tif (msg) {\n\t\t\t\tmsg = response.data.message;\n\t\t\t\tfctToast.showToast(msg, true);\n\t\t\t}\n\t\t}\n\n\t\tfunction confirmRegistrationFailure(error) {\n\t\t\tvar msg;\n\n\t\t\tif (error.status == 500) {\n\t\t\t\tmsg = 'Internal server error, try again !!';\n\t\t\t} else {\n\t\t\t\tmsg = error.data.error.for;\n\t\t\t}\n\n\t\t\tvm.registrationButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t}\n\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('ConfirmRegistrationsController1', ConfirmRegistrationsController1);\n\n\tConfirmRegistrationsController1.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\n\n\tfunction ConfirmRegistrationsController1(facultyService, $mdDialog, fctToast, $scope) {\n\t\tvar vm = this;\n\t\tvm.registration = {};\n\t\tvm.registrationButtonClicked = false;\n\t\tangular.extend(vm, {\n\t\t\t// confirmRegistration: confirmRegistration,\n\t\t\tgetRegistrationData: getRegistrationData\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction getFacultyRegistrationData() {\n\n\t\t}\n\n\n\n\t\tfunction confirmRegistrationSuccess(response) {\n\t\t\tconsole.log(response);\n\t\t\tvm.registrationButtonClicked = false;\n\n\n\t\t\tvar msg;\n\n\t\t\tif (response.status == 400) {\n\t\t\t\tmsg = response.data.error.for;\n\t\t\t\tfctToast.showToast(msg);\n\t\t\t}\n\n\t\t\tif (response.status == 200) {\n\t\t\t\tmsg = response.data.message;\n\t\t\t\tfctToast.showToast(msg, true);\n\t\t\t\tvm.registration = {};\n\t\t\t\t$scope.confirmRegistrationForm.$setPristine();\n\t\t\t\t$scope.confirmRegistrationForm.$setUntouched();\n\n\t\t\t} else if (response.status == 404) {\n\t\t\t\tvm.registration = {};\n\t\t\t\tfctToast.showToast(\"REGISTRAION NOT FOUND\");\n\t\t\t} else if (response.status == 405) {\n\t\t\t\tvm.registration = {};\n\t\t\t\tfctToast.showToast(\"REGISTRAION CONFIRMED ALREADY\", true);\n\t\t\t} else {\n\t\t\t\tvm.registration = {};\n\t\t\t\tfctToast.showToast(\"ERROR PLEASE TRY AGAIN\", true);\n\t\t\t}\n\n\t\t}\n\t\t//\n\t\tfunction confirmRegistrationFailure(error) {\n\t\t\tvar msg;\n\t\t\tvm.registration = {};\n\t\t\tif (error.status == 500) {\n\t\t\t\tmsg = 'Internal server error, try again !!';\n\t\t\t} else {\n\t\t\t\tmsg = error.data.error.for;\n\t\t\t}\n\n\t\t\tvm.registrationButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t}\n\n\t\tfunction getRegistrationData() {\n\t\t\tif (vm.registrationButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.registrationButtonClicked = true;\n\t\t\t}\n\n\t\t\tfacultyService.getRegistrationData(vm.registration)\n\t\t\t\t.then(getRegistrationDataSuccess)\n\t\t\t\t.catch(getRegistrationDataFailure);\n\t\t}\n\n\t\tfunction getRegistrationDataFailure(error) {\n\t\t\tfctToast.showToast(\"Internet Error, Please Try Again\");\n\t\t\tvm.registration = {};\n\t\t\tvm.registrationButtonClicked = false;\n\t\t}\n\n\t\tfunction getRegistrationDataSuccess(response) {\n\t\t\t// console.log(response);\n\t\t\tif (response.status == 200) {\n\t\t\t\tvm.registration.teamId = response.data.teamId;\n\t\t\t\tvm.registration.email = response.data.email;\n\t\t\t\tvm.registration.mobileno = response.data.mobileno;\n\t\t\t\tvm.registration.serialId = response.data.serialId;\n\n\t\t\t\t$mdDialog.show({\n\t\t\t\t\t\ttemplateUrl: './templates/components/dialogs/confirmDetailDialog.html',\n\t\t\t\t\t\tcontroller: 'ConfirmRegistrationModalController',\n\t\t\t\t\t\tcontrollerAs: 'crmc',\n\t\t\t\t\t\tlocals: {\n\t\t\t\t\t\t\tregistration: vm.registration\n\t\t\t\t\t\t},\n\t\t\t\t\t\tclickOutsideToClose: true,\n\t\t\t\t\t\tfullscreen: true\n\t\t\t\t\t})\n\t\t\t\t\t.then(confirmRegistrationSuccess)\n\t\t\t\t\t.catch(confirmRegistrationFailure);\n\t\t\t} else {\n\t\t\t\tfctToast.showToast(\"Registration Not Found\");\n\t\t\t\tvm.registrationButtonClicked = false;\n\t\t\t\tvm.registration = {};\n\t\t\t}\n\t\t}\n\n\n\t}\n\n\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultySettingsController', FacultySettingsController);\n\n\tFacultySettingsController.$inject = ['facultyAuthService', 'fctToast', '$scope', '$rootScope', '$timeout', 'facultyService'];\n\n\tfunction FacultySettingsController(facultyAuthService, fctToast, $scope, $rootScope, $timeout, facultyService) {\n\t\tvar vm = this;\n\t\tvm.updateInfo = false;\n\t\t$scope.changePasswordForm = {};\n\t\tvm.user = {};\n\t\tvm.userDetail = {};\n\t\tvm.updateButtonClicked = false;\n\n\t\tangular.extend(vm, {\n\t\t\tchangePassword: changePassword,\n\t\t\tupdateFaculty: updateFaculty,\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\tgetEachFaculty();\n\t\t}\n\n\t\tfunction getEachFaculty() {\n\t\t\treturn facultyService.getEachFaculty()\n\t\t\t.then(function (response) {\n\t\t\t\tconsole.log(response);\n\t\t\t\tvm.userDetail.email = response.data.email;\n\t\t\t\tvm.userDetail.mobileno = parseInt(response.data.mobileno);\n\t\t\t\tvm.userDetail.name = response.data.name;\n\t\t\t\tvm.preInfo = true;\n\t\t\t}).catch(function (error) {\n\t\t\t\tconsole.log(error);\n\t\t\t});\n\t\t}\n\n\t\tfunction updateFaculty() {\n\t\t\tif (vm.updating) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.updating = true;\n\t\t\t\tvm.updateButtonClicked = true;\n\t\t\t\treturn facultyService.updateFaculty(vm.userDetail)\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tvm.userDetail = response.data;\n\t\t\t\t\tvm.updateButtonClicked = false;\n\t\t\t\t\tvm.updating = false;\n\t\t\t\t\tvm.editInfo = false;\n\t\t\t\t\tgetEachFaculty();\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tvm.updateButtonClicked = false;\n\t\t\t\t\tvm.updating = false;\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t\t}\n\t\t}\n\n\t\tfunction changePassword(event) {\n\t\t\tif (vm.updateInfo) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.updateInfo = true;\n\t\t\t\tfacultyAuthService.changeFacultyPassword(vm.user);\n\t\t\t}\n\t\t}\n\n\t\t$rootScope.$on('FacultyChangePasswordSuccess', FacultyChangePasswordSuccess);\n\t\t$rootScope.$on('FacultyChangePasswordFailure', FacultyChangePasswordFailure);\n\n\t\tfunction FacultyChangePasswordSuccess(event) {\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\n\t\t\t$timeout(function () {\n\t\t\t\tresetForm();\n\t\t\t});\n\n\t\t}\n\n\t\tfunction FacultyChangePasswordFailure(event, error) {\n\t\t\tfctToast.showToast(error.data.message);\n\t\t\t$timeout(function () {\n\t\t\t\tresetForm();\n\t\t\t});\n\t\t}\n\n\t\tfunction resetForm() {\n\t\t\tvm.user = {};\n\t\t\tvm.updateInfo = false;\n\t\t\t$scope.changePasswordForm.$setUntouched();\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('RegistrationDetailsController', RegistrationDetailsController);\n\n\tRegistrationDetailsController.$inject = ['fctToast', '$rootScope', 'facultyService'];\n\n\tfunction RegistrationDetailsController(fctToast, $rootScope, facultyService) {\n\t\tvar vm = this;\n\t\tvm.noregistration = true;\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\treturn facultyService.getFacultyRegistrations()\n\t\t\t\t.then(getRegistrationsSuccess)\n\t\t\t\t.catch(getRegistrationsFailure);\n\t\t}\n\n\t\tfunction getRegistrationsSuccess(response) {\n\n\t\t\tif (response.data.registrations.length !== 0) {\n\t\t\t\tvm.registrations = response.data.registrations;\n\t\t\t\tvm.registrations_count = response.data.totalRegistrations;\n\t\t\t\tvm.collected_amount = response.data.totalCollectedAmount;\n\t\t\t\tvm.noregistration = false;\n\t\t\t} else {\n\t\t\t\tvm.noregistration = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction getRegistrationsFailure(error) {\n\t\t\tfctToast.showToast('Internal Server Error');\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('VerifyCoordinatorController', VerifyCoordinatorController);\n\n\tVerifyCoordinatorController.$inject = ['$scope', 'memberService', '$mdDialog'];\n\n\tfunction VerifyCoordinatorController($scope, memberService, $mdDialog) {\n\t\tvar vm = this;\n\t\tvm.limitFaculty = 5;\n\t\tvm.nomoreFaculty = true;\n\t\tvm.orderField = 'registrations_count';\n\t\tvm.reverseSort = true;\n\n\t\tangular.extend(vm, {\n\t\t\tverifyFaculty: verifyFaculty,\n\t\t\trejectFaculty: rejectFaculty,\n\t\t\tloadmore: loadmore\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\treturn memberService.getAllFacultyCoordinators()\n\t\t\t\t.then(getAllFacultyCoordinatorsSuccess)\n\t\t\t\t.catch(getAllFacultyCoordinatorsFailure);\n\t\t}\n\n\n\t\tfunction getAllFacultyCoordinatorsSuccess(response) {console.log(response);\n\t\t\tvm.faculties = response.data;\n\t\t\t// console.log(vm.faculties);\n\t\t\tif (vm.limitFaculty <= vm.faculties.length) {\n\t\t\t\tvm.nomoreFaculty = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction getAllFacultyCoordinatorsFailure(error) {\n\t\t\t//State go to Add Events\n\t\t\t//Dashboard\n\t\t\t// console.log(error);\n\t\t}\n\n\t\tfunction verifyFaculty(id, index, event) {\n\t\t\tvm.verifyingIndex = index;\n\t\t\tvar confirm = $mdDialog.confirm()\n\t\t\t\t.title('Are you sure?')\n\t\t\t\t.textContent('You will be Verifying ' + vm.faculties[index].name + ' as a Faculty Coordinator')\n\t\t\t\t.ariaLabel('FCVER')\n\t\t\t\t.targetEvent(event)\n\t\t\t\t.ok('Confirm Verification')\n\t\t\t\t.theme('normal')\n\t\t\t\t.cancel('No, not now !!!');\n\t\t\t$mdDialog.show(confirm).then(function () {\n\t\t\t\treturn memberService.verifyFaculty(id)\n\t\t\t\t\t.then(verifyFacultySuccess)\n\t\t\t\t\t.catch(verifyFacultyFailure);\n\t\t\t}, function () {\n\t\t\t\t//failed\n\t\t\t});\n\t\t}\n\n\t\tfunction verifyFacultySuccess(response) {\n\t\t\tvm.faculties[vm.verifyingIndex].verified = true;\n\t\t}\n\n\t\tfunction verifyFacultyFailure(error) {\n\t\t\t//fctToast.show('FAilure');\n\t\t}\n\n\t\tfunction rejectFaculty(id, index, event) {\n\t\t\tvm.rejectionIndex = index;\n\t\t\tvar confirm = $mdDialog.confirm()\n\t\t\t\t.title('Are you sure?')\n\t\t\t\t.textContent('You will be Rejecting ' + vm.faculties[index].name + ' as a Faculty Coordinator')\n\t\t\t\t.ariaLabel('FCVER')\n\t\t\t\t.targetEvent(event)\n\t\t\t\t.ok('Confirm Rejection')\n\t\t\t\t.theme('normal')\n\t\t\t\t.cancel('No, not now !!!');\n\t\t\t$mdDialog.show(confirm).then(function () {\n\t\t\t\treturn memberService.rejectFaculty(id)\n\t\t\t\t\t.then(rejectFacultySuccess)\n\t\t\t\t\t.catch(rejectFacultyFailure);\n\t\t\t}, function () {\n\t\t\t\t//failed\n\t\t\t});\n\t\t}\n\n\t\tfunction rejectFacultySuccess(response) {\n\t\t\tvm.faculties[vm.rejectionIndex].rejected = true;\n\t\t\tvm.faculties.splice(vm.rejectionIndex, 1);\n\t\t\tconsole.log(response);\n\t\t}\n\n\t\tfunction rejectFacultyFailure(error) {\n\t\t\t//fctToast.show('FAilure');\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tfunction loadmore() {\n\t\t\tvm.limitFaculty += 5;\n\t\t\tif (vm.limitFaculty >= vm.faculties.length) {\n\t\t\t\tvm.nomoreFaculty = true;\n\t\t\t}\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('AddEventController', AddEventController);\n\n\tAddEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$timeout', 'Upload', '$state', 'fctToast', '$filter', 'memberService'];\n\n\tfunction AddEventController(stateParams, eventService, $rootScope, $timeout, Upload, $state, fctToast, $filter, memberService) {\n\t\tvar vm = this;\n\t\tvm.isUpdate = false;\n\t\tvm.myEvent = {\n\t\t\t'managers': [],\n\t\t\t'event': \"Add\",\n\t\t};\n\t\tvm.myEvent.attachments = [];\n\t\tvm.files = [];\n\t\tvm.image = '';\n\t\tvm.myEvent.image = null;\n\n\t\tangular.extend(vm, {\n\t\t\tsave: save,\n\t\t\topenManagersModal: openManagersModal,\n\t\t\tuploadFiles: uploadFiles,\n\t\t\tfeeTypeChanged: feeTypeChanged,\n\t\t\tuploadImage: uploadImage,\n\t\t\tuploadIconImage: uploadIconImage,\n\t\t\tdoneLoading: doneLoading,\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\t//memberService.initializeCKEditor();\n\t\t}\n\n\t\tfunction doneLoading() {}\n\n\t\tfunction openManagersModal(total) {\n\t\t\tvm.myEvent.managers = [];\n\t\t\twhile (total > 0) {\n\t\t\t\tvar each = {\n\t\t\t\t\t\"index\": 1\n\t\t\t\t};\n\t\t\t\tvm.myEvent.managers.push(each);\n\t\t\t\ttotal--;\n\t\t\t}\n\t\t}\n\n\t\tfunction feeTypeChanged() {\n\t\t\tswitch (vm.myEvent.fees_type) {\n\t\t\tcase \"no_payment\":\n\t\t\t\tvm.myEvent.fees = 0;\n\t\t\t\tvm.feeDisabled = true;\n\t\t\t\tvm.myEvent.do_payment = false;\n\t\t\t\tbreak;\n\t\t\tcase \"do_payment\":\n\t\t\t\tvm.myEvent.do_payment = true;\n\t\t\t\tbreak;\n\t\t\tcase \"late_payment\":\n\t\t\t\tvm.myEvent.do_payment = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction save() {\n\t\t\t// vm.myEvent.rules = CKEDITOR.instances[\"editorRules\"].getData();\n\t\t\t// vm.myEvent.specification = CKEDITOR.instances[\"editorSpecification\"].getData();\n\t\t\t// vm.myEvent.judging_criteria = CKEDITOR.instances[\"editorJudgingCriteria\"].getData();\n\t\t\tconsole.log(vm.myEvent);\n\t\t\tif (vm.myEvent.isUpdate) {\n\t\t\t\treturn eventService.updateEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\n\t\t\t} else {\n\t\t\t\treturn eventService.addEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\n\t\t\t}\n\t\t}\n\n\t\tfunction registerSuccess(event) {\n\t\t\tfctToast.showToast(\"Event Registered.\", true);\n\t\t\t$timeout(function () {\n\t\t\t\t$state.go('in_tc.showEvent');\n\t\t\t});\n\t\t}\n\n\t\tfunction registerFailure(event, error) {\n\t\t\tfctToast.showToast(error.data.message);\n\t\t}\n\n\t\tfunction uploadFiles(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tvm.files.push(file);\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/upload',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tfile.result = response.data;\n\t\t\t\t\t\tvar attach = {\n\t\t\t\t\t\t\tdoc_name: file.name,\n\t\t\t\t\t\t\tlink: file.dest,\n\t\t\t\t\t\t};\n\t\t\t\t\t\tvm.myEvent.attachments.push(attach);\n\t\t\t\t\t\tconsole.log(attach);\n\t\t\t\t\t});\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0)\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\n\n\t\t}\n\n\t\tfunction uploadImage(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/uploadImage',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\treponse.log(response);\n\t\t\t\t\tvm.myEvent.event_image = response.data.path;\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0) {\n\t\t\t\t\t\t//console.log(reponse);\n\t\t\t\t\t}\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction uploadIconImage(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/uploadIconImage',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\treponse.log(response);\n\t\t\t\t\tvm.myEvent.event_icon_image = response.data.path;\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0) {\n\t\t\t\t\t\t//console.log(reponse);\n\t\t\t\t\t}\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\t\t} //dfdf//sdf=\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('DashboardController', DashboardController);\n\n\tDashboardController.$inject = ['$rootScope', 'memberService', '$window'];\n\n\tfunction DashboardController($rootScope, memberService, $window) {\n\t\tvar vm = this;\n\t\tvm.confirmedCount = 0;\n\t\tvm.unConfirmedCount = 0;\n\t\tvm.totalConfirmedParticipants = 0;\n\t\tvm.totalAmountCollected = 0;\n\n\t\tangular.extend(vm, {\n\t\t\tgetVFS: getVFS,\n\t\t\tgetUVF: getUVF\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\tgetVFS();\n\t\t\tgetUVF();\n\t\t\tgetConfirmedRegistrationCount();\n\t\t\tgetRegistrationData();\n\t\t\t// exportParticipantList();\n\t\t}\n\n\t\tfunction getRegistrationData() {\n\t\t\treturn memberService.getRegistrationsByEvent()\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tvar array = response.data;\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\tvar each = 0;\n\t\t\t\t\tvar index = 0;\n\t\t\t\t\tfor (index = 0; index < array.length; index++) {\n\t\t\t\t\t\teach += parseInt(array[index].unconfirmed_registrations);\n\t\t\t\t\t}\n\t\t\t\t}).catch(function (error) {\n\t\t\t\t\t// console.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getVFS() {\n\t\t\treturn memberService.getVerifyFacultyStudent()\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tvm.VFSPath = response.data.path;\n\t\t\t\t\t// $window.open(response.data.path);\n\t\t\t\t\t//console.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\t//console.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getUVF() {\n\t\t\treturn memberService.getUnverifiedFaculty()\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tvm.UVFPath = response.data.path;\n\t\t\t\t\t// $window.open(response.data.path);\n\t\t\t\t\t//console.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\t//console.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction getConfirmedRegistrationCount() {\n\t\t\treturn memberService.getConfirmedRegistrationCount()\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tvm.confirmedCount = response.data.confirmedCount;\n\t\t\t\t\tvm.unConfirmedCount = response.data.unConfirmedCount;\n\t\t\t\t\tvm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\n\t\t\t\t\tvm.totalAmountCollected = response.data.totalAmountCollected;\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\n\t\tfunction exportParticipantList() {\n\t\t\treturn memberService.exportParticipantList()\n\t\t\t\t.then(function (response) {\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t})\n\t\t\t\t.catch(function (error) {\n\t\t\t\t\tconsole.log(error);\n\t\t\t\t});\n\t\t}\n\t}\n})();\n\n\n\n\n\n\n\n\n\n// (function() {\n//     'use strict';\n//\n//     angular\n//         .module('fct.core')\n//         .controller('DashboardController', DashboardController);\n//\n//     DashboardController.$inject = ['$rootScope', 'memberService', '$window'];\n//\n//     function DashboardController($rootScope, memberService, $window) {\n//         var vm = this;\n//         vm.confirmedCount = 0;\n//         vm.unConfirmedCount = 0;\n//         vm.totalConfirmedParticipants = 0;\n//         vm.totalAmountCollected = 0;\n//\n//         angular.extend(vm, {\n//             getVFS: getVFS,\n//             getUVF: getUVF\n//         });\n//\n//         activate();\n//\n//         function activate() {\n//             getVFS();\n//             getUVF();\n//             getConfirmedRegistrationCount();\n//             // exportParticipantList();\n//         }\n//\n//         function getVFS() {\n//             return memberService.getVerifyFacultyStudent()\n//                 .then(function(response) {\n//                     vm.VFSPath = response.data.path;\n//                     // $window.open(response.data.path);\n//                     //console.log(response);\n//                 })\n//                 .catch(function(error) {\n//                     //console.log(error);\n//                 });\n//         }\n//\n//         function getUVF() {\n//             return memberService.getUnverifiedFaculty()\n//                 .then(function(response) {\n//                     vm.UVFPath = response.data.path;\n//                     // $window.open(response.data.path);\n//                     //console.log(response);\n//                 })\n//                 .catch(function(error) {\n//                     //console.log(error);\n//                 });\n//         }\n//\n//         function getConfirmedRegistrationCount() {\n//           return memberService.getConfirmedRegistrationCount()\n//             .then(function(response) {\n//               vm.confirmedCount = response.data.confirmedCount;\n//               vm.unConfirmedCount = response.data.unConfirmedCount;\n//               vm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\n//               vm.totalAmountCollected = response.data.totalAmountCollected;\n//               console.log(response);\n//             })\n//             .catch(function(error) {\n//               console.log(error);\n//             });\n//         }\n//\n//         function exportParticipantList() {\n//           return memberService.exportParticipantList()\n//             .then(function(response) {\n//                 console.log(response);\n//             })\n//             .catch(function(error) {\n//                 console.log(error);\n//             });\n//           }\n//     }\n// })();\n","(function () {\n    'use strict';\n\n    angular\n      .module('fct.core')\n      .controller('EachEventController', EachEventController);\n\n    EachEventController.$inject = ['$stateParams', 'eventService', '$sce'];\n\n    function EachEventController(stateParams, eventService, $sce) {\n        var vm = this;\n\n        activate();\n\n        function activate() {\n          if(stateParams.eventId !== undefined && stateParams.eventId !== null) {\n            vm.eventId = stateParams.eventId;\n            getEvent();\n          }\n\t\t    }\n\n        function getEvent() {\n          return eventService.getSingleEvent(vm.eventId)\n            .then(getEventSuccess)\n            .catch(getEventFailure);\n        }\n\n        function getEventSuccess(response) {\n          console.log(response);\n          vm.myEvent = response.data;\n          vm.rules = $sce.trustAsHtml(vm.myEvent.rules);\n          vm.judging_criteria = $sce.trustAsHtml(vm.myEvent.judging_criteria);\n          vm.specification = $sce.trustAsHtml(vm.myEvent.specification);\n        }\n\n        function getEventFailure(error) {\n          console.log(error);\n        }\n    }\n})();\n","(function () {\n    'use strict';\n\n    angular\n      .module('fct.core')\n      .controller('EventCardController', EventCardController);\n\n    EventCardController.$inject = ['eventService', '$mdDialog', 'memberService', '$scope'];\n\n    function EventCardController(eventService, $mdDialog, memberService, $scope) {\n        var vm = this;\n        vm.openCard = false;\n        vm.caret = 'expand_less';\n\n        angular.extend(vm, {\n            deleteEvent: deleteEvent,\n        });\n\n        activate();\n\n        function activate() {\n\n        }\n\n        function deleteEvent(id) {\n          if(id !== undefined && id !== null) {\n            vm.deleteId = id;\n            return memberService.getDeleteModal()\n              .then(confirmedDelete)\n              .catch(unconfirmedDelete);\n          }\n          return null;\n        }\n\n        function confirmedDelete() {\n          return eventService.deleteEvent(vm.deleteId)\n            .then(deleteEventSuccess)\n            .catch(deleteEventFailure);\n        }\n\n        function unconfirmedDelete() {\n          //\n        }\n\n        function deleteEventSuccess(response) {\n          console.log(response);\n          $scope.reload();\n          // vm.reload();\n        }\n\n        function deleteEventFailure(error) {\n          console.log(error);\n          //redirect\n        }\n    }\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('EventRegistrationController', EventRegistrationController);\n\n\tEventRegistrationController.$inject = ['memberService', '$window'];\n\n\tfunction EventRegistrationController(memberService, $window) {\n\t\tvar vm = this;\n\n\t\tangular.extend(vm, {\n\t\t\tgetExcel: getExcel\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\tgetRegistration();\n\t\t}\n\n\t\tfunction getRegistration() {\n\t\t\treturn memberService.getRegistrationsByEvent().then(success).catch(failure);\n\t\t}\n\n\t\tfunction success(response) {\n\t\t\tvm.eventDetails = response.data;\n\t\t\tconsole.log(response);\n\t\t}\n\n\t\tfunction failure(error) {\n\t\t\tconsole.log(error);\n\t\t}\n\n\t\tfunction getExcel(event_name, confirmed) {\n\t\t\tvar input = {\n\t\t\t\tevent_name: event_name,\n\t\t\t\tconfirmation: confirmed,\n\t\t\t};\n\t\t\tvar json = JSON.stringify(input);\n\t\t\tmemberService.getEventRegistrationExcel(json).then(function (response) {\n\t\t\t\t$window.open(response.data.path);\n\t\t\t})\n\t\t\t.catch(function (error) {\n\n\t\t\t});\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberSettingsController', MemberSettingsController);\n\n\tMemberSettingsController.$inject = ['memberAuthService', 'fctToast', '$scope', '$rootScope', '$timeout'];\n\n\tfunction MemberSettingsController(memberAuthService, fctToast, $scope, $rootScope, $timeout) {\n\t\tvar vm = this;\n\t\tvm.updateInfo = false;\n\t\t$scope.changePasswordForm = {};\n\t\tvm.user = {};\n\n\t\tangular.extend(vm, {\n\t\t\tchangePassword: changePassword\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction changePassword(event) {\n\t\t\tif (vm.updateInfo) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.updateInfo = true;\n\t\t\t\tmemberAuthService.changeMemberPassword(vm.user);\n\t\t\t}\n\t\t}\n\n\t\t$rootScope.$on('MemberChangePasswordSuccess', MemberChangePasswordSuccess);\n\t\t$rootScope.$on('MemberChangePasswordFailure', MemberChangePasswordFailure);\n\n\t\tfunction MemberChangePasswordSuccess(event) {\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\n\t\t\t$timeout(function () {\n\t\t\t\tresetForm();\n\t\t\t});\n\n\t\t}\n\n\t\tfunction MemberChangePasswordFailure(event, error) {\n\t\t\tfctToast.showToast(error.data.message);\n\t\t\t$timeout(function () {\n\t\t\t\tresetForm();\n\t\t\t});\n\t\t}\n\n\t\tfunction resetForm() {\n\t\t\tvm.user = {};\n\t\t\tvm.updateInfo = false;\n\t\t\t$scope.changePasswordForm.$setPristine();\n\t\t\t$scope.changePasswordForm.$setUntouched();\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('ParticipantRegistrationController', ParticipantRegistrationController);\n\n\tParticipantRegistrationController.$inject = ['$http'];\n\n\tfunction ParticipantRegistrationController($http) {\n\t\tvar vm = this;\n\t\tvm.myParticipant = {\n\t\t\teventObject: {\n\t\t\t\tevent_id: 123123,\n\t\t\t\tevent_shortcode: 'EVET'\n\t\t\t},\n\t\t\tother_participants: []\n\t\t};\n    vm.otherParticipants = [];\n\t\tvm.myParticipant.other_participants = [];\n    vm.maxParticipants = 4;\n    vm.eventPrice = 50;\n    vm.esflag = false;\n    vm.nopflag = false;\n\n\t\tangular.extend(vm, {\n      getParticipantLength : getParticipantLength,\n      save : save,\n      openParticipantModule : openParticipantModule,\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\tvar x = '{\"eventObject\": {\"event_id\": \"123123\",\"event_shortcode\": \"EVET\",\"event_section\": \"1\",\"event_name\": \"1\"},\"other_participants\": [{\"title\": \"Team Member\",\"leaderFlag\": false,\"$$hashKey\": \"object:68\",\"name\": \"cl\",\"email\": \"d@ddc.c\",\"college_name\": \"1\",\"branch\": \"2\",\"semester\": \"6\",\"mobileno\": \"43223443223\",\"enrollment\": \"322342342342343\"}],\"total_amount\": 100,\"numberOfParticipant\": \"2\",\"do_payment\": true,\"team_leader\": {\"title\": \"Team Leader\",\"leaderFlag\": true,\"$$hashKey\": \"object:67\",\"name\": \"fd\",\"email\": \"s@sd.3\",\"mobileno\": \"12341232133\",\"college_name\": \"1\",\"branch\": \"1\",\"semester\": \"2\",\"enrollment\": \"231312312332333\"}}';\n\t\t\treturn $http.post('/api/registration/create', x)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t\t}\n\n    function openParticipantModule(total) {\n      vm.nopflag = true;\n      var first = true;\n      vm.myParticipant.other_participants = [];\n      while(total > 0) {\n        var each = {\"title\": (first) ? \"Team Leader\" : \"Team Member\",\n                    \"leaderFlag\": first};\n        vm.myParticipant.other_participants.push(each);\n        first = false;\n        total--;\n      }\n    }\n\n    function getParticipantLength() {\n      return vm.myParticipant.other_participants.length;\n    }\n\n\t\tfunction save() {\n\t\t\tvm.myParticipant.do_payment = true;\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\n\t\t\tvm.myParticipant.team_leader = vm.myParticipant.other_participants[0];\n\t\t\tvm.myParticipant.other_participants.splice(0, 1);\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\n\t\t\treturn $http.post('/api/registration/create', vm.myParticipant)\n\t\t\t\t.then(resolveFunc)\n\t\t\t\t.catch(rejectFunc);\n\t\t}\n\n\t\tfunction resolveFunc(response) {\n\t\t\tconsole.log(response);\n\t\t}\n\n\t\tfunction rejectFunc(error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t}\n})();\n","(function () {\n    'use strict';\n\n    angular\n      .module('fct.core')\n      .controller('ShowEventController', ShowEventController);\n\n    ShowEventController.$inject = ['eventService'];\n\n    function ShowEventController(eventService) {\n        var vm = this;\n\n        angular.extend(vm, {\n            getEvents: getEvents,\n        });\n\n        activate();\n\n        function activate() {\n          getEvents();\n        }\n\n        function getEvents() {\n            return eventService.getEvent()\n              .then(getEventSuccess)\n              .catch(getEventFailure);\n        }\n\n        function getEventSuccess(response) {\n          console.log(response);\n          vm.dummyEvents = response.data;\n        }\n\n        function getEventFailure(error) {\n          console.log(error);\n        }\n    }\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('UpdateEventController', UpdateEventController);\n\n\tUpdateEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$state', 'fctToast', 'memberService', 'Upload', '$timeout'];\n\n\tfunction UpdateEventController(stateParams, eventService, $rootScope, state, fctToast, memberService, Upload, $timeout) {\n\t\tvar vm = this;\n\t\tvm.isUpdate = true;\n\t\tvm.myEvent = {\n\t\t\t'managers': [],\n\t\t};\n\t\tvm.myEvent.attachments = [];\n\t\tvm.files = [];\n\t\tvm.feeDisabled = false;\n\t\tvm.myEvent.do_payment = false;\n\t\tvm.loadIndex = 0;\n\t\tvm.loadCompleted = 3;\n\t\tvm.myEvent.image = null;\n\n\t\tangular.extend(vm, {\n\t\t\tsave: save,\n\t\t\topenManagersModal: openManagersModal,\n\t\t\tuploadFiles: uploadFiles,\n\t\t\tfeeTypeChanged: feeTypeChanged,\n\t\t\tdoneLoading: doneLoading,\n\t\t\tuploadImage: uploadImage,\n\t\t\tuploadIconImage: uploadIconImage,\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\t//memberService.initializeCKEditor();\n\t\t\t//checkEventId();\n\t\t}\n\n\t\tfunction doneLoading() {\n\t\t\tvm.loadIndex++;\n\t\t\tif (vm.loadIndex == vm.loadCompleted) {\n\t\t\t\tcheckEventId();\n\t\t\t}\n\t\t}\n\n\t\tfunction openManagersModal(total) {\n\t\t\tvm.myEvent.managers = [];\n\t\t\twhile (total > 0) {\n\t\t\t\tvar each = {\n\t\t\t\t\t\"index\": 1\n\t\t\t\t};\n\t\t\t\tvm.myEvent.managers.push(each);\n\t\t\t\ttotal--;\n\t\t\t}\n\t\t}\n\n\t\tfunction checkEventId() {\n\t\t\tif (stateParams.eventId !== undefined && stateParams.eventId !== null) {\n\t\t\t\tvm.eventId = stateParams.eventId;\n\t\t\t\treturn eventService.getSingleEvent(vm.eventId)\n\t\t\t\t\t.then(onEventGetSuccess)\n\t\t\t\t\t.catch(onEventGetFailure);\n\n\t\t\t}\n\t\t\treturn null;\n\t\t}\n\n\t\tfunction onEventGetSuccess(eventData) {\n\t\t\tconsole.log(eventData);\n\t\t\tvm.myEvent = eventData.data;\n\t\t\tvm.myEvent.event = \"Update\";\n\t\t\tvm.myEvent.totalManager = vm.myEvent.managers.length;\n\t\t\tvm.files = vm.myEvent.attachments;\n\t\t\t// return [CKEDITOR.instances['editorRules'].setData(vm.myEvent.rules),\n\t\t\t// \tCKEDITOR.instances['editorSpecification'].setData(vm.myEvent.specification),\n\t\t\t// \tCKEDITOR.instances['editorJudgingCriteria'].setData(vm.myEvent.judging_criteria)];\n\t\t}\n\n\t\tfunction onEventGetFailure(error) {\n\t\t\tconsole.log(error);\n\n\t\t}\n\n\t\tfunction feeTypeChanged() {\n\t\t\tswitch (vm.myEvent.fees_type) {\n\t\t\tcase \"no_payment\":\n\t\t\t\tvm.myEvent.fees = 0;\n\t\t\t\tvm.feeDisabled = true;\n\t\t\t\tvm.myEvent.do_payment = false;\n\t\t\t\tbreak;\n\t\t\tcase \"do_payment\":\n\t\t\t\tvm.myEvent.do_payment = true;\n\t\t\t\tbreak;\n\t\t\tcase \"late_payment\":\n\t\t\t\tvm.myEvent.do_payment = false;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction save() {\n\t\t\treturn eventService.updateEvent(vm.eventId, vm.myEvent)\n\t\t\t\t.then(onUpdateSuccess)\n\t\t\t\t.catch(onUpdateFailure);\n\t\t}\n\n\t\tfunction onUpdateSuccess(response) {\n\t\t\tfctToast.showToast(\"Update Success.\", true);\n\t\t\tstate.go('in_tc.showEvent');\n\t\t}\n\n\t\tfunction onUpdateFailure(error) {\n\t\t\tfctToast.showToast(\"Please try again later.\");\n\t\t}\n\n\t\tfunction uploadFiles(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tvm.files.push(file);\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/upload',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\tvar attach = {\n\t\t\t\t\t\tdoc_name: file.name,\n\t\t\t\t\t\tlink: response.data.path,\n\t\t\t\t\t};\n\t\t\t\t\tvm.myEvent.attachments.push(attach);\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0)\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction uploadImage(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/uploadImage',\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\t$timeout(function () {\n\t\t\t\t\t\tvm.myEvent.event_image = response.data.path;\n\t\t\t\t\t});\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0) {\n\t\t\t\t\t\t//console.log(reponse);\n\t\t\t\t\t}\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\n\t\tfunction uploadIconImage(files, errFiles) {\n\t\t\tangular.forEach(files, function (file) {\n\t\t\t\tfile.upload = Upload.upload({\n\t\t\t\t\turl: '/api/members/uploadIcons',\n\n\t\t\t\t\tdata: {\n\t\t\t\t\t\tfile: file\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t\tfile.upload.then(function (response) {\n\t\t\t\t\t// console.log(response);\n\t\t\t\t\tvm.myEvent.event_icon = response.data.path;\n\t\t\t\t}, function (response) {\n\t\t\t\t\tif (response.status > 0) {\n\t\t\t\t\t\t//console.log(reponse);\n\t\t\t\t\t}\n\t\t\t\t}, function (evt) {\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultyLayoutController', FacultyLayoutController)\n\t\t.controller('ContactDialogController', ContactDialogController);\n\n\tFacultyLayoutController.$inject = ['facultyAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$mdDialog', '$mdMedia', '$scope'];\n\n\tfunction FacultyLayoutController(facultyAuthService, $mdSidenav, $rootScope, fctToast, $state, $mdDialog, $mdMedia, $scope) {\n\t\tvar vm = this;\n\n\t\t$scope.$watch(function () {\n\t\t\treturn $mdMedia('xs') || $mdMedia('sm');\n\t\t});\n\n\t\tangular.extend(vm, {\n\t\t\tlogout: logout,\n\t\t\topenLeftSidenav: openLeftSidenav,\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\n\t\t\tcontact: contact\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction logout() {\n\t\t\tfacultyAuthService.logout();\n\t\t}\n\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\n\n\t\tfunction logoutSuccessful(event) {\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\n\t\t\t$state.go('out.login');\n\t\t}\n\n\t\tfunction openLeftSidenav() {\n\t\t\t$mdSidenav('left').open();\n\t\t}\n\n\t\tfunction isOpenLeftSidenav() {\n\t\t\treturn $mdSidenav('left').isOpen();\n\t\t}\n\n\t\tfunction closeLeftSidenav() {\n\t\t\t$mdSidenav('left').close();\n\t\t}\n\n\t\tfunction contact(ev) {\n\t\t\tvar useFullScreen = $mdMedia('sm') || $mdMedia('xs');\n\t\t\t$mdDialog.show({\n\t\t\t\tcontroller: 'ContactDialogController',\n\t\t\t\ttemplateUrl: '/templates/components/dialogs/contact.html',\n\t\t\t\tparent: angular.element(document.body),\n\t\t\t\ttargetEvent: ev,\n\t\t\t\tclickOutsideToClose: true,\n\t\t\t\tfullscreen: useFullScreen // Only for -xs, -sm breakpoints.\n\t\t\t});\n\t\t}\n\t}\n\n\tContactDialogController.$inject = ['$scope', '$mdDialog'];\n\n\tfunction ContactDialogController($scope, $mdDialog) {\n\t\t$scope.cancel = function () {\n\t\t\t$mdDialog.cancel();\n\t\t};\n\n\t\t$scope.hide = function () {\n\t\t\t$mdDialog.hide();\n\t\t};\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberLayoutController', MemberLayoutController);\n\n\tMemberLayoutController.$inject = ['memberAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$scope'];\n\n\tfunction MemberLayoutController(memberAuthService, $mdSidenav, $rootScope, fctToast, $state, $scope) {\n\t\tvar vm = this;\n\n\t\tangular.extend(vm, {\n\t\t\tlogout: logout,\n\t\t\topenLeftSidenav: openLeftSidenav,\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction logout() {\n\t\t\tmemberAuthService.logout();\n\t\t}\n\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\n\n\t\tfunction logoutSuccessful(event) {\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\n\t\t\t$state.go('out.member_login');\n\t\t}\n\n\t\tfunction openLeftSidenav() {\n\t\t\t$mdSidenav('left').open();\n\t\t}\n\n\t\tfunction isOpenLeftSidenav() {\n\t\t\treturn $mdSidenav('left').isOpen();\n\t\t}\n\n\t\tfunction closeLeftSidenav() {\n\t\t\t$mdSidenav('left').close();\n\t\t}\n\t}\n\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultyForgotPasswordApplyController', FacultyForgotPasswordApplyController);\n\n\tFacultyForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\n\n\tfunction FacultyForgotPasswordApplyController($scope, fctToast, facultyAuthService, $state, $rootScope) {\n\t\tvar vm = this;\n\n\t\tvm.user = {};\n\t\tvm.submitButtonClicked = false;\n\t\tvm.applied = false;\n\t\t$scope.forgotPasswordApplyForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tsubmit: submit\n\t\t});\n\n\t\tconsole.log(\"HHHIII\");\n\n\t\tfunction submit(event) {\n\t\t\tconsole.log(\"222\");\n\t\t\tif (vm.submitButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.submitButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tfacultyAuthService.facultyForgotPasswordApply(newUser);\n\t\t}\n\n\n\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordApply', facultyForgotPasswordApplySuccess);\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordApply', facultyForgotPasswordApplyFailure);\n\n\t\tfunction facultyForgotPasswordApplySuccess(event) {\n\t\t\tvm.submitButtonClicked = false;\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction facultyForgotPasswordApplyFailure(event, error) {\n\t\t\tvm.submitButtonClicked = false;\n\t\t\tresetForm(error);\n\t\t}\n\n\t\tfunction resetForm(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\n\t\t\t\tvm.applied = true;\n\t\t\t} else {\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\n\t\t\t}\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\t//df\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultyForgotPasswordSetController', FacultyForgotPasswordSetController);\n\n\tFacultyForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope', '$stateParams', '$location'];\n\n\tfunction FacultyForgotPasswordSetController($scope, fctToast, facultyAuthService, $state, $rootScope, $stateParams, $location) {\n\t\tvar vm = this;\n\t\tconsole.log(\"URL\", $location.url());\n\t\tvar uriLi = $location.url();\n\t\turiLi = uriLi.replace('#x3D;', '=');\n\t\turiLi = uriLi.replace('&%23x3D;', '=');\n\t\tvar fi, si, ti, foi;\n\t\tfi = uriLi.indexOf('=');\n\t\tsi = uriLi.indexOf('&');\n\t\tti = uriLi.indexOf('=', fi + 1);\n\t\tfoi = uriLi.length;\n\n\t\tvar utoken = uriLi.substring(fi + 1, si);\n\t\t// console.log(\"utoken\", utoken);\n\n\t\tvar userid = uriLi.substring(ti + 1, foi);\n\t\t// console.log(\"uid\", userid);\n\n\t\tvm.token = Boolean($stateParams.token);\n\t\t// console.log(\"token\", vm.token);\n\t\tvm.user = {};\n\t\tvm.changePasswordButtonClicked = false;\n\t\tvm.set = false;\n\t\t$scope.forgotPasswordSetForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tchangePassword: changePassword\n\t\t});\n\n\t\tfunction changePassword() {\n\t\t\tif (vm.changePasswordButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.changePasswordButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tnewUser.token = utoken;\n\t\t\tvar uid = userid;\n\n\t\t\tfacultyAuthService.facultyForgotPasswordSet(newUser, uid);\n\t\t}\n\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordSet', facultyForgotPasswordSetSuccess);\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordSet', facultyForgotPasswordSetFailure);\n\n\t\tfunction facultyForgotPasswordSetSuccess(event) {\n\t\t\tvm.changePasswordButtonClicked = false;\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction facultyForgotPasswordSetFailure(event, error) {\n\t\t\tvm.changePasswordButtonClicked = false;\n\t\t\tresetForm(error);\n\t\t}\n\n\t\tfunction resetForm(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\n\t\t\t\tvm.set = true;\n\t\t\t} else {\n\t\t\t\tvm.error = true;\n\t\t\t\tvm.errorMsg = error.data.error.for;\n\t\t\t\tvm.set = true;\n\t\t\t}\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultyLoginController', FacultyLoginController);\n\n\tFacultyLoginController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\n\n\tfunction FacultyLoginController($scope, fctToast, facultyAuthService, $state, $rootScope) {\n\t\tvar vm = this;\n\t\tvm.user = {};\n\t\tvm.loginButtonClicked = false;\n\t\t$scope.loginForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tlogin: login\n\t\t});\n\n\n\t\tfunction login() {\n\t\t\tif (vm.loginButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.loginButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tfacultyAuthService.facultyLogin(newUser);\n\t\t}\n\n\t\t$rootScope.$on('SuccessFacultyLogin', loginSuccess);\n\t\t$rootScope.$on('ErrorFacultyLogin', loginFailure);\n\n\t\tfunction loginSuccess(event) {\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\n\t\t\tvm.loginButtonClicked = false;\n\t\t\tresetLogin();\n\t\t\t$state.go('in_fc.guidelines');\n\t\t}\n\n\t\tfunction loginFailure(event, error) {\n\t\t\tvar msg = error.data.error.message.message.toString();\n\t\t\tvm.loginButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t\tresetLogin(error);\n\t\t}\n\n\t\tfunction resetLogin(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.loginForm.$setPristine();\n\t\t\t\t$scope.loginForm.$setUntouched();\n\t\t\t} else {\n\t\t\t\tif (error.data.error.message.errorState.faculty) {\n\t\t\t\t\tvm.user.email = null;\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\n\t\t\t\t} else {\n\t\t\t\t\tvm.user.password = null;\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('FacultyRegistrationController', FacultyRegistrationController);\n\n\tFacultyRegistrationController.$inject = ['facultyAuthService', '$scope', 'fctToast', '$rootScope', '$state', '$timeout', '$q'];\n\n\tfunction FacultyRegistrationController(facultyAuthService, $scope, fctToast, $rootScope, $state, $timeout, $q) {\n\t\tvar vm = this;\n\t\tvm.user = {};\n\t\tvm.registerButtonClicked = false;\n\n\t\t// vm.states = loadAll();\n\t\tvm.selectedItem = null;\n\t\tvm.searchText = null;\n\t\tvm.querySearch = querySearch;\n\n\t\tangular.extend(vm, {\n\t\t\tregister: register\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\t\t\treturn facultyAuthService.getColleges()\n\t\t\t\t.then(getCollegesSuccess)\n\t\t\t\t.catch(getCollegesError);\n\t\t}\n\n\t\tfunction getCollegesSuccess(response) {\n\t\t\tvm.colleges = response.data;\n\t\t}\n\n\t\tfunction getCollegesError(error) {\n\t\t\tfctToast.showToast('Error in getting colleges');\n\t\t}\n\n\t\tfunction register() {\n\t\t\tif (vm.registerButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.registerButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tfacultyAuthService.facultyRegister(newUser);\n\t\t}\n\n\t\t$rootScope.$on('SuccessFacultyRegister', registerSuccess);\n\t\t$rootScope.$on('ErrorFacultyRegister', registerFailure);\n\n\t\tfunction registerSuccess(event) {\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\n\t\t\tvm.registerButtonClicked = false;\n\t\t\tresetForm();\n\t\t\t$state.go('in_fc.guidelines');\n\t\t}\n\n\t\tfunction registerFailure(event, error) {\n\t\t\tvar msg = 'Email already registered';\n\t\t\tvm.registerButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction resetForm() {\n\t\t\tvm.user = {};\n\t\t\t$scope.registerForm.$setPristine();\n\t\t\t$scope.registerForm.$setUntouched();\n\t\t}\n\n\n\n\t\tfunction querySearch(query) {\n\t\t\tvar results = query ? vm.colleges.filter(createFilterFor(query)) : vm.colleges;\n\t\t\tvar deferred = $q.defer();\n\t\t\tconsole.log(results);\n\t\t\t$timeout(function () {\n\t\t\t\tdeferred.resolve(results);\n\t\t\t}, Math.random() * 1000, false);\n\t\t\treturn deferred.promise;\n\t\t}\n\n\t\t// function loadAll() {\n\t\t// \tvar allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana';\n\t\t//\n\t\t// \treturn allStates.split(/, +/g).map(function (state) {\n\t\t// \t\treturn {\n\t\t// \t\t\tvalue: state.toLowerCase(),\n\t\t// \t\t\tdisplay: state\n\t\t// \t\t};\n\t\t// \t});\n\t\t// }\n\n\n\t\tfunction createFilterFor(query) {\n\t\t\tvar lowercaseQuery = angular.lowercase(query);\n\t\t\treturn function filterFn(college) {\n\t\t\t\tvar matches = college.name.match(/\\b(\\w)/g);\n\t\t\t\tvar acronym = matches.join('');\n\t\t\t\tacronym = acronym.toLowerCase();\n\t\t\t\treturn (college.name.toLowerCase().trim().indexOf(lowercaseQuery) === 0 ||\n\t\t\t\t\tacronym.indexOf(lowercaseQuery) === 0);\n\t\t\t};\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberForgotPasswordApplyController', MemberForgotPasswordApplyController);\n\n\tMemberForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\n\n\tfunction MemberForgotPasswordApplyController($scope, fctToast, memberAuthService, $state, $rootScope) {\n\t\tvar vm = this;\n\n\t\tvm.user = {};\n\t\tvm.submitButtonClicked = false;\n\t\tvm.applied = false;\n\t\t$scope.forgotPasswordApplyForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tsubmit: submit\n\t\t});\n\n\t\tfunction submit(event) {\n\t\t\tconsole.log(\"HIII\");\n\t\t\tif (vm.submitButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.submitButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tmemberAuthService.memberForgotPasswordApply(newUser);\n\t\t}\n\n\t\t$rootScope.$on('SuccessMemberForgotPasswordApply', memberForgotPasswordApplySuccess);\n\t\t$rootScope.$on('ErrorMemberForgotPasswordApply', memberForgotPasswordApplyFailure);\n\n\t\tfunction memberForgotPasswordApplySuccess(event) {\n\t\t\tvm.submitButtonClicked = false;\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction memberForgotPasswordApplyFailure(event, error) {\n\t\t\tvm.submitButtonClicked = false;\n\t\t\tresetForm(error);\n\t\t}\n\n\t\tfunction resetForm(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\n\t\t\t\tvm.applied = true;\n\t\t\t} else {\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\n\t\t\t}\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberForgotPasswordSetController', MemberForgotPasswordSetController);\n\n\tMemberForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope', '$stateParams'];\n\n\tfunction MemberForgotPasswordSetController($scope, fctToast, memberAuthService, $state, $rootScope, $stateParams) {\n\t\tvar vm = this;\n\n\n\t\tvm.token = Boolean($stateParams.token);\n\t\t// console.log(\"token\", vm.token);\n\t\tvm.user = {};\n\t\tvm.changePasswordButtonClicked = false;\n\t\tvm.set = false;\n\t\t$scope.forgotPasswordSetForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tchangePassword: changePassword\n\t\t});\n\n\t\tfunction changePassword() {\n\t\t\tif (vm.changePasswordButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.changePasswordButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tnewUser.token = $stateParams.token;\n\t\t\tvar uid = $stateParams.id;\n\n\t\t\tmemberAuthService.memberForgotPasswordSet(newUser, uid);\n\t\t}\n\n\t\t$rootScope.$on('SuccessMemberForgotPasswordSet', memberForgotPasswordSetSuccess);\n\t\t$rootScope.$on('ErrorMemberForgotPasswordSet', memberForgotPasswordSetFailure);\n\n\t\tfunction memberForgotPasswordSetSuccess(event) {\n\t\t\tvm.changePasswordButtonClicked = false;\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction memberForgotPasswordSetFailure(event, error) {\n\t\t\tvm.changePasswordButtonClicked = false;\n\t\t\tresetForm(error);\n\t\t}\n\n\t\tfunction resetForm(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\n\t\t\t\tvm.set = true;\n\t\t\t} else {\n\t\t\t\tvm.error = true;\n\t\t\t\tvm.errorMsg = error.data.error.for;\n\t\t\t\tvm.set = true;\n\t\t\t}\n\t\t}\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberLoginController', MemberLoginController);\n\n\tMemberLoginController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\n\n\tfunction MemberLoginController($scope, fctToast, memberAuthService, $state, $rootScope) {\n\t\tvar vm = this;\n\t\tvm.user = {};\n\t\tvm.loginButtonClicked = false;\n\t\t$scope.loginForm = {};\n\n\t\tangular.extend(vm, {\n\t\t\tlogin: login\n\t\t});\n\n\n\t\tfunction login() {\n\t\t\tif (vm.loginButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.loginButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tmemberAuthService.memberLogin(newUser);\n\t\t}\n\n\t\t$rootScope.$on('SuccessMemberLogin', loginSuccess);\n\t\t$rootScope.$on('ErrorMemberLogin', loginFailure);\n\n\t\tfunction loginSuccess(event) {\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\n\t\t\tvm.loginButtonClicked = false;\n\t\t\tresetLogin();\n\t\t\t$state.go('in_tc.verifyCoordinator');\n\t\t}\n\n\t\tfunction loginFailure(event, error) {\n\t\t\tvar msg = error.data.error.message.message.toString();\n\t\t\t// console.log(error);\n\t\t\tvm.loginButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t\tresetLogin(error);\n\t\t}\n\n\t\tfunction resetLogin(error) {\n\t\t\tif (angular.isUndefined(error)) {\n\t\t\t\tvm.user = {};\n\t\t\t\t$scope.loginForm.$setPristine();\n\t\t\t\t$scope.loginForm.$setUntouched();\n\t\t\t} else {\n\t\t\t\tif (error.data.error.message.errorState.member) {\n\t\t\t\t\tvm.user.email = null;\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\n\t\t\t\t} else {\n\t\t\t\t\tvm.user.password = null;\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n})();\n","(function () {\n\t'use strict';\n\n\tangular\n\t\t.module('fct.core')\n\t\t.controller('MemberRegistrationController', MemberRegistrationController);\n\n\tMemberRegistrationController.$inject = ['memberAuthService', '$scope', 'fctToast', '$rootScope', '$state'];\n\n\tfunction MemberRegistrationController(memberAuthService, $scope, fctToast, $rootScope, $state) {\n\t\tvar vm = this;\n\t\tvm.user = {};\n\t\tvm.registerButtonClicked = false;\n\n\t\tangular.extend(vm, {\n\t\t\tregister: register\n\t\t});\n\n\t\tactivate();\n\n\t\tfunction activate() {\n\n\t\t}\n\n\t\tfunction register() {\n\t\t\tif (vm.registerButtonClicked) {\n\t\t\t\tevent.preventDefault();\n\t\t\t} else {\n\t\t\t\tvm.registerButtonClicked = true;\n\t\t\t}\n\t\t\tvar newUser = angular.copy(vm.user);\n\t\t\tconsole.log(newUser);\n\t\t\tmemberAuthService.memberRegister(newUser);\n\t\t}\n\n\t\t$rootScope.$on('SuccessMemberRegister', registerSuccess);\n\t\t$rootScope.$on('ErrorMemberRegister', registerFailure);\n\n\t\tfunction registerSuccess(event) {\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\n\t\t\tvm.registerButtonClicked = false;\n\t\t\tresetForm();\n\t\t\t$state.go('in_tc.verifyCoordinator');\n\t\t}\n\n\t\tfunction registerFailure(event, error) {\n\t\t\tvar msg = error.data.errMsg.toString();\n\t\t\tvm.registerButtonClicked = false;\n\t\t\tfctToast.showToast(msg);\n\t\t\tresetForm();\n\t\t}\n\n\t\tfunction resetForm() {\n\t\t\tvm.user = {};\n\t\t\t$scope.registerForm.$setPristine();\n\t\t\t$scope.registerForm.$setUntouched();\n\t\t}\n\t}\n})();\n","(function() {\n\n    angular.module('fct.core')\n      .animation('.slide-vertical', slideVertical);\n\n    slideVertical.$inject = ['TweenMax'];\n\n    function slideVertical(TweenMax) {\n        return {\n            addClass: addHideClass,\n            removeClass: removeHideClass\n        };\n    }\n\n    function addHideClass(element, className, done) {\n      if (className == 'ng-hide') {\n        // var timeline = new TimelineMax();\n        TweenMax.set(element,{height:\"auto\", opacity:0});\n        TweenMax.from(element, 0.3, {opacity: 1, ease: Power0.easeNone});\n        TweenMax.to(element, 0.4, {height:0, ease:  Power2.easeOut, onComplete: done}).delay(0.25);\n      }\n      else {\n        done();\n      }\n\n    }\n\n    function removeHideClass(element, className, done) {\n      if (className == 'ng-hide') {\n        element.removeClass('ng-hide');\n        TweenMax.set(element,{height:\"auto\", opacity:0});\n        TweenMax.from(element, 0.4, {height:0, ease: Power2.easeIn});\n        TweenMax.to(element, 0.3, {opacity: 1, ease: Power2.easeIn, onComplete:done}).delay(0.35);\n      }\n      else {\n        done();\n      }\n    }\n})();\n"]}
=======
{"version":3,"sources":["api/api.module.js","app/fct_app.module.js","core/core.module.js","core/core.config.js","api/interceptors/authInterceptor.factory.js","api/services/event.factory.js","api/services/faculty.factory.js","api/services/facultyAuth.factory.js","api/services/member.factory.js","api/services/memberAuth.factory.js","core/services/fctToast.factory.js","core/directives/core.eventCard.directive.js","core/directives/core.fileUpload.directive.js","core/controllers/in_fc/addStudentCoordinator.controller.js","core/controllers/in_fc/ConfirmRegistrationModal.controller.js","core/controllers/in_fc/confirmRegistrations.controller.js","core/controllers/in_fc/confirmRegistrations1.controller.js","core/controllers/in_fc/facultySettings.controller.js","core/controllers/in_fc/registrationDetails.controller.js","core/controllers/in_fc/verifyCoordinator.controller.js","core/controllers/layout/facultyLayout.controller.js","core/controllers/layout/memberLayout.controller.js","core/controllers/in_team/addEvent.controller.js","core/controllers/in_team/dashboard.controller.js","core/controllers/in_team/eachEvent.controller.js","core/controllers/in_team/eventCard.controller.js","core/controllers/in_team/eventRegistration.controller.js","core/controllers/in_team/memberSettings.controller.js","core/controllers/in_team/participantRegistration.controller.js","core/controllers/in_team/showEvent.controller.js","core/controllers/in_team/updateEvent.controller.js","core/controllers/out/facultyForgotPasswordApply.controller.js","core/controllers/out/facultyForgotPasswordSet.controller.js","core/controllers/out/facultyLogin.controller.js","core/controllers/out/facultyRegister.controller.js","core/controllers/out/memberForgotPasswordApply.controller.js","core/controllers/out/memberForgotPasswordSet.controller.js","core/controllers/out/memberLogin.controller.js","core/controllers/out/memberRegister.controller.js","core/animations/core.slideVertical.animation.js"],"names":["angular","module","initializeCore","$rootScope","$interval","active","preloader","$on","startPreloader","stopPreloader","pageTransition","alreadyRedirected","constant","TweenMax","TimelineMax","run","$inject","configName","$mdThemingProvider","$stateProvider","$urlRouterProvider","$locationProvider","$httpProvider","activate","setTheme","setRoutes","addInterceptors","interceptors","push","theme","primaryPalette","themePalette","primary","accentPalette","accent","warnPalette","warn","html5Mode","when","otherwise","state","templateUrl","resolve","redirectLoggedIn","controller","controllerAs","redirectFacultyNotLoggedIn","redirectTeamNotLoggedIn","url","facultyAuthService","memberAuthService","$q","$state","$timeout","defer","facultyAuthenticate","checkFacultyLoggedIn","faculty","verified","go","memberAuthenticate","checkMemberLoggedIn","reject","promise","config","authInterceptor","$window","$location","getToken","localStorage","request","token","authHead","headers","requestError","rejection","response","responseError","status","path","service","factory","eventService","$http","addEvent","eventData","post","then","resolveFunc","catch","rejectFunc","getEvent","get","getSingleEvent","id","updateEvent","eventId","put","deleteEvent","delete","error","facultyService","getEachFaculty","link","baseLink","errorFunc","confirmRegistration","registration","getFacultyRegistrations","editStudentCoordinator","student","editStudentCoordinatorSuccess","editStudentCoordinatorFailure","getStudentCoordinator","updateFaculty","data","getRegistrationData","payload","split","atob","JSON","parse","isDefined","collegeId","email","mobileno","name","rejected","forgot_password","_id","exp","Date","now","replaceToken","removeToken","saveToken","removeItem","facultyLogin","user","facultyLoginSuccess","facultyLoginFailure","facultyRegister","facultyRegisterSuccess","facultyRegisterFailure","$broadcast","getColleges","getCollegesSuccess","getCollegesFailure","changeFacultyPassword","passwordObject","facultyId","changePasswordLink","patch","changePasswordSuccess","changePasswordFailure","facultyForgotPasswordApply","facultyForgotPasswordApplySuccess","facultyForgotPasswordApplyFailure","facultyForgotPasswordSet","facultyForgotPasswordSetSuccess","facultyForgotPasswordSetFailure","logout","checkVerified","console","log","checkVerifiedSuccess","checkVerifiedFailure","memberService","$mdDialog","getAllFacultyCoordinators","responseFunc","verifyFaculty","rejectFaculty","getTotalRegistrations","getRegistrationsByEvent","getVerifyFacultyStudent","getUnverifiedFaculty","getUnconfirmedRegistration","getEventRegistrationExcel","getConfirmedRegistrationCount","exportParticipantList","getDeleteModal","confirm","title","textContent","ok","cancel","show","isUndefined","registrations_count","member","memberLogin","memberLoginSuccess","memberLoginFailure","memberRegister","memberRegisterSuccess","memberRegisterFailure","memberForgotPasswordApply","memberForgotPasswordApplySuccess","memberForgotPasswordApplyFailure","memberForgotPasswordSet","memberForgotPasswordSetSuccess","memberForgotPasswordSetFailure","changeMemberPassword","memberId","fctToast","$mdToast","showToast","success","toasterClass","toaster","simple","position","hideDelay","toastClass","eventCard","linkFunc","$scope","toggleCard","openCard","caret","directive","restrict","scope","eventdata","reload","fileUpload","template","replace","transclude","ngModel","disabled","require","el","attr","Resize","file","index","type","b64toBlob","b64Data","contentType","sliceSize","byteCharacters","byteArrays","offset","length","slice","byteNumbers","Array","i","charCodeAt","byteArray","Uint8Array","blob","Blob","draw","width","img","height","ctx","canvas","getContext","drawImage","maxWidth","maxHeight","b64","toDataURL","uploadFile","document","createElement","reader","FileReader","onload","e","src","target","result","readAsDataURL","upload","fileProperties","resize","indexOf","extend","size","percent","preview","xhr","XMLHttpRequest","fd","FormData","progress","uri","open","withCredentials","shareCredentials","forEach","item","setRequestHeader","header","value","onreadystatechange","code","statusText","$apply","addEventListener","parseInt","loaded","total","append","fileName","send","withPreview","fileSelector","sel","credentials","multiple","accept","element","querySelectorAll","bind","$eval","find","click","files","f","AddStudentController","getStudentCoordinatorSuccess","getStudentCoordinatorFailure","student_coordinator","vm","coordinator","preInfo","editInfo","update","event","updateButtonClicked","edit","addStudentCoordinator","addButtonClicked","addStudentCoordinatorSuccess","this","ConfirmRegistrationModalController","confirmData","registrationButtonClicked","preventDefault","confirmRegistrationSuccess","confirmRegistrationFailure","hide","ConfirmRegistrationsController","prompt","placeholder","ariaLabel","targetEvent","serialId","confirmRegistrationForm","$setPristine","$setUntouched","msg","for","message","ConfirmRegistrationsController1","getRegistrationDataSuccess","getRegistrationDataFailure","teamId","locals","clickOutsideToClose","fullscreen","FacultySettingsController","userDetail","updating","changePassword","updateInfo","FacultyChangePasswordSuccess","resetForm","FacultyChangePasswordFailure","changePasswordForm","RegistrationDetailsController","getRegistrationsSuccess","getRegistrationsFailure","registrations","totalRegistrations","collected_amount","totalCollectedAmount","noregistration","VerifyCoordinatorController","getAllFacultyCoordinatorsSuccess","getAllFacultyCoordinatorsFailure","faculties","limitFaculty","nomoreFaculty","verifyingIndex","verifyFacultySuccess","verifyFacultyFailure","rejectionIndex","rejectFacultySuccess","rejectFacultyFailure","splice","loadmore","orderField","reverseSort","FacultyLayoutController","$mdSidenav","$mdMedia","logoutSuccessful","openLeftSidenav","isOpenLeftSidenav","isOpen","closeLeftSidenav","close","contact","ev","useFullScreen","parent","body","$watch","ContactDialogController","MemberLayoutController","AddEventController","stateParams","Upload","$filter","doneLoading","openManagersModal","myEvent","managers","each","feeTypeChanged","fees_type","fees","feeDisabled","do_payment","save","isUpdate","registerSuccess","registerFailure","uploadFiles","errFiles","attach","doc_name","dest","attachments","errorMsg","evt","Math","min","uploadImage","reponse","event_image","uploadIconImage","event_icon_image","image","DashboardController","getVFS","getUVF","array","unconfirmed_registrations","VFSPath","UVFPath","confirmedCount","unConfirmedCount","totalConfirmedParticipants","totalAmountCollected","EachEventController","$sce","undefined","getEventSuccess","getEventFailure","rules","trustAsHtml","judging_criteria","specification","EventCardController","deleteId","confirmedDelete","unconfirmedDelete","deleteEventSuccess","deleteEventFailure","EventRegistrationController","getRegistration","failure","eventDetails","getExcel","event_name","confirmed","input","confirmation","json","stringify","MemberSettingsController","MemberChangePasswordSuccess","MemberChangePasswordFailure","ParticipantRegistrationController","x","openParticipantModule","nopflag","first","myParticipant","other_participants","leaderFlag","getParticipantLength","team_leader","eventObject","event_id","event_shortcode","otherParticipants","maxParticipants","eventPrice","esflag","ShowEventController","getEvents","dummyEvents","UpdateEventController","loadIndex","loadCompleted","checkEventId","onEventGetSuccess","onEventGetFailure","totalManager","onUpdateSuccess","onUpdateFailure","event_icon","FacultyForgotPasswordApplyController","submit","submitButtonClicked","newUser","copy","forgotPasswordApplyForm","applied","$error","not_registered","FacultyForgotPasswordSetController","$stateParams","changePasswordButtonClicked","utoken","uid","userid","forgotPasswordSetForm","set","uriLi","fi","si","ti","foi","substring","Boolean","FacultyLoginController","login","loginButtonClicked","loginSuccess","resetLogin","loginFailure","toString","loginForm","errorState","password","incorrect","FacultyRegistrationController","getCollegesError","colleges","register","registerButtonClicked","registerForm","querySearch","query","results","filter","createFilterFor","deferred","random","lowercaseQuery","lowercase","college","matches","match","acronym","join","toLowerCase","trim","selectedItem","searchText","MemberForgotPasswordApplyController","MemberForgotPasswordSetController","MemberLoginController","MemberRegistrationController","errMsg","slideVertical","addClass","addHideClass","removeClass","removeHideClass","className","done","opacity","from","ease","Power0","easeNone","to","Power2","easeOut","onComplete","delay","easeIn","animation"],"mappings":"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","file":"fcApp.min.js","sourcesContent":["(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api', []);\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct_app', [\r\n\t\t\t'fct.api',\r\n\t\t\t'fct.core'\r\n\t\t]);\r\n})();\r\n","(function () {\r\n\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core', [\r\n\t\t\t'ngAnimate',\r\n\t\t\t'ngMessages',\r\n\t\t\t'ngMaterial',\r\n\t\t\t'ui.router',\r\n\t\t\t'underscore',\r\n\t\t\t'ngFileUpload',\r\n\t\t\t'validation.match',\r\n\t\t\t'ngMdIcons',\r\n\t\t\t'angularMoment',\r\n\t\t\t'ckeditor'\r\n\t\t\t// 'fct.api'\r\n\t\t]);\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.constant('TweenMax', TweenMax)\r\n\t\t.constant('TimelineMax', TimelineMax);\r\n\t//\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.run(initializeCore);\r\n\r\n\tinitializeCore.$inject = ['$rootScope', '$interval'];\r\n\r\n\tfunction initializeCore($rootScope, $interval) {\r\n\t\tactive();\r\n\r\n\t\tfunction active() {\r\n\t\t\tpreloader();\r\n\t\t}\r\n\r\n\t\t$rootScope.alreadyRedirected = false;\r\n\t\t\t\r\n\t\r\n\t\tfunction preloader() {\r\n\t\t\t$rootScope.$on('$viewContentLoading', startPreloader);\r\n\t\t\t$rootScope.$on('$viewContentLoaded', stopPreloader);\r\n\t\t}\r\n\r\n\t\tfunction startPreloader() {\r\n\t\t\t$rootScope.pageTransition = true;\r\n\t\t}\r\n\r\n\r\n\t\tfunction stopPreloader() {\r\n\t\t\tif ($rootScope.pageTransition) {\r\n\t\t\t\t$interval(function () {\r\n\t\t\t\t\t$rootScope.pageTransition = false;\r\n\t\t\t\t}, 1000);\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","\t(function() {\r\n\t    'use strict';\r\n\r\n\t    angular\r\n\t        .module('fct.core')\r\n\t        .config(configName);\r\n\r\n\t    configName.$inject = ['$mdThemingProvider', '$stateProvider', '$urlRouterProvider', '$locationProvider', '$httpProvider'];\r\n\r\n\t    function configName($mdThemingProvider, $stateProvider, $urlRouterProvider, $locationProvider, $httpProvider) {\r\n\t        var themePalette = {\r\n\t            primary: \"blue\",\r\n\t            accent: \"amber\",\r\n\t            warn: \"red\"\r\n\t        };\r\n\r\n\t        activate();\r\n\r\n\t        function activate() {\r\n\t            setTheme();\r\n\t            setRoutes();\r\n\t            addInterceptors();\r\n\t        }\r\n\r\n\t        function addInterceptors() {\r\n\t            $httpProvider.interceptors.push('authInterceptor');\r\n\t        }\r\n\r\n\t        function setTheme() {\r\n\t            $mdThemingProvider.theme('default')\r\n\t                .primaryPalette(themePalette.primary)\r\n\t                .accentPalette(themePalette.accent)\r\n\t                .warnPalette(themePalette.warn);\r\n\t        }\r\n\r\n\t        //\r\n\t        //     function setRoutes() {\r\n\t        //         $locationProvider.html5Mode(true);\r\n\t        //         $urlRouterProvider.when('/', '/login');\r\n\t        //         $urlRouterProvider.otherwise('/login');\r\n\t        //         $stateProvider\r\n\t        //             .state('out', {\r\n\t        //                 templateUrl: '/templates/layouts/out.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectLoggedIn: redirectLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_fc', {\r\n\t        //                 templateUrl: '/templates/layouts/in_fc.html',\r\n\t        //                 controller: 'FacultyLayoutController',\r\n\t        //                 controllerAs: 'flayc',\r\n\t        //                 resolve: {\r\n\t        //                     redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('in_tc', {\r\n\t        //                 controller: 'MemberLayoutController',\r\n\t        //                 controllerAs: 'mlayc',\r\n\t        //                 templateUrl: '/templates/layouts/in_tc.html',\r\n\t        //                 resolve: {\r\n\t        //                     redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t        //                 }\r\n\t        //             })\r\n\t        //             .state('out.login', {\r\n\t        //                 url: '/login',\r\n\t        //                 templateUrl: '/templates/pages/out/login.html',\r\n\t        //                 controller: 'FacultyLoginController',\r\n\t        //                 controllerAs: 'flc'\r\n\t        //             })\r\n\t        //             .state('out.register', {\r\n\t        //                 url: '/register',\r\n\t        //                 templateUrl: '/templates/pages/out/register.html',\r\n\t        //                 controller: 'FacultyRegistrationController',\r\n\t        //                 controllerAs: 'frc'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordApply', {\r\n\t        //                 url: '/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t        //                 controller: 'FacultyForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'ffpac'\r\n\t        //             })\r\n\t        //             .state('out.forgotPasswordSet', {\r\n\t        //                 url: '/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t        //                 controller: 'FacultyForgotPasswordSetController',\r\n\t        //                 controllerAs: 'ffpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_login', {\r\n\t        //                 url: '/member/login',\r\n\t        //                 templateUrl: '/templates/pages/out/member/login.html',\r\n\t        //                 controller: 'MemberLoginController',\r\n\t        //                 controllerAs: 'mlc'\r\n\t        //             })\r\n\t        //             .state('out.member_register', {\r\n\t        //                 url: '/member/register',\r\n\t        //                 templateUrl: '/templates/pages/out/member/register.html',\r\n\t        //                 controller: 'MemberRegistrationController',\r\n\t        //                 controllerAs: 'mrc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordSet', {\r\n\t        //                 url: '/member/forgotPasswordSet?token&id',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t        //                 controller: 'MemberForgotPasswordSetController',\r\n\t        //                 controllerAs: 'mfpsc'\r\n\t        //             })\r\n\t        //             .state('out.member_forgotPasswordApply', {\r\n\t        //                 url: '/member/forgotPasswordApply',\r\n\t        //                 templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t        //                 controller: 'MemberForgotPasswordApplyController',\r\n\t        //                 controllerAs: 'mfpac'\r\n\t        //             })\r\n\t        //             .state('in_tc.verifyCoordinator', {\r\n\t        //                 url: '/member/verifyCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t        //                 controller: 'VerifyCoordinatorController',\r\n\t        //                 controllerAs: 'vcc'\r\n\t        //             })\r\n\t        //             .state('in_tc.collegeList', {\r\n\t        //                 url: '/member/collegeList',\r\n\t        //                 templateUrl: '/templates/pages/in/collegeList.html'\r\n\t        //             })\r\n\t        //             .state('in_tc.dashboard', {\r\n\t        //                 url: '/dashboard',\r\n\t        //                 templateUrl: '/templates/pages/in/dashboard.html',\r\n\t        //                 controller: 'DashboardController',\r\n\t        //                 controllerAs: 'dc'\r\n\t        //             })\r\n\t        //             .state('in_tc.eventRegistrations', {\r\n\t        //                 url: '/eventRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t        //                 controller: 'EventRegistrationController',\r\n\t        //                 controllerAs: 'erc'\r\n\t        //             })\r\n\t        //             .state('in_tc.addEvent', {\r\n\t        //                 url: '/member/events/create',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'AddEventController',\r\n\t        //                 controllerAs: 'ec',\r\n\t        //             })\r\n\t        //             .state('in_tc.settings', {\r\n\t        //                 url: '/member/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t        //                 controller: 'MemberSettingsController',\r\n\t        //                 controllerAs: 'msc'\r\n\t        //             })\r\n\t        //             .state('in_tc.updateEvent', {\r\n\t        //                 url: '/member/events/:eventId/update',\r\n\t        //                 templateUrl: '/templates/pages/in/addEvent.html',\r\n\t        //                 controller: 'UpdateEventController',\r\n\t        //                 controllerAs: 'ec'\r\n\t        //             })\r\n\t        //             .state('in_tc.showEvent', {\r\n\t        //                 url: '/member/events',\r\n\t        //                 templateUrl: '/templates/pages/in/showEvent.html',\r\n\t        //                 controller: 'ShowEventController',\r\n\t        //                 controllerAs: 'sec'\r\n\t        //             })\r\n\t        //             .state('in_tc.eachEvent', {\r\n\t        //                 url: '/member/events/:eventId',\r\n\t        //                 templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t        //                 controller: 'EachEventController',\r\n\t        //                 controllerAs: 'eec'\r\n\t        //             })\r\n\t        //             .state('in_fc.guidelines', {\r\n\t        //                 url: '/guidelines',\r\n\t        //                 templateUrl: '/templates/pages/in/guidelines.html'\r\n\t        //             })\r\n\t        //             .state('in_fc.settings', {\r\n\t        //                 url: '/settings',\r\n\t        //                 templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t        //                 controller: 'FacultySettingsController',\r\n\t        //                 controllerAs: 'fsc'\r\n\t        //             })\r\n\t        //             .state('in_fc.confirm_registration', {\r\n\t        //                 url: '/confirm/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t        //                 controller: 'ConfirmRegistrationsController1',\r\n\t        //                 controllerAs: 'crc'\r\n\t        //             })\r\n\t        //             .state('in_fc.registration_details', {\r\n\t        //                 url: '/registrations',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t        //                 controller: 'RegistrationDetailsController',\r\n\t        //                 controllerAs: 'rdc'\r\n\t        //             })\r\n\t        //             .state('in_fc.student_coordinator', {\r\n\t        //                 url: '/studentCoordinator',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t        //                 controller: 'AddStudentController',\r\n\t        //                 controllerAs: 'ascc'\r\n\t        //             })\r\n\t        //             .state('in_fc.participant_registration', {\r\n\t        //                 url: '/participantRegistration',\r\n\t        //                 templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t        //                 controller: 'ParticipantRegistrationController',\r\n\t        //                 controllerAs: 'prc'\r\n\t        //             });\r\n\t        //     }\r\n\t        // }\r\n\r\n\t        function setRoutes() {\r\n\t            $locationProvider.html5Mode(true);\r\n\t            $urlRouterProvider.when('/', '/login');\r\n\t            $urlRouterProvider.otherwise('/login');\r\n\t            $stateProvider\r\n\t                .state('out', {\r\n\t                    templateUrl: '/templates/layouts/out.html',\r\n\t                    resolve: {\r\n\t                        redirectLoggedIn: redirectLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_fc', {\r\n\t                    templateUrl: '/templates/layouts/in_fc.html',\r\n\t                    controller: 'FacultyLayoutController',\r\n\t                    controllerAs: 'flayc',\r\n\t                    resolve: {\r\n\t                        redirectFacultyNotLoggedIn: redirectFacultyNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('in_tc', {\r\n\t                    controller: 'MemberLayoutController',\r\n\t                    controllerAs: 'mlayc',\r\n\t                    templateUrl: '/templates/layouts/in_tc.html',\r\n\t                    resolve: {\r\n\t                        redirectTeamNotLoggedIn: redirectTeamNotLoggedIn\r\n\t                    }\r\n\t                })\r\n\t                .state('out.login', {\r\n\t                    url: '/login',\r\n\t                    templateUrl: '/templates/pages/out/login.html',\r\n\t                    controller: 'FacultyLoginController',\r\n\t                    controllerAs: 'flc'\r\n\t                })\r\n\t                .state('out.register', {\r\n\t                    url: '/register',\r\n\t                    templateUrl: '/templates/pages/out/register.html',\r\n\t                    controller: 'FacultyRegistrationController',\r\n\t                    controllerAs: 'frc'\r\n\t                })\r\n\t                .state('out.forgotPasswordApply', {\r\n\t                    url: '/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordApply.html',\r\n\t                    controller: 'FacultyForgotPasswordApplyController',\r\n\t                    controllerAs: 'ffpac'\r\n\t                })\r\n\t                .state('out.forgotPasswordSet', {\r\n\t                    url: '/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/forgotPasswordSet.html',\r\n\t                    controller: 'FacultyForgotPasswordSetController',\r\n\t                    controllerAs: 'ffpsc'\r\n\t                })\r\n\t                .state('out.member_login', {\r\n\t                    url: '/member/login',\r\n\t                    templateUrl: '/templates/pages/out/member/login.html',\r\n\t                    controller: 'MemberLoginController',\r\n\t                    controllerAs: 'mlc'\r\n\t                })\r\n\t                .state('out.member_register', {\r\n\t                    url: '/member/register',\r\n\t                    templateUrl: '/templates/pages/out/member/register.html',\r\n\t                    controller: 'MemberRegistrationController',\r\n\t                    controllerAs: 'mrc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordSet', {\r\n\t                    url: '/member/forgotPasswordSet?token&id',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordSet.html',\r\n\t                    controller: 'MemberForgotPasswordSetController',\r\n\t                    controllerAs: 'mfpsc'\r\n\t                })\r\n\t                .state('out.member_forgotPasswordApply', {\r\n\t                    url: '/member/forgotPasswordApply',\r\n\t                    templateUrl: '/templates/pages/out/member/forgotPasswordApply.html',\r\n\t                    controller: 'MemberForgotPasswordApplyController',\r\n\t                    controllerAs: 'mfpac'\r\n\t                })\r\n\t                .state('in_tc.verifyCoordinator', {\r\n\t                    url: '/member/verifyCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/verifyCoordinator.html',\r\n\t                    controller: 'VerifyCoordinatorController',\r\n\t                    controllerAs: 'vcc'\r\n\t                })\r\n\t                .state('in_tc.collegeList', {\r\n\t                    url: '/member/collegeList',\r\n\t                    templateUrl: '/templates/pages/in/collegeList.html'\r\n\t                })\r\n\t                .state('in_tc.dashboard', {\r\n\t                    url: '/dashboard',\r\n\t                    templateUrl: '/templates/pages/in/dashboard.html',\r\n\t                    controller: 'DashboardController',\r\n\t                    controllerAs: 'dc'\r\n\t                })\r\n\t                .state('in_tc.eventRegistrations', {\r\n\t                    url: '/eventRegistration',\r\n\t                    templateUrl: '/templates/pages/in/eventRegistration.html',\r\n\t                    controller: 'EventRegistrationController',\r\n\t                    controllerAs: 'erc'\r\n\t                })\r\n\t                .state('in_tc.addEvent', {\r\n\t                    url: '/member/events/create',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'AddEventController',\r\n\t                    controllerAs: 'ec',\r\n\t                })\r\n\t                .state('in_tc.settings', {\r\n\t                    url: '/member/settings',\r\n\t                    templateUrl: '/templates/pages/in/memberSettings.html',\r\n\t                    controller: 'MemberSettingsController',\r\n\t                    controllerAs: 'msc'\r\n\t                })\r\n\t                .state('in_tc.updateEvent', {\r\n\t                    url: '/member/events/:eventId/update',\r\n\t                    templateUrl: '/templates/pages/in/addEvent.html',\r\n\t                    controller: 'UpdateEventController',\r\n\t                    controllerAs: 'ec'\r\n\t                })\r\n\t                .state('in_tc.showEvent', {\r\n\t                    url: '/member/events',\r\n\t                    templateUrl: '/templates/pages/in/showEvent.html',\r\n\t                    controller: 'ShowEventController',\r\n\t                    controllerAs: 'sec'\r\n\t                })\r\n\t                .state('in_tc.eachEvent', {\r\n\t                    url: '/member/events/:eventId',\r\n\t                    templateUrl: '/templates/pages/in/eachEvent.html',\r\n\t                    controller: 'EachEventController',\r\n\t                    controllerAs: 'eec'\r\n\t                })\r\n\t                .state('in_fc.guidelines', {\r\n\t                    url: '/guidelines',\r\n\t                    templateUrl: '/templates/pages/in/guidelines.html'\r\n\t                })\r\n\t                .state('in_fc.settings', {\r\n\t                    url: '/settings',\r\n\t                    templateUrl: '/templates/pages/in/facultySettings.html',\r\n\t                    controller: 'FacultySettingsController',\r\n\t                    controllerAs: 'fsc'\r\n\t                })\r\n\t                .state('in_fc.confirm_registration', {\r\n\t                    url: '/confirm/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/confirmRegistration1.html',\r\n\t                    controller: 'ConfirmRegistrationsController1',\r\n\t                    controllerAs: 'crc'\r\n\t                })\r\n\t                .state('in_fc.registration_details', {\r\n\t                    url: '/registrations',\r\n\t                    templateUrl: '/templates/pages/in/faculty/registrationDetails.html',\r\n\t                    controller: 'RegistrationDetailsController',\r\n\t                    controllerAs: 'rdc'\r\n\t                })\r\n\t                .state('in_fc.student_coordinator', {\r\n\t                    url: '/studentCoordinator',\r\n\t                    templateUrl: '/templates/pages/in/faculty/addStudentCordinator.html',\r\n\t                    controller: 'AddStudentController',\r\n\t                    controllerAs: 'ascc'\r\n\t                })\r\n\t                .state('in_fc.participant_registration', {\r\n\t                    url: '/participantRegistration',\r\n\t                    templateUrl: '/templates/pages/in/faculty/participantRegistration.html',\r\n\t                    controller: 'ParticipantRegistrationController',\r\n\t                    controllerAs: 'prc'\r\n\t                });\r\n\t        }\r\n\t    }\r\n\t    redirectFacultyNotLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectFacultyNotLoggedIn(facultyAuthService, memberAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate) {\r\n\t            if ($rootScope.faculty.verified !== true && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t            }\r\n\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    redirectTeamNotLoggedIn.$inject = ['memberAuthService', 'facultyAuthService', '$q', '$state', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectTeamNotLoggedIn(memberAuthService, facultyAuthService, $q, $state, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t        if (memberAuthenticate) {\r\n\t            defer.resolve();\r\n\t        } else {\r\n\t            var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t            if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_fc.guidelines');\r\n\t                });\r\n\t                defer.resolve();\r\n\t            } else {\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('out.login');\r\n\t                });\r\n\t                defer.reject();\r\n\t            }\r\n\r\n\r\n\t        }\r\n\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\r\n\t    redirectLoggedIn.$inject = ['facultyAuthService', 'memberAuthService', '$state', '$q', '$timeout', '$rootScope'];\r\n\r\n\t    function redirectLoggedIn(facultyAuthService, memberAuthService, $state, $q, $timeout, $rootScope) {\r\n\t        var defer = $q.defer();\r\n\t        var facultyAuthenticate = facultyAuthService.checkFacultyLoggedIn();\r\n\t        if (facultyAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t            defer.reject();\r\n\t            $timeout(function() {\r\n\t                $rootScope.alreadyRedirected = true;\r\n\t                $state.go('in_fc.guidelines');\r\n\t            });\r\n\t        } else {\r\n\t            var memberAuthenticate = memberAuthService.checkMemberLoggedIn();\r\n\t            if (memberAuthenticate && !$rootScope.alreadyRedirected) {\r\n\t                defer.reject();\r\n\t                $timeout(function() {\r\n\t                    $rootScope.alreadyRedirected = true;\r\n\t                    $state.go('in_tc.dashboard');\r\n\t                });\r\n\t            } else {\r\n\t                defer.resolve();\r\n\t            }\r\n\r\n\t        }\r\n\t        return defer.promise;\r\n\t    }\r\n\r\n\t    // redirectTeamLoggedIn.$inject = ['memberAuthService','facultyAuthService', '$state', '$q', '$timeout'];\r\n\t    //\r\n\t    // function redirectTeamLoggedIn(memberAuthService, facultyAuthService, $state, $q, $timeout) {\r\n\t    // \t// if(angular.isDefined($rootScope.faculty)){\r\n\t    // \t//\r\n\t    // \t// }\r\n\t    //\r\n\t    // \tvar defer = $q.defer();\r\n\t    // \tvar authenticate = memberAuthService.checkMemberLoggedIn();\r\n\t    // \tif (authenticate) {\r\n\t    // \t\tdefer.reject();\r\n\t    // \t\t$timeout(function () {\r\n\t    // \t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t    // \t\t});\r\n\t    // \t} else {\r\n\t    // \t\tdefer.resolve();\r\n\t    // \t}\r\n\t    // \treturn defer.promise;\r\n\t    // }\r\n\r\n\t})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('authInterceptor', authInterceptor);\r\n\r\n\tauthInterceptor.$inject = ['$window', '$q', '$location'];\r\n\r\n\tfunction authInterceptor($window, $q, $location) {\r\n\t\tvar service = {\r\n\t\t\trequest: request,\r\n\t\t\trequestError: requestError,\r\n\t\t\tresponse: response,\r\n\t\t\tresponseError: responseError\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction request(config) {\r\n\t\t\tvar token = getToken();\r\n\t\t\tif (token !== null) {\r\n\t\t\t\tvar authHead = 'Bearer ' + token;\r\n\t\t\t\tconfig.headers['Authorization'] = authHead;\r\n\t\t\t}\r\n\t\t\t// console.log(config);\r\n\t\t\treturn config;\r\n\t\t}\r\n\r\n\t\tfunction requestError(rejection) {\r\n\t\t\t// console.log(\"Request Rejection\",rejection);\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\r\n\t\tfunction response(response) {\r\n\t\t\t// console.log(\"response\",response);\r\n\t\t\treturn response || $q.when(response);\r\n\t\t}\r\n\r\n\t\tfunction responseError(rejection) {\r\n\t\t\t// console.log(\"response rejection\", rejection);\r\n\t\t\tif (rejection.status == 403) {\r\n\t\t\t\t$location.path('/login');\r\n\t\t\t}\r\n\t\t\treturn $q.reject(rejection);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t  .module('fct.core')\r\n\t  .factory('eventService', eventService);\r\n\r\n\teventService.$inject = ['$http'];\r\n\r\n\tfunction eventService($http) {\r\n\t  var service = {\r\n\t    addEvent: addEvent,\r\n\t\t\tgetEvent: getEvent,\r\n\t\t\tupdateEvent: updateEvent,\r\n\t\t\tgetSingleEvent: getSingleEvent,\r\n\t\t\tdeleteEvent: deleteEvent,\r\n\t  };\r\n\r\n\t  return service;\r\n\r\n\t  function addEvent(eventData) {\r\n\t\t\treturn $http.post('/api/members/events', eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getEvent() {\r\n\t\t\treturn $http.get('/api/members/events')\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function getSingleEvent(id) {\r\n\t\t\treturn $http.get('/api/members/events/' + id)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function updateEvent(eventId, eventData) {\r\n\t\t\treturn $http.put('/api/members/events/' + eventId, eventData)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t  function deleteEvent(eventId) {\r\n\t\t\treturn $http.delete('/api/members/events/' + eventId)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t  }\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyService', facultyService);\r\n\r\n\tfacultyService.$inject = ['$http', '$rootScope'];\r\n\r\n\tfunction facultyService($http, $rootScope) {\r\n\t\tvar baseLink = '/api/faculty/' + $rootScope.faculty.id;\r\n\r\n\t\tvar service = {\r\n\t\t\tconfirmRegistration: confirmRegistration,\r\n\t\t\tgetFacultyRegistrations: getFacultyRegistrations,\r\n\t\t\tgetStudentCoordinator: getStudentCoordinator,\r\n\t\t\teditStudentCoordinator: editStudentCoordinator,\r\n\t\t\tgetEachFaculty: getEachFaculty,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t\tgetRegistrationData: getRegistrationData,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\tvar link = baseLink + '/getEachFaculty';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(registration) {\r\n\t\t\tvar link = baseLink + '/registrations/confirm';\r\n\t\t\treturn $http.post(link, registration)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrations() {\r\n\t\t\tvar link = baseLink + '/registrations';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction get(students) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.put(link, students)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinator(student) {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.post(link, student)\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinator() {\r\n\t\t\tvar link = baseLink + '/studentCoordinator';\r\n\t\t\treturn $http.get(link)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty(data) {\r\n\t\t\tvar link = baseLink + '/updateFaculty/';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData(data) {\r\n\t\t\tvar link = baseLink + '/getRegistrationData';\r\n\t\t\treturn $http.post(link, data)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\t// replaceToken(response.data.token);\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('facultyAuthService', facultyAuthService);\r\n\r\n\tfacultyAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction facultyAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tfacultyLogin: facultyLogin,\r\n\t\t\tfacultyRegister: facultyRegister,\r\n\t\t\tcheckFacultyLoggedIn: checkFacultyLoggedIn,\r\n\t\t\tchangeFacultyPassword: changeFacultyPassword,\r\n\t\t\tlogout: logout,\r\n\t\t\tfacultyForgotPasswordApply: facultyForgotPasswordApply,\r\n\t\t\tfacultyForgotPasswordSet: facultyForgotPasswordSet,\r\n\t\t\tgetColleges: getColleges,\r\n\t\t\tcheckVerified: checkVerified\r\n\t\t\t// editStudentCoordinator: editStudentCoordinator\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkFacultyLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\t\t\t\tif (angular.isDefined(payload.collegeId)) {\r\n\t\t\t\t\t$rootScope.faculty = {};\r\n\t\t\t\t\t$rootScope.faculty.email = payload.email;\r\n\t\t\t\t\t$rootScope.faculty.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.faculty.name = payload.name;\r\n\t\t\t\t\t$rootScope.faculty.verified = payload.verified;\r\n\t\t\t\t\t$rootScope.faculty.rejected = payload.rejected;\r\n\t\t\t\t\t$rootScope.faculty.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.faculty.id = payload._id;\r\n\t\t\t\t\t$rootScope.collegeId = payload.collegeId;\r\n\t\t\t\t\t// $rootScope.faculty.registrations_count = payload.registrations_count;\r\n\t\t\t\t\t// $rootScope.faculty.collected_amount = payload.collected_amount;\r\n\t\t\t\t\t// $rootScope.faculty.student_coordinator = payload.student_coordinator;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t\t// console.log($rootScope.faculty);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction replaceToken(token) {\r\n\t\t\tremoveToken();\r\n\t\t\tsaveToken(token);\r\n\t\t}\r\n\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\tif ($window.localStorage['auth-token']) {\r\n\t\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t\t} else {\r\n\t\t\t\treturn null;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/login', user)\r\n\t\t\t\t.then(facultyLoginSuccess)\r\n\t\t\t\t.catch(facultyLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/faculty/register', user)\r\n\t\t\t\t.then(facultyRegisterSuccess)\r\n\t\t\t\t.catch(facultyRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyRegister');\r\n\t\t}\r\n\r\n\t\tfunction facultyRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyRegister', error);\r\n\t\t}\r\n\r\n\r\n\t\tfunction facultyLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyLogin');\r\n\t\t\t// checkFacultyLoggedIn();\r\n\t\t}\r\n\r\n\t\tfunction facultyLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction getColleges() {\r\n\t\t\treturn $http.get('/api/college/getAllCollege')\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesFailure);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesFailure(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t\tfunction changeFacultyPassword(passwordObject) {\r\n\t\t\tif (checkFacultyLoggedIn()) {\r\n\t\t\t\tif ($rootScope.faculty) {\r\n\t\t\t\t\tpasswordObject.facultyId = $rootScope.faculty.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/faculty/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\t$rootScope.$broadcast('FacultyChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApply(faculty) {\r\n\t\t\t$http.post('/api/auth/faculty/forgotPasswordApply', faculty)\r\n\t\t\t\t.then(facultyForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSet(faculty, id) {\r\n\t\t\tvar link = '/api/auth/faculty/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, faculty)\r\n\t\t\t\t.then(facultyForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(facultyForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessFacultyForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(error) {\r\n\r\n\t\t\t$rootScope.$broadcast('ErrorFacultyForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\r\n\t\tfunction checkVerified() {\r\n\t\t\tconsole.log($rootScope.faculty);\r\n\t\t\t$http.get('/api/faculty/check')\r\n\t\t\t\t.then(checkVerifiedSuccess)\r\n\t\t\t\t.catch(checkVerifiedFailure);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\treplaceToken(response.data.token);\r\n\t\t}\r\n\r\n\t\tfunction checkVerifiedFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction functionName(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberService', memberService);\r\n\r\n\tmemberService.$inject = ['$http', '$mdDialog'];\r\n\r\n\tfunction memberService($http, $mdDialog) {\r\n\t\tvar service = {\r\n\t\t\tgetAllFacultyCoordinators: getAllFacultyCoordinators,\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tgetTotalRegistrations: getTotalRegistrations,\r\n\t\t\tgetDeleteModal: getDeleteModal,\r\n\t\t\tgetVerifyFacultyStudent: getVerifyFacultyStudent,\r\n\t\t\tgetUnverifiedFaculty: getUnverifiedFaculty,\r\n\t\t\tgetUnconfirmedRegistration: getUnconfirmedRegistration,\r\n\t\t\tgetRegistrationsByEvent: getRegistrationsByEvent,\r\n\t\t\tgetEventRegistrationExcel: getEventRegistrationExcel,\r\n\t\t\tgetConfirmedRegistrationCount: getConfirmedRegistrationCount,\r\n\t\t\texportParticipantList: exportParticipantList,\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction getAllFacultyCoordinators() {\r\n\t\t\treturn $http.get('/api/members/faculty')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/verify/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id) {\r\n\t\t\treturn $http.patch('/api/members/faculty/reject/' + id)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getTotalRegistrations() {\r\n\t\t\treturn $http.get('/api/members/registrations')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsByEvent() {\r\n\t\t\treturn $http.get('/api/members/registration/eventRegistrationData')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getVerifyFacultyStudent() {\r\n\t\t\treturn $http.get('/api/members/exportVFSList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnverifiedFaculty() {\r\n\t\t\treturn $http.get('/api/members/exportUVFList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getUnconfirmedRegistration() {\r\n\t\t\treturn $http.get('/api/members/registration/exportUnconfirmedRegistration')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getEventRegistrationExcel(request) {\r\n\t\t\treturn $http.post('/api/members/registrations/export', request)\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getConfirmedRegistrationCount() {\r\n\t\t\treturn $http.get('/api/members/registration/confirmRegistrationCount')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction exportParticipantList() {\r\n\t\t\treturn $http.get('/api/members/registration/exportParticipantList')\r\n\t\t\t\t.then(responseFunc)\r\n\t\t\t\t.catch(errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction getDeleteModal() {\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Delete')\r\n\t\t\t\t.textContent('Are you sure you want to delete this record?')\r\n\t\t\t\t.ok('Confirm')\r\n\t\t\t\t.cancel('Cancel');\r\n\t\t\treturn $mdDialog.show(confirm).then(responseFunc, errorFunc);\r\n\t\t}\r\n\r\n\t\tfunction responseFunc(response) {\r\n\t\t\treturn response;\r\n\t\t}\r\n\r\n\t\tfunction errorFunc(error) {\r\n\t\t\treturn error;\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.api')\r\n\t\t.factory('memberAuthService', memberAuthService);\r\n\r\n\tmemberAuthService.$inject = ['$http', '$window', '$rootScope'];\r\n\r\n\tfunction memberAuthService($http, $window, $rootScope) {\r\n\t\tvar service = {\r\n\t\t\tmemberLogin: memberLogin,\r\n\t\t\tmemberRegister: memberRegister,\r\n\t\t\tcheckMemberLoggedIn: checkMemberLoggedIn,\r\n\t\t\tlogout: logout,\r\n\t\t\tchangeMemberPassword: changeMemberPassword,\r\n\t\t\tmemberForgotPasswordApply: memberForgotPasswordApply,\r\n\t\t\tmemberForgotPasswordSet: memberForgotPasswordSet\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction checkMemberLoggedIn() {\r\n\t\t\tvar token = getToken();\r\n\t\t\tvar payload;\r\n\t\t\tif (token) {\r\n\t\t\t\tpayload = token.split('.')[1];\r\n\t\t\t\tpayload = $window.atob(payload);\r\n\t\t\t\tpayload = JSON.parse(payload);\r\n\r\n\t\t\t\tif (angular.isUndefined(payload.registrations_count)) {\r\n\t\t\t\t\t$rootScope.member = {};\r\n\t\t\t\t\t$rootScope.member.email = payload.email;\r\n\t\t\t\t\t$rootScope.member.mobileno = payload.mobileno;\r\n\t\t\t\t\t$rootScope.member.name = payload.name;\r\n\t\t\t\t\t$rootScope.member.forgot_password = payload.forgot_password;\r\n\t\t\t\t\t$rootScope.member.id = payload._id;\r\n\t\t\t\t\treturn (payload.exp > Date.now() / 1000);\r\n\t\t\t\t} else {\r\n\t\t\t\t\treturn false;\r\n\t\t\t\t}\r\n\t\t\t} else {\r\n\t\t\t\treturn false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction saveToken(token) {\r\n\t\t\t$window.localStorage['auth-token'] = token;\r\n\t\t}\r\n\r\n\t\tfunction getToken() {\r\n\t\t\treturn $window.localStorage['auth-token'];\r\n\t\t}\r\n\r\n\t\tfunction removeToken() {\r\n\t\t\t$window.localStorage.removeItem('auth-token');\r\n\t\t}\r\n\r\n\t\tfunction memberLogin(user) {\r\n\t\t\treturn $http.post('/api/auth/member/login', user)\r\n\t\t\t\t.then(memberLoginSuccess)\r\n\t\t\t\t.catch(memberLoginFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegister(user) {\r\n\t\t\treturn $http.post('/api/auth/member/register', user)\r\n\t\t\t\t.then(memberRegisterSuccess)\r\n\t\t\t\t.catch(memberRegisterFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberRegister');\r\n\t\t}\r\n\r\n\t\tfunction memberRegisterFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberRegister', error);\r\n\t\t}\r\n\r\n\t\tfunction memberLoginSuccess(response) {\r\n\t\t\tsaveToken(response.data.token);\r\n\t\t\t$rootScope.$broadcast('SuccessMemberLogin');\r\n\t\t}\r\n\r\n\t\tfunction memberLoginFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberLogin', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApply(member) {\r\n\t\t\t$http.post('/api/auth/member/forgotPasswordApply', member)\r\n\t\t\t\t.then(memberForgotPasswordApplySuccess)\r\n\t\t\t\t.catch(memberForgotPasswordApplyFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordApply');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(error) {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordApply', error);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSet(member, id) {\r\n\t\t\tvar link = '/api/auth/member/' + id + '/forgotPasswordSet';\r\n\t\t\t$http.post(link, member)\r\n\t\t\t\t.then(memberForgotPasswordSetSuccess)\r\n\t\t\t\t.catch(memberForgotPasswordSetFailure);\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('SuccessMemberForgotPasswordSet');\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure() {\r\n\t\t\t$rootScope.$broadcast('ErrorMemberForgotPasswordSet', error);\r\n\t\t}\r\n\r\n\t\tfunction changeMemberPassword(passwordObject) {\r\n\t\t\tif (checkMemberLoggedIn()) {\r\n\t\t\t\tif ($rootScope.member) {\r\n\t\t\t\t\tpasswordObject.memberId = $rootScope.member.id;\r\n\t\t\t\t\tvar changePasswordLink = \"/api/members/settings/changePassword\";\r\n\t\t\t\t\t$http.patch(changePasswordLink, passwordObject)\r\n\t\t\t\t\t\t.then(changePasswordSuccess)\r\n\t\t\t\t\t\t.catch(changePasswordFailure);\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePasswordSuccess(response) {\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordSuccess');\r\n\t\t}\r\n\r\n\t\tfunction changePasswordFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t\t$rootScope.$broadcast('MemberChangePasswordFailure', error);\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tremoveToken();\r\n\t\t\t$rootScope.$broadcast('logoutSuccessful');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.factory('fctToast', fctToast);\r\n\r\n\tfctToast.$inject = ['$mdToast'];\r\n\r\n\tfunction fctToast($mdToast) {\r\n\t\tvar service = {\r\n\t\t\tshowToast: showToast\r\n\t\t};\r\n\r\n\t\treturn service;\r\n\r\n\t\tfunction showToast(data, success) {\r\n\t\t\tvar toasterClass = 'md-toast-warn';\r\n\r\n\t\t\tif (success) {\r\n\t\t\t\ttoasterClass = 'md-toast-success';\r\n\t\t\t}\r\n\r\n\t\t\tvar toaster = $mdToast.simple()\r\n\t\t\t\t.textContent(data)\r\n\t\t\t\t.position('bottom right')\r\n\t\t\t\t.hideDelay(3000)\r\n\t\t\t\t.toastClass(toasterClass);\r\n\t\t\t$mdToast.show(toaster);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n  'use strict';\r\n\r\n  angular\r\n    .module('fct.core')\r\n    .directive('eventCard', eventCard);\r\n\r\n  eventCard.$inject = [];\r\n\r\n  function eventCard() {\r\n    var directive = {\r\n          restrict: 'E',\r\n          templateUrl: '/templates/components/cards/eventCard.html',\r\n          link: linkFunc,\r\n          scope: {\r\n              eventdata : '=',\r\n              reload : '&'\r\n          },\r\n          controller: 'EventCardController',\r\n          controllerAs: 'ecc'\r\n      };\r\n\r\n      return directive;\r\n\r\n      function linkFunc($scope) {\r\n          $scope.openCard = false;\r\n          $scope.caret = 'expand_less';\r\n          $scope.toggleCard = toggleCard;\r\n\r\n          function toggleCard() {\r\n              $scope.openCard = !($scope.openCard);\r\n              if($scope.openCard === true){\r\n                  $scope.caret = 'expand_more';\r\n              }\r\n              else {\r\n                  $scope.caret = 'expand_less';\r\n              }\r\n          }\r\n      }\r\n\r\n  }\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t.module('fct.core')\r\n\t.directive('fileUpload', fileUpload);\r\n\r\n\tfileUpload.$inject = ['$timeout'];\r\n\r\n\tfunction fileUpload($timeout) {\r\n        return {\r\n            restrict: 'E',\r\n            template: '<div ng-transclude></div>',\r\n            replace: true,\r\n            transclude: true,\r\n            scope: {\r\n                headers: '=',\r\n                ngModel: '=',\r\n                disabled: '='\r\n            },\r\n            require: 'ngModel',\r\n            link: function (scope, el, attr) {\r\n                var fileName,\r\n                    shareCredentials,\r\n                    withPreview,\r\n                    fileSelector,\r\n                    resize,\r\n                    maxWidth,\r\n                    maxHeight,\r\n                    sel;\r\n\r\n                fileName = attr.name || 'userFile';\r\n                shareCredentials = attr.credentials === 'true';\r\n                withPreview = attr.preview === 'true';\r\n                resize = attr.resize === 'true';\r\n                maxWidth = angular.isDefined(attr.maxWidth) ? parseInt(attr.maxWidth) : false;\r\n                maxHeight = angular.isDefined(attr.maxHeight) ? parseInt(attr.maxHeight) : false;\r\n                fileSelector = angular.isDefined(attr.fileSelector) ? attr.fileSelector : false;\r\n\r\n                el.append('<input style=\"display: none !important;\" type=\"file\" ' + (attr.multiple == 'true' ? 'multiple' : '') + ' accept=\"' + (attr.accept ? attr.accept : '') + '\" name=\"' + fileName + '\"/>');\r\n\r\n                function Resize(file, index, type) {\r\n                    var canvas = document.createElement(\"canvas\");\r\n                    var img = document.createElement(\"img\");\r\n                    var reader = new FileReader();\r\n                    reader.onload = function (e) {\r\n                        img.src = e.target.result;\r\n                        draw();\r\n                    };\r\n                    reader.readAsDataURL(file);\r\n\r\n                    function b64toBlob(b64Data, contentType, sliceSize) {\r\n                        contentType = contentType || '';\r\n                        sliceSize = sliceSize || 512;\r\n\r\n                        var byteCharacters = atob(b64Data);\r\n                        var byteArrays = [];\r\n\r\n                        for (var offset = 0; offset < byteCharacters.length; offset += sliceSize) {\r\n                            var slice = byteCharacters.slice(offset, offset + sliceSize);\r\n\r\n                            var byteNumbers = new Array(slice.length);\r\n                            for (var i = 0; i < slice.length; i++) {\r\n                                byteNumbers[i] = slice.charCodeAt(i);\r\n                            }\r\n\r\n                            var byteArray = new Uint8Array(byteNumbers);\r\n\r\n                            byteArrays.push(byteArray);\r\n                        }\r\n\r\n                        var blob = new Blob(byteArrays, {type: contentType});\r\n                        return blob;\r\n                    }\r\n\r\n                    function draw() {\r\n                        var width = img.width;\r\n                        var height = img.height;\r\n                        var ctx = canvas.getContext(\"2d\");\r\n                        ctx.drawImage(img, 0, 0);\r\n\r\n                        if (width > 0 && height > 0) {\r\n                            if (width > height) {\r\n                                if (width > maxWidth) {\r\n                                    height *= maxWidth / width;\r\n                                    width = maxWidth;\r\n                                }\r\n                            } else {\r\n                                if (height > maxHeight) {\r\n                                    width *= maxHeight / height;\r\n                                    height = maxHeight;\r\n                                }\r\n                            }\r\n\r\n                            canvas.width = width;\r\n                            canvas.height = height;\r\n                            ctx.drawImage(img, 0, 0, width, height);\r\n                            var b64 = canvas.toDataURL(type).split(',')[1];\r\n                            file = b64toBlob(b64, type, 512);\r\n                        }\r\n\r\n                        uploadFile(file, index);\r\n                    }\r\n                }\r\n\r\n                function upload(fileProperties, index, file) {\r\n                    if (resize && maxWidth && maxHeight && (file.type.indexOf('image/') !== -1)) {\r\n                        Resize(file, index, file.type);\r\n                    } else {\r\n                        uploadFile(file, index);\r\n                    }\r\n                    return angular.extend(scope.ngModel[index], {\r\n                        name: fileProperties.name,\r\n                        size: fileProperties.size,\r\n                        type: fileProperties.type,\r\n                        status: {},\r\n                        percent: 0,\r\n                        preview: null\r\n                    });\r\n                }\r\n\r\n                function uploadFile(file, index) {\r\n                    var xhr = new XMLHttpRequest(),\r\n                        fd = new FormData(),\r\n                        progress = 0,\r\n                        uri = attr.uri || '/upload/upload';\r\n                    xhr.open('POST', uri, true);\r\n                    xhr.withCredentials = shareCredentials;\r\n                    if (scope.headers) {\r\n                        scope.headers.forEach(function (item) {\r\n                            xhr.setRequestHeader(item.header, item.value);\r\n                        });\r\n                    }\r\n                    xhr.onreadystatechange = function () {\r\n                        scope.ngModel[index].status = {\r\n                            code: xhr.status,\r\n                            statusText: xhr.statusText,\r\n                            response: xhr.response\r\n                        };\r\n                        scope.$apply();\r\n                    };\r\n                    xhr.upload.addEventListener(\"progress\", function (e) {\r\n                        progress = parseInt(e.loaded / e.total * 100);\r\n                        scope.ngModel[index].percent = progress;\r\n                        scope.$apply();\r\n                    }, false);\r\n\r\n                    fd.append(fileName, file);\r\n                    xhr.send(fd);\r\n\r\n                    if (withPreview) {\r\n                        var reader = new FileReader();\r\n                        reader.onload = function (e) {\r\n                            scope.ngModel[index].preview = e.target.result;\r\n                            scope.$apply();\r\n                        };\r\n                        reader.readAsDataURL(file);\r\n                    }\r\n                }\r\n\r\n                $timeout(function () {\r\n                    sel = fileSelector ? angular.element(el[0].querySelectorAll(fileSelector)[0]) : el;\r\n                    sel.bind('click', function () {\r\n                        if (!scope.disabled) {\r\n                            scope.$eval(el.find('input')[0].click());\r\n                        }\r\n                    });\r\n                });\r\n\r\n                angular.element(el.find('input')[0]).bind('change', function (e) {\r\n                    var files = e.target.files;\r\n                    if (!angular.isDefined(scope.ngModel) || attr.multiple === 'true') {\r\n                        scope.ngModel = [];\r\n                    }\r\n                    var f;\r\n                    for (var i = 0; i < files.length; i++) {\r\n                        f = {\r\n                            name: files[i].name,\r\n                            size: files[i].size,\r\n                            type: files[i].type,\r\n                            status: {},\r\n                            percent: 0,\r\n                            preview: null\r\n                        };\r\n                        scope.ngModel.push(f);\r\n                        upload(f, i, files[i]);\r\n                    }\r\n                    scope.$apply();\r\n                });\r\n            }\r\n        };\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddStudentController', AddStudentController);\r\n\r\n\tAddStudentController.$inject = ['$http', 'facultyService', '$rootScope', 'fctToast'];\r\n\r\n\tfunction AddStudentController($http, facultyService, $rootScope, fctToast) {\r\n\t\tvar vm = this;\r\n\t\tvm.coordinator = {};\r\n\t\tvm.editInfo = false;\r\n\t\tvm.preInfo = false;\r\n\t\tvm.updateButtonClicked = false;\r\n\t\tvm.addButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tupdate: update,\r\n\t\t\taddStudentCoordinator: addStudentCoordinator,\r\n\t\t\tedit: edit\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getStudentCoordinator()\r\n\t\t\t\t.then(getStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(getStudentCoordinatorFailure);\r\n\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorSuccess(response) {\r\n\t\t\tif (response.data.student_coordinator) {\r\n\t\t\t\tvm.coordinator = response.data.student_coordinator;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.editInfo = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getStudentCoordinatorFailure(error) {\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction update(event) {\r\n\t\t\tvm.updateButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(editStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction edit() {\r\n\t\t\tvm.editInfo = true;\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinator(event) {\r\n\t\t\tvm.addButtonClicked = true;\r\n\t\t\treturn facultyService.editStudentCoordinator({\r\n\t\t\t\t\tstudent_coordinator: vm.coordinator\r\n\t\t\t\t})\r\n\t\t\t\t.then(addStudentCoordinatorSuccess)\r\n\t\t\t\t.catch(editStudentCoordinatorFailure);\r\n\t\t}\r\n\r\n\t\tfunction addStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.preInfo = true;\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Added Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorSuccess(response) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Student Coordinator Details Updated Successfuly', true);\r\n\t\t}\r\n\r\n\t\tfunction editStudentCoordinatorFailure(error) {\r\n\t\t\tvm.editInfo = false;\r\n\t\t\tvm.addButtonClicked = false;\r\n\t\t\tvm.updateButtonClicked = false;\r\n\t\t\tfctToast.showToast('Error!! Try Again');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationModalController', ConfirmRegistrationModalController);\r\n\r\n\tConfirmRegistrationModalController.$inject = ['$mdDialog', 'registration', 'facultyService'];\r\n\r\n\tfunction ConfirmRegistrationModalController($mdDialog, registration, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = registration;\r\n\t\tvm.registrationButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmData: confirmData,\r\n\t\t\thide: hide,\r\n\t\t\tcancel: cancel\r\n\t\t});\r\n\r\n\t\tfunction confirmData() {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\treturn facultyService.confirmRegistration(registration)\r\n\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\thide(response);\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\t$mdDialog.cancel(error);\r\n\t\t}\r\n\r\n\t\tfunction hide(response) {\r\n\t\t\t$mdDialog.hide(response);\r\n\t\t}\r\n\r\n\t\tfunction cancel() {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController', ConfirmRegistrationsController);\r\n\r\n\tConfirmRegistrationsController.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n\tfunction ConfirmRegistrationsController(facultyService, $mdDialog, fctToast, $scope) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\tconfirmRegistration: confirmRegistration\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistration(event) {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\t// return\r\n\t\t\tvar confirm = $mdDialog.prompt()\r\n\t\t\t\t.title('Enter SERIAL ID')\r\n\t\t\t\t.textContent('Enter the serial id provided in ther Registration Slip')\r\n\t\t\t\t.placeholder('Serial Id')\r\n\t\t\t\t.ariaLabel('Serial Id')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.ok('Submit')\r\n\t\t\t\t.cancel('Cancel');\r\n\r\n\t\t\t$mdDialog.show(confirm).then(function (result) {\r\n\t\t\t\tvm.registration.serialId = result;\r\n\t\t\t\treturn facultyService.confirmRegistration(vm.registration)\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tvm.registration = {};\r\n\t\t\t$scope.confirmRegistrationForm.$setPristine();\r\n\t\t\t$scope.confirmRegistrationForm.$setUntouched();\r\n\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (response.status == 400) {\r\n\t\t\t\tmsg = response.data.error.for;\r\n\t\t\t\tfctToast.showToast(msg);\r\n\t\t\t}\r\n\r\n\t\t\tif (msg) {\r\n\t\t\t\tmsg = response.data.message;\r\n\t\t\t\tfctToast.showToast(msg, true);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ConfirmRegistrationsController1', ConfirmRegistrationsController1);\r\n\r\n\tConfirmRegistrationsController1.$inject = ['facultyService', '$mdDialog', 'fctToast', '$scope'];\r\n\r\n\tfunction ConfirmRegistrationsController1(facultyService, $mdDialog, fctToast, $scope) {\r\n\t\tvar vm = this;\r\n\t\tvm.registration = {};\r\n\t\tvm.registrationButtonClicked = false;\r\n\t\tangular.extend(vm, {\r\n\t\t\t// confirmRegistration: confirmRegistration,\r\n\t\t\tgetRegistrationData: getRegistrationData\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction getFacultyRegistrationData() {\r\n\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction confirmRegistrationSuccess(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\r\n\r\n\t\t\tvar msg;\r\n\r\n\t\t\tif (response.status == 400) {\r\n\t\t\t\tmsg = response.data.error.for;\r\n\t\t\t\tfctToast.showToast(msg);\r\n\t\t\t}\r\n\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\tmsg = response.data.message;\r\n\t\t\t\tfctToast.showToast(msg, true);\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\t$scope.confirmRegistrationForm.$setPristine();\r\n\t\t\t\t$scope.confirmRegistrationForm.$setUntouched();\r\n\r\n\t\t\t} else if (response.status == 404) {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"REGISTRAION NOT FOUND\");\r\n\t\t\t} else if (response.status == 405) {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"REGISTRAION CONFIRMED ALREADY\", true);\r\n\t\t\t} else {\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t\tfctToast.showToast(\"ERROR PLEASE TRY AGAIN\", true);\r\n\t\t\t}\r\n\r\n\t\t}\r\n\t\t//\r\n\t\tfunction confirmRegistrationFailure(error) {\r\n\t\t\tvar msg;\r\n\t\t\tvm.registration = {};\r\n\t\t\tif (error.status == 500) {\r\n\t\t\t\tmsg = 'Internal server error, try again !!';\r\n\t\t\t} else {\r\n\t\t\t\tmsg = error.data.error.for;\r\n\t\t\t}\r\n\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData() {\r\n\t\t\tif (vm.registrationButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registrationButtonClicked = true;\r\n\t\t\t}\r\n\r\n\t\t\tfacultyService.getRegistrationData(vm.registration)\r\n\t\t\t\t.then(getRegistrationDataSuccess)\r\n\t\t\t\t.catch(getRegistrationDataFailure);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationDataFailure(error) {\r\n\t\t\tfctToast.showToast(\"Internet Error, Please Try Again\");\r\n\t\t\tvm.registration = {};\r\n\t\t\tvm.registrationButtonClicked = false;\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationDataSuccess(response) {\r\n\t\t\t// console.log(response);\r\n\t\t\tif (response.status == 200) {\r\n\t\t\t\tvm.registration.teamId = response.data.teamId;\r\n\t\t\t\tvm.registration.email = response.data.email;\r\n\t\t\t\tvm.registration.mobileno = response.data.mobileno;\r\n\t\t\t\tvm.registration.serialId = response.data.serialId;\r\n\r\n\t\t\t\t$mdDialog.show({\r\n\t\t\t\t\t\ttemplateUrl: './templates/components/dialogs/confirmDetailDialog.html',\r\n\t\t\t\t\t\tcontroller: 'ConfirmRegistrationModalController',\r\n\t\t\t\t\t\tcontrollerAs: 'crmc',\r\n\t\t\t\t\t\tlocals: {\r\n\t\t\t\t\t\t\tregistration: vm.registration\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\t\t\tfullscreen: true\r\n\t\t\t\t\t})\r\n\t\t\t\t\t.then(confirmRegistrationSuccess)\r\n\t\t\t\t\t.catch(confirmRegistrationFailure);\r\n\t\t\t} else {\r\n\t\t\t\tfctToast.showToast(\"Registration Not Found\");\r\n\t\t\t\tvm.registrationButtonClicked = false;\r\n\t\t\t\tvm.registration = {};\r\n\t\t\t}\r\n\t\t}\r\n\r\n\r\n\t}\r\n\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultySettingsController', FacultySettingsController);\r\n\r\n\tFacultySettingsController.$inject = ['facultyAuthService', 'fctToast', '$scope', '$rootScope', '$timeout', 'facultyService'];\r\n\r\n\tfunction FacultySettingsController(facultyAuthService, fctToast, $scope, $rootScope, $timeout, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\t\tvm.userDetail = {};\r\n\t\tvm.updateButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword,\r\n\t\t\tupdateFaculty: updateFaculty,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetEachFaculty();\r\n\t\t}\r\n\r\n\t\tfunction getEachFaculty() {\r\n\t\t\treturn facultyService.getEachFaculty()\r\n\t\t\t.then(function (response) {\r\n\t\t\t\tconsole.log(response);\r\n\t\t\t\tvm.userDetail.email = response.data.email;\r\n\t\t\t\tvm.userDetail.mobileno = parseInt(response.data.mobileno);\r\n\t\t\t\tvm.userDetail.name = response.data.name;\r\n\t\t\t\tvm.preInfo = true;\r\n\t\t\t}).catch(function (error) {\r\n\t\t\t\tconsole.log(error);\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction updateFaculty() {\r\n\t\t\tif (vm.updating) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updating = true;\r\n\t\t\t\tvm.updateButtonClicked = true;\r\n\t\t\t\treturn facultyService.updateFaculty(vm.userDetail)\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.userDetail = response.data;\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tvm.editInfo = false;\r\n\t\t\t\t\tgetEachFaculty();\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tvm.updateButtonClicked = false;\r\n\t\t\t\t\tvm.updating = false;\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tfacultyAuthService.changeFacultyPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('FacultyChangePasswordSuccess', FacultyChangePasswordSuccess);\r\n\t\t$rootScope.$on('FacultyChangePasswordFailure', FacultyChangePasswordFailure);\r\n\r\n\t\tfunction FacultyChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction FacultyChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('RegistrationDetailsController', RegistrationDetailsController);\r\n\r\n\tRegistrationDetailsController.$inject = ['fctToast', '$rootScope', 'facultyService'];\r\n\r\n\tfunction RegistrationDetailsController(fctToast, $rootScope, facultyService) {\r\n\t\tvar vm = this;\r\n\t\tvm.noregistration = true;\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyService.getFacultyRegistrations()\r\n\t\t\t\t.then(getRegistrationsSuccess)\r\n\t\t\t\t.catch(getRegistrationsFailure);\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsSuccess(response) {\r\n\r\n\t\t\tif (response.data.registrations.length !== 0) {\r\n\t\t\t\tvm.registrations = response.data.registrations;\r\n\t\t\t\tvm.registrations_count = response.data.totalRegistrations;\r\n\t\t\t\tvm.collected_amount = response.data.totalCollectedAmount;\r\n\t\t\t\tvm.noregistration = false;\r\n\t\t\t} else {\r\n\t\t\t\tvm.noregistration = true;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationsFailure(error) {\r\n\t\t\tfctToast.showToast('Internal Server Error');\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('VerifyCoordinatorController', VerifyCoordinatorController);\r\n\r\n\tVerifyCoordinatorController.$inject = ['$scope', 'memberService', '$mdDialog'];\r\n\r\n\tfunction VerifyCoordinatorController($scope, memberService, $mdDialog) {\r\n\t\tvar vm = this;\r\n\t\tvm.limitFaculty = 5;\r\n\t\tvm.nomoreFaculty = true;\r\n\t\tvm.orderField = 'registrations_count';\r\n\t\tvm.reverseSort = true;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tverifyFaculty: verifyFaculty,\r\n\t\t\trejectFaculty: rejectFaculty,\r\n\t\t\tloadmore: loadmore\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn memberService.getAllFacultyCoordinators()\r\n\t\t\t\t.then(getAllFacultyCoordinatorsSuccess)\r\n\t\t\t\t.catch(getAllFacultyCoordinatorsFailure);\r\n\t\t}\r\n\r\n\r\n\t\tfunction getAllFacultyCoordinatorsSuccess(response) {console.log(response);\r\n\t\t\tvm.faculties = response.data;\r\n\t\t\t// console.log(vm.faculties);\r\n\t\t\tif (vm.limitFaculty <= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = false;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction getAllFacultyCoordinatorsFailure(error) {\r\n\t\t\t//State go to Add Events\r\n\t\t\t//Dashboard\r\n\t\t\t// console.log(error);\r\n\t\t}\r\n\r\n\t\tfunction verifyFaculty(id, index, event) {\r\n\t\t\tvm.verifyingIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Verifying ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Verification')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.verifyFaculty(id)\r\n\t\t\t\t\t.then(verifyFacultySuccess)\r\n\t\t\t\t\t.catch(verifyFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.verifyingIndex].verified = true;\r\n\t\t}\r\n\r\n\t\tfunction verifyFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t}\r\n\r\n\t\tfunction rejectFaculty(id, index, event) {\r\n\t\t\tvm.rejectionIndex = index;\r\n\t\t\tvar confirm = $mdDialog.confirm()\r\n\t\t\t\t.title('Are you sure?')\r\n\t\t\t\t.textContent('You will be Rejecting ' + vm.faculties[index].name + ' as a Faculty Coordinator')\r\n\t\t\t\t.ariaLabel('FCVER')\r\n\t\t\t\t.targetEvent(event)\r\n\t\t\t\t.ok('Confirm Rejection')\r\n\t\t\t\t.theme('normal')\r\n\t\t\t\t.cancel('No, not now !!!');\r\n\t\t\t$mdDialog.show(confirm).then(function () {\r\n\t\t\t\treturn memberService.rejectFaculty(id)\r\n\t\t\t\t\t.then(rejectFacultySuccess)\r\n\t\t\t\t\t.catch(rejectFacultyFailure);\r\n\t\t\t}, function () {\r\n\t\t\t\t//failed\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultySuccess(response) {\r\n\t\t\tvm.faculties[vm.rejectionIndex].rejected = true;\r\n\t\t\tvm.faculties.splice(vm.rejectionIndex, 1);\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFacultyFailure(error) {\r\n\t\t\t//fctToast.show('FAilure');\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction loadmore() {\r\n\t\t\tvm.limitFaculty += 5;\r\n\t\t\tif (vm.limitFaculty >= vm.faculties.length) {\r\n\t\t\t\tvm.nomoreFaculty = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLayoutController', FacultyLayoutController)\r\n\t\t.controller('ContactDialogController', ContactDialogController);\r\n\r\n\tFacultyLayoutController.$inject = ['facultyAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$mdDialog', '$mdMedia', '$scope'];\r\n\r\n\tfunction FacultyLayoutController(facultyAuthService, $mdSidenav, $rootScope, fctToast, $state, $mdDialog, $mdMedia, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\t$scope.$watch(function () {\r\n\t\t\treturn $mdMedia('xs') || $mdMedia('sm');\r\n\t\t});\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t\tcontact: contact\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tfacultyAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\r\n\t\tfunction contact(ev) {\r\n\t\t\tvar useFullScreen = $mdMedia('sm') || $mdMedia('xs');\r\n\t\t\t$mdDialog.show({\r\n\t\t\t\tcontroller: 'ContactDialogController',\r\n\t\t\t\ttemplateUrl: '/templates/components/dialogs/contact.html',\r\n\t\t\t\tparent: angular.element(document.body),\r\n\t\t\t\ttargetEvent: ev,\r\n\t\t\t\tclickOutsideToClose: true,\r\n\t\t\t\tfullscreen: useFullScreen // Only for -xs, -sm breakpoints.\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n\r\n\tContactDialogController.$inject = ['$scope', '$mdDialog'];\r\n\r\n\tfunction ContactDialogController($scope, $mdDialog) {\r\n\t\t$scope.cancel = function () {\r\n\t\t\t$mdDialog.cancel();\r\n\t\t};\r\n\r\n\t\t$scope.hide = function () {\r\n\t\t\t$mdDialog.hide();\r\n\t\t};\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLayoutController', MemberLayoutController);\r\n\r\n\tMemberLayoutController.$inject = ['memberAuthService', '$mdSidenav', '$rootScope', 'fctToast', '$state', '$scope'];\r\n\r\n\tfunction MemberLayoutController(memberAuthService, $mdSidenav, $rootScope, fctToast, $state, $scope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogout: logout,\r\n\t\t\topenLeftSidenav: openLeftSidenav,\r\n\t\t\tisOpenLeftSidenav: isOpenLeftSidenav,\r\n\t\t\tcloseLeftSidenav: closeLeftSidenav,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction logout() {\r\n\t\t\tmemberAuthService.logout();\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('logoutSuccessful', logoutSuccessful);\r\n\r\n\t\tfunction logoutSuccessful(event) {\r\n\t\t\tfctToast.showToast(\"Succesfully Logged out\", true);\r\n\t\t\t$state.go('out.member_login');\r\n\t\t}\r\n\r\n\t\tfunction openLeftSidenav() {\r\n\t\t\t$mdSidenav('left').open();\r\n\t\t}\r\n\r\n\t\tfunction isOpenLeftSidenav() {\r\n\t\t\treturn $mdSidenav('left').isOpen();\r\n\t\t}\r\n\r\n\t\tfunction closeLeftSidenav() {\r\n\t\t\t$mdSidenav('left').close();\r\n\t\t}\r\n\t}\r\n\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('AddEventController', AddEventController);\r\n\r\n\tAddEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$timeout', 'Upload', '$state', 'fctToast', '$filter', 'memberService'];\r\n\r\n\tfunction AddEventController(stateParams, eventService, $rootScope, $timeout, Upload, $state, fctToast, $filter, memberService) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = false;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t\t'event': \"Add\",\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.image = '';\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\t// vm.myEvent.rules = CKEDITOR.instances[\"editorRules\"].getData();\r\n\t\t\t// vm.myEvent.specification = CKEDITOR.instances[\"editorSpecification\"].getData();\r\n\t\t\t// vm.myEvent.judging_criteria = CKEDITOR.instances[\"editorJudgingCriteria\"].getData();\r\n\t\t\tconsole.log(vm.myEvent);\r\n\t\t\tif (vm.myEvent.isUpdate) {\r\n\t\t\t\treturn eventService.updateEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t} else {\r\n\t\t\t\treturn eventService.addEvent(vm.myEvent).then(registerSuccess).catch(registerFailure);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Event Registered.\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\t$state.go('in_tc.showEvent');\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tfile.result = response.data;\r\n\t\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\t\tlink: file.dest,\r\n\t\t\t\t\t\t};\r\n\t\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t\t\tconsole.log(attach);\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\r\n\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIconImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\treponse.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon_image = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t} //dfdf//sdf=\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('DashboardController', DashboardController);\r\n\r\n\tDashboardController.$inject = ['$rootScope', 'memberService', '$window'];\r\n\r\n\tfunction DashboardController($rootScope, memberService, $window) {\r\n\t\tvar vm = this;\r\n\t\tvm.confirmedCount = 0;\r\n\t\tvm.unConfirmedCount = 0;\r\n\t\tvm.totalConfirmedParticipants = 0;\r\n\t\tvm.totalAmountCollected = 0;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tgetVFS: getVFS,\r\n\t\t\tgetUVF: getUVF\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetVFS();\r\n\t\t\tgetUVF();\r\n\t\t\tgetConfirmedRegistrationCount();\r\n\t\t\tgetRegistrationData();\r\n\t\t\t// exportParticipantList();\r\n\t\t}\r\n\r\n\t\tfunction getRegistrationData() {\r\n\t\t\treturn memberService.getRegistrationsByEvent()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvar array = response.data;\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t\tvar each = 0;\r\n\t\t\t\t\tvar index = 0;\r\n\t\t\t\t\tfor (index = 0; index < array.length; index++) {\r\n\t\t\t\t\t\teach += parseInt(array[index].unconfirmed_registrations);\r\n\t\t\t\t\t}\r\n\t\t\t\t}).catch(function (error) {\r\n\t\t\t\t\t// console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getVFS() {\r\n\t\t\treturn memberService.getVerifyFacultyStudent()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.VFSPath = response.data.path;\r\n\t\t\t\t\t// $window.open(response.data.path);\r\n\t\t\t\t\t//console.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t//console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getUVF() {\r\n\t\t\treturn memberService.getUnverifiedFaculty()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.UVFPath = response.data.path;\r\n\t\t\t\t\t// $window.open(response.data.path);\r\n\t\t\t\t\t//console.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\t//console.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction getConfirmedRegistrationCount() {\r\n\t\t\treturn memberService.getConfirmedRegistrationCount()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tvm.confirmedCount = response.data.confirmedCount;\r\n\t\t\t\t\tvm.unConfirmedCount = response.data.unConfirmedCount;\r\n\t\t\t\t\tvm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\r\n\t\t\t\t\tvm.totalAmountCollected = response.data.totalAmountCollected;\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction exportParticipantList() {\r\n\t\t\treturn memberService.exportParticipantList()\r\n\t\t\t\t.then(function (response) {\r\n\t\t\t\t\tconsole.log(response);\r\n\t\t\t\t})\r\n\t\t\t\t.catch(function (error) {\r\n\t\t\t\t\tconsole.log(error);\r\n\t\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// (function() {\r\n//     'use strict';\r\n//\r\n//     angular\r\n//         .module('fct.core')\r\n//         .controller('DashboardController', DashboardController);\r\n//\r\n//     DashboardController.$inject = ['$rootScope', 'memberService', '$window'];\r\n//\r\n//     function DashboardController($rootScope, memberService, $window) {\r\n//         var vm = this;\r\n//         vm.confirmedCount = 0;\r\n//         vm.unConfirmedCount = 0;\r\n//         vm.totalConfirmedParticipants = 0;\r\n//         vm.totalAmountCollected = 0;\r\n//\r\n//         angular.extend(vm, {\r\n//             getVFS: getVFS,\r\n//             getUVF: getUVF\r\n//         });\r\n//\r\n//         activate();\r\n//\r\n//         function activate() {\r\n//             getVFS();\r\n//             getUVF();\r\n//             getConfirmedRegistrationCount();\r\n//             // exportParticipantList();\r\n//         }\r\n//\r\n//         function getVFS() {\r\n//             return memberService.getVerifyFacultyStudent()\r\n//                 .then(function(response) {\r\n//                     vm.VFSPath = response.data.path;\r\n//                     // $window.open(response.data.path);\r\n//                     //console.log(response);\r\n//                 })\r\n//                 .catch(function(error) {\r\n//                     //console.log(error);\r\n//                 });\r\n//         }\r\n//\r\n//         function getUVF() {\r\n//             return memberService.getUnverifiedFaculty()\r\n//                 .then(function(response) {\r\n//                     vm.UVFPath = response.data.path;\r\n//                     // $window.open(response.data.path);\r\n//                     //console.log(response);\r\n//                 })\r\n//                 .catch(function(error) {\r\n//                     //console.log(error);\r\n//                 });\r\n//         }\r\n//\r\n//         function getConfirmedRegistrationCount() {\r\n//           return memberService.getConfirmedRegistrationCount()\r\n//             .then(function(response) {\r\n//               vm.confirmedCount = response.data.confirmedCount;\r\n//               vm.unConfirmedCount = response.data.unConfirmedCount;\r\n//               vm.totalConfirmedParticipants = response.data.totalConfirmedParticipants;\r\n//               vm.totalAmountCollected = response.data.totalAmountCollected;\r\n//               console.log(response);\r\n//             })\r\n//             .catch(function(error) {\r\n//               console.log(error);\r\n//             });\r\n//         }\r\n//\r\n//         function exportParticipantList() {\r\n//           return memberService.exportParticipantList()\r\n//             .then(function(response) {\r\n//                 console.log(response);\r\n//             })\r\n//             .catch(function(error) {\r\n//                 console.log(error);\r\n//             });\r\n//           }\r\n//     }\r\n// })();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EachEventController', EachEventController);\r\n\r\n    EachEventController.$inject = ['$stateParams', 'eventService', '$sce'];\r\n\r\n    function EachEventController(stateParams, eventService, $sce) {\r\n        var vm = this;\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          if(stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n            vm.eventId = stateParams.eventId;\r\n            getEvent();\r\n          }\r\n\t\t    }\r\n\r\n        function getEvent() {\r\n          return eventService.getSingleEvent(vm.eventId)\r\n            .then(getEventSuccess)\r\n            .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.myEvent = response.data;\r\n          vm.rules = $sce.trustAsHtml(vm.myEvent.rules);\r\n          vm.judging_criteria = $sce.trustAsHtml(vm.myEvent.judging_criteria);\r\n          vm.specification = $sce.trustAsHtml(vm.myEvent.specification);\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('EventCardController', EventCardController);\r\n\r\n    EventCardController.$inject = ['eventService', '$mdDialog', 'memberService', '$scope'];\r\n\r\n    function EventCardController(eventService, $mdDialog, memberService, $scope) {\r\n        var vm = this;\r\n        vm.openCard = false;\r\n        vm.caret = 'expand_less';\r\n\r\n        angular.extend(vm, {\r\n            deleteEvent: deleteEvent,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n\r\n        }\r\n\r\n        function deleteEvent(id) {\r\n          if(id !== undefined && id !== null) {\r\n            vm.deleteId = id;\r\n            return memberService.getDeleteModal()\r\n              .then(confirmedDelete)\r\n              .catch(unconfirmedDelete);\r\n          }\r\n          return null;\r\n        }\r\n\r\n        function confirmedDelete() {\r\n          return eventService.deleteEvent(vm.deleteId)\r\n            .then(deleteEventSuccess)\r\n            .catch(deleteEventFailure);\r\n        }\r\n\r\n        function unconfirmedDelete() {\r\n          //\r\n        }\r\n\r\n        function deleteEventSuccess(response) {\r\n          console.log(response);\r\n          $scope.reload();\r\n          // vm.reload();\r\n        }\r\n\r\n        function deleteEventFailure(error) {\r\n          console.log(error);\r\n          //redirect\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('EventRegistrationController', EventRegistrationController);\r\n\r\n\tEventRegistrationController.$inject = ['memberService', '$window'];\r\n\r\n\tfunction EventRegistrationController(memberService, $window) {\r\n\t\tvar vm = this;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tgetExcel: getExcel\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tgetRegistration();\r\n\t\t}\r\n\r\n\t\tfunction getRegistration() {\r\n\t\t\treturn memberService.getRegistrationsByEvent().then(success).catch(failure);\r\n\t\t}\r\n\r\n\t\tfunction success(response) {\r\n\t\t\tvm.eventDetails = response.data;\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction failure(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\r\n\t\tfunction getExcel(event_name, confirmed) {\r\n\t\t\tvar input = {\r\n\t\t\t\tevent_name: event_name,\r\n\t\t\t\tconfirmation: confirmed,\r\n\t\t\t};\r\n\t\t\tvar json = JSON.stringify(input);\r\n\t\t\tmemberService.getEventRegistrationExcel(json).then(function (response) {\r\n\t\t\t\t$window.open(response.data.path);\r\n\t\t\t})\r\n\t\t\t.catch(function (error) {\r\n\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberSettingsController', MemberSettingsController);\r\n\r\n\tMemberSettingsController.$inject = ['memberAuthService', 'fctToast', '$scope', '$rootScope', '$timeout'];\r\n\r\n\tfunction MemberSettingsController(memberAuthService, fctToast, $scope, $rootScope, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.updateInfo = false;\r\n\t\t$scope.changePasswordForm = {};\r\n\t\tvm.user = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction changePassword(event) {\r\n\t\t\tif (vm.updateInfo) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.updateInfo = true;\r\n\t\t\t\tmemberAuthService.changeMemberPassword(vm.user);\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('MemberChangePasswordSuccess', MemberChangePasswordSuccess);\r\n\t\t$rootScope.$on('MemberChangePasswordFailure', MemberChangePasswordFailure);\r\n\r\n\t\tfunction MemberChangePasswordSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Password Changed Successfully\", true);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\r\n\t\t}\r\n\r\n\t\tfunction MemberChangePasswordFailure(event, error) {\r\n\t\t\tfctToast.showToast(error.data.message);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tresetForm();\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\tvm.updateInfo = false;\r\n\t\t\t$scope.changePasswordForm.$setPristine();\r\n\t\t\t$scope.changePasswordForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('ParticipantRegistrationController', ParticipantRegistrationController);\r\n\r\n\tParticipantRegistrationController.$inject = ['$http'];\r\n\r\n\tfunction ParticipantRegistrationController($http) {\r\n\t\tvar vm = this;\r\n\t\tvm.myParticipant = {\r\n\t\t\teventObject: {\r\n\t\t\t\tevent_id: 123123,\r\n\t\t\t\tevent_shortcode: 'EVET'\r\n\t\t\t},\r\n\t\t\tother_participants: []\r\n\t\t};\r\n    vm.otherParticipants = [];\r\n\t\tvm.myParticipant.other_participants = [];\r\n    vm.maxParticipants = 4;\r\n    vm.eventPrice = 50;\r\n    vm.esflag = false;\r\n    vm.nopflag = false;\r\n\r\n\t\tangular.extend(vm, {\r\n      getParticipantLength : getParticipantLength,\r\n      save : save,\r\n      openParticipantModule : openParticipantModule,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\tvar x = '{\"eventObject\": {\"event_id\": \"123123\",\"event_shortcode\": \"EVET\",\"event_section\": \"1\",\"event_name\": \"1\"},\"other_participants\": [{\"title\": \"Team Member\",\"leaderFlag\": false,\"$$hashKey\": \"object:68\",\"name\": \"cl\",\"email\": \"d@ddc.c\",\"college_name\": \"1\",\"branch\": \"2\",\"semester\": \"6\",\"mobileno\": \"43223443223\",\"enrollment\": \"322342342342343\"}],\"total_amount\": 100,\"numberOfParticipant\": \"2\",\"do_payment\": true,\"team_leader\": {\"title\": \"Team Leader\",\"leaderFlag\": true,\"$$hashKey\": \"object:67\",\"name\": \"fd\",\"email\": \"s@sd.3\",\"mobileno\": \"12341232133\",\"college_name\": \"1\",\"branch\": \"1\",\"semester\": \"2\",\"enrollment\": \"231312312332333\"}}';\r\n\t\t\treturn $http.post('/api/registration/create', x)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n    function openParticipantModule(total) {\r\n      vm.nopflag = true;\r\n      var first = true;\r\n      vm.myParticipant.other_participants = [];\r\n      while(total > 0) {\r\n        var each = {\"title\": (first) ? \"Team Leader\" : \"Team Member\",\r\n                    \"leaderFlag\": first};\r\n        vm.myParticipant.other_participants.push(each);\r\n        first = false;\r\n        total--;\r\n      }\r\n    }\r\n\r\n    function getParticipantLength() {\r\n      return vm.myParticipant.other_participants.length;\r\n    }\r\n\r\n\t\tfunction save() {\r\n\t\t\tvm.myParticipant.do_payment = true;\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\tvm.myParticipant.team_leader = vm.myParticipant.other_participants[0];\r\n\t\t\tvm.myParticipant.other_participants.splice(0, 1);\r\n\t\t\tconsole.log(JSON.stringify(vm.myParticipant));\r\n\t\t\treturn $http.post('/api/registration/create', vm.myParticipant)\r\n\t\t\t\t.then(resolveFunc)\r\n\t\t\t\t.catch(rejectFunc);\r\n\t\t}\r\n\r\n\t\tfunction resolveFunc(response) {\r\n\t\t\tconsole.log(response);\r\n\t\t}\r\n\r\n\t\tfunction rejectFunc(error) {\r\n\t\t\tconsole.log(error);\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n    'use strict';\r\n\r\n    angular\r\n      .module('fct.core')\r\n      .controller('ShowEventController', ShowEventController);\r\n\r\n    ShowEventController.$inject = ['eventService'];\r\n\r\n    function ShowEventController(eventService) {\r\n        var vm = this;\r\n\r\n        angular.extend(vm, {\r\n            getEvents: getEvents,\r\n        });\r\n\r\n        activate();\r\n\r\n        function activate() {\r\n          getEvents();\r\n        }\r\n\r\n        function getEvents() {\r\n            return eventService.getEvent()\r\n              .then(getEventSuccess)\r\n              .catch(getEventFailure);\r\n        }\r\n\r\n        function getEventSuccess(response) {\r\n          console.log(response);\r\n          vm.dummyEvents = response.data;\r\n        }\r\n\r\n        function getEventFailure(error) {\r\n          console.log(error);\r\n        }\r\n    }\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('UpdateEventController', UpdateEventController);\r\n\r\n\tUpdateEventController.$inject = ['$stateParams', 'eventService', '$rootScope', '$state', 'fctToast', 'memberService', 'Upload', '$timeout'];\r\n\r\n\tfunction UpdateEventController(stateParams, eventService, $rootScope, state, fctToast, memberService, Upload, $timeout) {\r\n\t\tvar vm = this;\r\n\t\tvm.isUpdate = true;\r\n\t\tvm.myEvent = {\r\n\t\t\t'managers': [],\r\n\t\t};\r\n\t\tvm.myEvent.attachments = [];\r\n\t\tvm.files = [];\r\n\t\tvm.feeDisabled = false;\r\n\t\tvm.myEvent.do_payment = false;\r\n\t\tvm.loadIndex = 0;\r\n\t\tvm.loadCompleted = 3;\r\n\t\tvm.myEvent.image = null;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsave: save,\r\n\t\t\topenManagersModal: openManagersModal,\r\n\t\t\tuploadFiles: uploadFiles,\r\n\t\t\tfeeTypeChanged: feeTypeChanged,\r\n\t\t\tdoneLoading: doneLoading,\r\n\t\t\tuploadImage: uploadImage,\r\n\t\t\tuploadIconImage: uploadIconImage,\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\t//memberService.initializeCKEditor();\r\n\t\t\t//checkEventId();\r\n\t\t}\r\n\r\n\t\tfunction doneLoading() {\r\n\t\t\tvm.loadIndex++;\r\n\t\t\tif (vm.loadIndex == vm.loadCompleted) {\r\n\t\t\t\tcheckEventId();\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction openManagersModal(total) {\r\n\t\t\tvm.myEvent.managers = [];\r\n\t\t\twhile (total > 0) {\r\n\t\t\t\tvar each = {\r\n\t\t\t\t\t\"index\": 1\r\n\t\t\t\t};\r\n\t\t\t\tvm.myEvent.managers.push(each);\r\n\t\t\t\ttotal--;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction checkEventId() {\r\n\t\t\tif (stateParams.eventId !== undefined && stateParams.eventId !== null) {\r\n\t\t\t\tvm.eventId = stateParams.eventId;\r\n\t\t\t\treturn eventService.getSingleEvent(vm.eventId)\r\n\t\t\t\t\t.then(onEventGetSuccess)\r\n\t\t\t\t\t.catch(onEventGetFailure);\r\n\r\n\t\t\t}\r\n\t\t\treturn null;\r\n\t\t}\r\n\r\n\t\tfunction onEventGetSuccess(eventData) {\r\n\t\t\tconsole.log(eventData);\r\n\t\t\tvm.myEvent = eventData.data;\r\n\t\t\tvm.myEvent.event = \"Update\";\r\n\t\t\tvm.myEvent.totalManager = vm.myEvent.managers.length;\r\n\t\t\tvm.files = vm.myEvent.attachments;\r\n\t\t\t// return [CKEDITOR.instances['editorRules'].setData(vm.myEvent.rules),\r\n\t\t\t// \tCKEDITOR.instances['editorSpecification'].setData(vm.myEvent.specification),\r\n\t\t\t// \tCKEDITOR.instances['editorJudgingCriteria'].setData(vm.myEvent.judging_criteria)];\r\n\t\t}\r\n\r\n\t\tfunction onEventGetFailure(error) {\r\n\t\t\tconsole.log(error);\r\n\r\n\t\t}\r\n\r\n\t\tfunction feeTypeChanged() {\r\n\t\t\tswitch (vm.myEvent.fees_type) {\r\n\t\t\tcase \"no_payment\":\r\n\t\t\t\tvm.myEvent.fees = 0;\r\n\t\t\t\tvm.feeDisabled = true;\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"do_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = true;\r\n\t\t\t\tbreak;\r\n\t\t\tcase \"late_payment\":\r\n\t\t\t\tvm.myEvent.do_payment = false;\r\n\t\t\t\tbreak;\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\tfunction save() {\r\n\t\t\treturn eventService.updateEvent(vm.eventId, vm.myEvent)\r\n\t\t\t\t.then(onUpdateSuccess)\r\n\t\t\t\t.catch(onUpdateFailure);\r\n\t\t}\r\n\r\n\t\tfunction onUpdateSuccess(response) {\r\n\t\t\tfctToast.showToast(\"Update Success.\", true);\r\n\t\t\tstate.go('in_tc.showEvent');\r\n\t\t}\r\n\r\n\t\tfunction onUpdateFailure(error) {\r\n\t\t\tfctToast.showToast(\"Please try again later.\");\r\n\t\t}\r\n\r\n\t\tfunction uploadFiles(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tvm.files.push(file);\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/upload',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvar attach = {\r\n\t\t\t\t\t\tdoc_name: file.name,\r\n\t\t\t\t\t\tlink: response.data.path,\r\n\t\t\t\t\t};\r\n\t\t\t\t\tvm.myEvent.attachments.push(attach);\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0)\r\n\t\t\t\t\t\tvm.errorMsg = response.status + ': ' + response.data;\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadImage',\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\t$timeout(function () {\r\n\t\t\t\t\t\tvm.myEvent.event_image = response.data.path;\r\n\t\t\t\t\t});\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\r\n\t\tfunction uploadIconImage(files, errFiles) {\r\n\t\t\tangular.forEach(files, function (file) {\r\n\t\t\t\tfile.upload = Upload.upload({\r\n\t\t\t\t\turl: '/api/members/uploadIcons',\r\n\r\n\t\t\t\t\tdata: {\r\n\t\t\t\t\t\tfile: file\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t\tfile.upload.then(function (response) {\r\n\t\t\t\t\t// console.log(response);\r\n\t\t\t\t\tvm.myEvent.event_icon = response.data.path;\r\n\t\t\t\t}, function (response) {\r\n\t\t\t\t\tif (response.status > 0) {\r\n\t\t\t\t\t\t//console.log(reponse);\r\n\t\t\t\t\t}\r\n\t\t\t\t}, function (evt) {\r\n\t\t\t\t\tfile.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));\r\n\t\t\t\t});\r\n\t\t\t});\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordApplyController', FacultyForgotPasswordApplyController);\r\n\r\n\tFacultyForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyForgotPasswordApplyController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tconsole.log(\"HHHIII\");\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"222\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordApply', facultyForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordApply', facultyForgotPasswordApplyFailure);\r\n\r\n\t\tfunction facultyForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\t//df\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyForgotPasswordSetController', FacultyForgotPasswordSetController);\r\n\r\n\tFacultyForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope', '$stateParams', '$location'];\r\n\r\n\tfunction FacultyForgotPasswordSetController($scope, fctToast, facultyAuthService, $state, $rootScope, $stateParams, $location) {\r\n\t\tvar vm = this;\r\n\t\tconsole.log(\"URL\", $location.url());\r\n\t\tvar uriLi = $location.url();\r\n\t\turiLi = uriLi.replace('#x3D;', '=');\r\n\t\turiLi = uriLi.replace('&%23x3D;', '=');\r\n\t\tvar fi, si, ti, foi;\r\n\t\tfi = uriLi.indexOf('=');\r\n\t\tsi = uriLi.indexOf('&');\r\n\t\tti = uriLi.indexOf('=', fi + 1);\r\n\t\tfoi = uriLi.length;\r\n\r\n\t\tvar utoken = uriLi.substring(fi + 1, si);\r\n\t\t// console.log(\"utoken\", utoken);\r\n\r\n\t\tvar userid = uriLi.substring(ti + 1, foi);\r\n\t\t// console.log(\"uid\", userid);\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = utoken;\r\n\t\t\tvar uid = userid;\r\n\r\n\t\t\tfacultyAuthService.facultyForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyForgotPasswordSet', facultyForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyForgotPasswordSet', facultyForgotPasswordSetFailure);\r\n\r\n\t\tfunction facultyForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction facultyForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyLoginController', FacultyLoginController);\r\n\r\n\tFacultyLoginController.$inject = ['$scope', 'fctToast', 'facultyAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction FacultyLoginController($scope, fctToast, facultyAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.faculty) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('FacultyRegistrationController', FacultyRegistrationController);\r\n\r\n\tFacultyRegistrationController.$inject = ['facultyAuthService', '$scope', 'fctToast', '$rootScope', '$state', '$timeout', '$q'];\r\n\r\n\tfunction FacultyRegistrationController(facultyAuthService, $scope, fctToast, $rootScope, $state, $timeout, $q) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\t// vm.states = loadAll();\r\n\t\tvm.selectedItem = null;\r\n\t\tvm.searchText = null;\r\n\t\tvm.querySearch = querySearch;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\t\t\treturn facultyAuthService.getColleges()\r\n\t\t\t\t.then(getCollegesSuccess)\r\n\t\t\t\t.catch(getCollegesError);\r\n\t\t}\r\n\r\n\t\tfunction getCollegesSuccess(response) {\r\n\t\t\tvm.colleges = response.data;\r\n\t\t}\r\n\r\n\t\tfunction getCollegesError(error) {\r\n\t\t\tfctToast.showToast('Error in getting colleges');\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tfacultyAuthService.facultyRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessFacultyRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorFacultyRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_fc.guidelines');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = 'Email already registered';\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\r\n\r\n\r\n\t\tfunction querySearch(query) {\r\n\t\t\tvar results = query ? vm.colleges.filter(createFilterFor(query)) : vm.colleges;\r\n\t\t\tvar deferred = $q.defer();\r\n\t\t\tconsole.log(results);\r\n\t\t\t$timeout(function () {\r\n\t\t\t\tdeferred.resolve(results);\r\n\t\t\t}, Math.random() * 1000, false);\r\n\t\t\treturn deferred.promise;\r\n\t\t}\r\n\r\n\t\t// function loadAll() {\r\n\t\t// \tvar allStates = 'Alabama, Alaska, Arizona, Arkansas, California, Colorado, Connecticut, Delaware, Florida, Georgia, Hawaii, Idaho, Illinois, Indiana, Iowa, Kansas, Kentucky, Louisiana';\r\n\t\t//\r\n\t\t// \treturn allStates.split(/, +/g).map(function (state) {\r\n\t\t// \t\treturn {\r\n\t\t// \t\t\tvalue: state.toLowerCase(),\r\n\t\t// \t\t\tdisplay: state\r\n\t\t// \t\t};\r\n\t\t// \t});\r\n\t\t// }\r\n\r\n\r\n\t\tfunction createFilterFor(query) {\r\n\t\t\tvar lowercaseQuery = angular.lowercase(query);\r\n\t\t\treturn function filterFn(college) {\r\n\t\t\t\tvar matches = college.name.match(/\\b(\\w)/g);\r\n\t\t\t\tvar acronym = matches.join('');\r\n\t\t\t\tacronym = acronym.toLowerCase();\r\n\t\t\t\treturn (college.name.toLowerCase().trim().indexOf(lowercaseQuery) === 0 ||\r\n\t\t\t\t\tacronym.indexOf(lowercaseQuery) === 0);\r\n\t\t\t};\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordApplyController', MemberForgotPasswordApplyController);\r\n\r\n\tMemberForgotPasswordApplyController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberForgotPasswordApplyController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\r\n\t\tvm.user = {};\r\n\t\tvm.submitButtonClicked = false;\r\n\t\tvm.applied = false;\r\n\t\t$scope.forgotPasswordApplyForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tsubmit: submit\r\n\t\t});\r\n\r\n\t\tfunction submit(event) {\r\n\t\t\tconsole.log(\"HIII\");\r\n\t\t\tif (vm.submitButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.submitButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberForgotPasswordApply(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordApply', memberForgotPasswordApplySuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordApply', memberForgotPasswordApplyFailure);\r\n\r\n\t\tfunction memberForgotPasswordApplySuccess(event) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordApplyFailure(event, error) {\r\n\t\t\tvm.submitButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordApplyForm.$setUntouched();\r\n\t\t\t\tvm.applied = true;\r\n\t\t\t} else {\r\n\t\t\t\t$scope.forgotPasswordApplyForm.email.$error.not_registered = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberForgotPasswordSetController', MemberForgotPasswordSetController);\r\n\r\n\tMemberForgotPasswordSetController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope', '$stateParams'];\r\n\r\n\tfunction MemberForgotPasswordSetController($scope, fctToast, memberAuthService, $state, $rootScope, $stateParams) {\r\n\t\tvar vm = this;\r\n\r\n\r\n\t\tvm.token = Boolean($stateParams.token);\r\n\t\t// console.log(\"token\", vm.token);\r\n\t\tvm.user = {};\r\n\t\tvm.changePasswordButtonClicked = false;\r\n\t\tvm.set = false;\r\n\t\t$scope.forgotPasswordSetForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tchangePassword: changePassword\r\n\t\t});\r\n\r\n\t\tfunction changePassword() {\r\n\t\t\tif (vm.changePasswordButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.changePasswordButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tnewUser.token = $stateParams.token;\r\n\t\t\tvar uid = $stateParams.id;\r\n\r\n\t\t\tmemberAuthService.memberForgotPasswordSet(newUser, uid);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberForgotPasswordSet', memberForgotPasswordSetSuccess);\r\n\t\t$rootScope.$on('ErrorMemberForgotPasswordSet', memberForgotPasswordSetFailure);\r\n\r\n\t\tfunction memberForgotPasswordSetSuccess(event) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction memberForgotPasswordSetFailure(event, error) {\r\n\t\t\tvm.changePasswordButtonClicked = false;\r\n\t\t\tresetForm(error);\r\n\t\t}\r\n\r\n\t\tfunction resetForm(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setPristine();\r\n\t\t\t\t$scope.forgotPasswordSetForm.$setUntouched();\r\n\t\t\t\tvm.set = true;\r\n\t\t\t} else {\r\n\t\t\t\tvm.error = true;\r\n\t\t\t\tvm.errorMsg = error.data.error.for;\r\n\t\t\t\tvm.set = true;\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberLoginController', MemberLoginController);\r\n\r\n\tMemberLoginController.$inject = ['$scope', 'fctToast', 'memberAuthService', '$state', '$rootScope'];\r\n\r\n\tfunction MemberLoginController($scope, fctToast, memberAuthService, $state, $rootScope) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.loginButtonClicked = false;\r\n\t\t$scope.loginForm = {};\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tlogin: login\r\n\t\t});\r\n\r\n\r\n\t\tfunction login() {\r\n\t\t\tif (vm.loginButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.loginButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tmemberAuthService.memberLogin(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberLogin', loginSuccess);\r\n\t\t$rootScope.$on('ErrorMemberLogin', loginFailure);\r\n\r\n\t\tfunction loginSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Logged In\", true);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tresetLogin();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction loginFailure(event, error) {\r\n\t\t\tvar msg = error.data.error.message.message.toString();\r\n\t\t\t// console.log(error);\r\n\t\t\tvm.loginButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetLogin(error);\r\n\t\t}\r\n\r\n\t\tfunction resetLogin(error) {\r\n\t\t\tif (angular.isUndefined(error)) {\r\n\t\t\t\tvm.user = {};\r\n\t\t\t\t$scope.loginForm.$setPristine();\r\n\t\t\t\t$scope.loginForm.$setUntouched();\r\n\t\t\t} else {\r\n\t\t\t\tif (error.data.error.message.errorState.member) {\r\n\t\t\t\t\tvm.user.email = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = false;\r\n\t\t\t\t\t$scope.loginForm.email.$error.not_registered = true;\r\n\t\t\t\t} else {\r\n\t\t\t\t\tvm.user.password = null;\r\n\t\t\t\t\t$scope.loginForm.password.$error.incorrect = true;\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t}\r\n})();\r\n","(function () {\r\n\t'use strict';\r\n\r\n\tangular\r\n\t\t.module('fct.core')\r\n\t\t.controller('MemberRegistrationController', MemberRegistrationController);\r\n\r\n\tMemberRegistrationController.$inject = ['memberAuthService', '$scope', 'fctToast', '$rootScope', '$state'];\r\n\r\n\tfunction MemberRegistrationController(memberAuthService, $scope, fctToast, $rootScope, $state) {\r\n\t\tvar vm = this;\r\n\t\tvm.user = {};\r\n\t\tvm.registerButtonClicked = false;\r\n\r\n\t\tangular.extend(vm, {\r\n\t\t\tregister: register\r\n\t\t});\r\n\r\n\t\tactivate();\r\n\r\n\t\tfunction activate() {\r\n\r\n\t\t}\r\n\r\n\t\tfunction register() {\r\n\t\t\tif (vm.registerButtonClicked) {\r\n\t\t\t\tevent.preventDefault();\r\n\t\t\t} else {\r\n\t\t\t\tvm.registerButtonClicked = true;\r\n\t\t\t}\r\n\t\t\tvar newUser = angular.copy(vm.user);\r\n\t\t\tconsole.log(newUser);\r\n\t\t\tmemberAuthService.memberRegister(newUser);\r\n\t\t}\r\n\r\n\t\t$rootScope.$on('SuccessMemberRegister', registerSuccess);\r\n\t\t$rootScope.$on('ErrorMemberRegister', registerFailure);\r\n\r\n\t\tfunction registerSuccess(event) {\r\n\t\t\tfctToast.showToast(\"Succefully Registered\", true);\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tresetForm();\r\n\t\t\t$state.go('in_tc.verifyCoordinator');\r\n\t\t}\r\n\r\n\t\tfunction registerFailure(event, error) {\r\n\t\t\tvar msg = error.data.errMsg.toString();\r\n\t\t\tvm.registerButtonClicked = false;\r\n\t\t\tfctToast.showToast(msg);\r\n\t\t\tresetForm();\r\n\t\t}\r\n\r\n\t\tfunction resetForm() {\r\n\t\t\tvm.user = {};\r\n\t\t\t$scope.registerForm.$setPristine();\r\n\t\t\t$scope.registerForm.$setUntouched();\r\n\t\t}\r\n\t}\r\n})();\r\n","(function() {\r\n\r\n    angular.module('fct.core')\r\n      .animation('.slide-vertical', slideVertical);\r\n\r\n    slideVertical.$inject = ['TweenMax'];\r\n\r\n    function slideVertical(TweenMax) {\r\n        return {\r\n            addClass: addHideClass,\r\n            removeClass: removeHideClass\r\n        };\r\n    }\r\n\r\n    function addHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        // var timeline = new TimelineMax();\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.3, {opacity: 1, ease: Power0.easeNone});\r\n        TweenMax.to(element, 0.4, {height:0, ease:  Power2.easeOut, onComplete: done}).delay(0.25);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n\r\n    }\r\n\r\n    function removeHideClass(element, className, done) {\r\n      if (className == 'ng-hide') {\r\n        element.removeClass('ng-hide');\r\n        TweenMax.set(element,{height:\"auto\", opacity:0});\r\n        TweenMax.from(element, 0.4, {height:0, ease: Power2.easeIn});\r\n        TweenMax.to(element, 0.3, {opacity: 1, ease: Power2.easeIn, onComplete:done}).delay(0.35);\r\n      }\r\n      else {\r\n        done();\r\n      }\r\n    }\r\n})();\r\n"]}
>>>>>>> bed9651bd7e7e9a53eb5a4614f0adf8ae57fa945
